{
    "sourceFile": "frontend/src/ProgressForm.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1730947155570,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1730947644485,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,16 +22,13 @@\n         e.preventDefault();\r\n \r\n         try {\r\n             const token = localStorage.getItem('token');\r\n-            // Supongamos que necesitamos los datos de los últimos 7 días\r\n             const userData = [\r\n-                // Datos simulados, en una implementación real los obtendrías del estado o backend\r\n-                [/* Datos del día 1 */],\r\n-                [/* Datos del día 2 */],\r\n-                // ...\r\n-                [/* Datos del día 7 */],\r\n+                [/* Peso */, /* Calorías consumidas */, /* Calorías quemadas */, /* Horas de sueño */, /* Pasos caminados */],\r\n+                // Datos de días anteriores\r\n             ];\r\n+\r\n             const response = await axios.post('http://127.0.0.1:8000/predict_progreso', userData, {\r\n                 headers: {\r\n                     Authorization: `Bearer ${token}`,\r\n                 },\r\n@@ -52,9 +49,17 @@\n                 value={dailyData.weight}\r\n                 onChange={handleChange}\r\n                 required\r\n             />\r\n-            {/* Otros campos para caloriesConsumed, caloriesBurned, etc. */}\r\n+            <input\r\n+                type=\"number\"\r\n+                name=\"caloriesConsumed\"\r\n+                placeholder=\"Calorías Consumidas\"\r\n+                value={dailyData.caloriesConsumed}\r\n+                onChange={handleChange}\r\n+                required\r\n+            />\r\n+            {/* Otros campos */}\r\n             <button type=\"submit\">Obtener Predicciones</button>\r\n         </form>\r\n     );\r\n };\r\n"
                },
                {
                    "date": 1730947661648,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,67 @@\n+// frontend/src/components/ProgressForm.js\r\n+import React, { useState } from 'react';\r\n+import axios from 'axios';\r\n+\r\n+const ProgressForm = ({ onPredictionsReceived }) => {\r\n+    const [dailyData, setDailyData] = useState({\r\n+        weight: '',\r\n+        caloriesConsumed: '',\r\n+        caloriesBurned: '',\r\n+        hoursSleep: '',\r\n+        stepsWalked: '',\r\n+    });\r\n+\r\n+    const handleChange = (e) => {\r\n+        setDailyData({\r\n+            ...dailyData,\r\n+            [e.target.name]: e.target.value,\r\n+        });\r\n+    };\r\n+\r\n+    const handleSubmit = async (e) => {\r\n+        e.preventDefault();\r\n+\r\n+        try {\r\n+            const token = localStorage.getItem('token');\r\n+            const userData = [\r\n+                [/* Peso */, /* Calorías consumidas */, /* Calorías quemadas */, /* Horas de sueño */, /* Pasos caminados */],\r\n+                // Datos de días anteriores\r\n+            ];\r\n+\r\n+            const response = await axios.post('http://127.0.0.1:8000/predict_progreso', userData, {\r\n+                headers: {\r\n+                    Authorization: `Bearer ${token}`,\r\n+                },\r\n+            });\r\n+            onPredictionsReceived(response.data);\r\n+        } catch (error) {\r\n+            console.error('Error al obtener las predicciones:', error);\r\n+        }\r\n+    };\r\n+\r\n+    return (\r\n+        <form onSubmit={handleSubmit}>\r\n+            <h2>Registrar Datos Diarios</h2>\r\n+            <input\r\n+                type=\"number\"\r\n+                name=\"weight\"\r\n+                placeholder=\"Peso (kg)\"\r\n+                value={dailyData.weight}\r\n+                onChange={handleChange}\r\n+                required\r\n+            />\r\n+            <input\r\n+                type=\"number\"\r\n+                name=\"caloriesConsumed\"\r\n+                placeholder=\"Calorías Consumidas\"\r\n+                value={dailyData.caloriesConsumed}\r\n+                onChange={handleChange}\r\n+                required\r\n+            />\r\n+            {/* Otros campos */}\r\n+            <button type=\"submit\">Obtener Predicciones</button>\r\n+        </form>\r\n+    );\r\n+};\r\n+\r\n+export default ProgressForm;\r\n"
                }
            ],
            "date": 1730947155570,
            "name": "Commit-0",
            "content": "// frontend/src/components/ProgressForm.js\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst ProgressForm = ({ onPredictionsReceived }) => {\r\n    const [dailyData, setDailyData] = useState({\r\n        weight: '',\r\n        caloriesConsumed: '',\r\n        caloriesBurned: '',\r\n        hoursSleep: '',\r\n        stepsWalked: '',\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        setDailyData({\r\n            ...dailyData,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            // Supongamos que necesitamos los datos de los últimos 7 días\r\n            const userData = [\r\n                // Datos simulados, en una implementación real los obtendrías del estado o backend\r\n                [/* Datos del día 1 */],\r\n                [/* Datos del día 2 */],\r\n                // ...\r\n                [/* Datos del día 7 */],\r\n            ];\r\n            const response = await axios.post('http://127.0.0.1:8000/predict_progreso', userData, {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            });\r\n            onPredictionsReceived(response.data);\r\n        } catch (error) {\r\n            console.error('Error al obtener las predicciones:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h2>Registrar Datos Diarios</h2>\r\n            <input\r\n                type=\"number\"\r\n                name=\"weight\"\r\n                placeholder=\"Peso (kg)\"\r\n                value={dailyData.weight}\r\n                onChange={handleChange}\r\n                required\r\n            />\r\n            {/* Otros campos para caloriesConsumed, caloriesBurned, etc. */}\r\n            <button type=\"submit\">Obtener Predicciones</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default ProgressForm;\r\n"
        }
    ]
}