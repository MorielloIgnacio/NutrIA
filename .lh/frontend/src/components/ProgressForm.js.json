{
    "sourceFile": "frontend/src/components/ProgressForm.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 9,
            "patches": [
                {
                    "date": 1731004274245,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1731004496053,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,72 @@\n+import React, { useState } from 'react';\r\n+import axios from 'axios';\r\n+\r\n+const ProgressForm = ({ onPredictionsReceived }) => {\r\n+    const [dailyData, setDailyData] = useState({\r\n+        weight: '',\r\n+        hoursSleep: '',\r\n+    });\r\n+\r\n+    const handleChange = (e) => {\r\n+        setDailyData({\r\n+            ...dailyData,\r\n+            [e.target.name]: e.target.value,\r\n+        });\r\n+    };\r\n+\r\n+    const handleSubmit = async (e) => {\r\n+        e.preventDefault();\r\n+\r\n+        try {\r\n+            const token = localStorage.getItem('token');\r\n+            const userData = [\r\n+                [dailyData.weight, dailyData.hoursSleep],\r\n+                // Agregar datos históricos o datos de días anteriores según sea necesario\r\n+            ];\r\n+\r\n+            const response = await axios.post('http://127.0.0.1:8000/predict_progreso', userData, {\r\n+                headers: {\r\n+                    Authorization: `Bearer ${token}`,\r\n+                },\r\n+            });\r\n+            onPredictionsReceived(response.data);\r\n+        } catch (error) {\r\n+            console.error('Error al obtener las predicciones:', error);\r\n+        }\r\n+    };\r\n+\r\n+    return (\r\n+        <form onSubmit={handleSubmit} className=\"p-6 bg-white rounded-lg shadow-md max-w-md mx-auto\">\r\n+            <h2 className=\"text-xl font-semibold mb-4\">Registrar Progreso Semanal</h2>\r\n+            <label className=\"block mb-2\">\r\n+                Peso (kg)\r\n+                <input\r\n+                    type=\"number\"\r\n+                    name=\"weight\"\r\n+                    placeholder=\"Peso (kg)\"\r\n+                    value={dailyData.weight}\r\n+                    onChange={handleChange}\r\n+                    required\r\n+                    className=\"mt-1 block w-full border border-gray-300 rounded-md p-2\"\r\n+                />\r\n+            </label>\r\n+            <label className=\"block mb-2\">\r\n+                Horas de Sueño\r\n+                <input\r\n+                    type=\"number\"\r\n+                    name=\"hoursSleep\"\r\n+                    placeholder=\"Horas de sueño\"\r\n+                    value={dailyData.hoursSleep}\r\n+                    onChange={handleChange}\r\n+                    required\r\n+                    className=\"mt-1 block w-full border border-gray-300 rounded-md p-2\"\r\n+                />\r\n+            </label>\r\n+            <button type=\"submit\" className=\"w-full bg-blue-500 text-white py-2 rounded-md mt-4\">\r\n+                Obtener Predicciones\r\n+            </button>\r\n+        </form>\r\n+    );\r\n+};\r\n+\r\n+export default ProgressForm;\r\n"
                },
                {
                    "date": 1731007387180,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import React, { useState } from 'react';\r\n import axios from 'axios';\r\n \r\n-const ProgressForm = ({ onPredictionsReceived }) => {\r\n+const ProgressForm = ({ onProgressSubmit }) => {\r\n     const [dailyData, setDailyData] = useState({\r\n         weight: '',\r\n         hoursSleep: '',\r\n     });\r\n@@ -18,21 +18,18 @@\n         e.preventDefault();\r\n \r\n         try {\r\n             const token = localStorage.getItem('token');\r\n-            const userData = [\r\n-                [dailyData.weight, dailyData.hoursSleep],\r\n-                // Agregar datos históricos o datos de días anteriores según sea necesario\r\n-            ];\r\n-\r\n-            const response = await axios.post('http://127.0.0.1:8000/predict_progreso', userData, {\r\n+            // Aquí estamos enviando solo los datos actuales de progreso\r\n+            const response = await axios.post('http://127.0.0.1:8000/update_plan', dailyData, {\r\n                 headers: {\r\n                     Authorization: `Bearer ${token}`,\r\n+                    'Content-Type': 'application/json',\r\n                 },\r\n             });\r\n-            onPredictionsReceived(response.data);\r\n+            onProgressSubmit(response.data); // Actualizamos el plan en el frontend\r\n         } catch (error) {\r\n-            console.error('Error al obtener las predicciones:', error);\r\n+            console.error('Error al actualizar el plan con los datos de progreso:', error);\r\n         }\r\n     };\r\n \r\n     return (\r\n@@ -62,96 +59,11 @@\n                     className=\"mt-1 block w-full border border-gray-300 rounded-md p-2\"\r\n                 />\r\n             </label>\r\n             <button type=\"submit\" className=\"w-full bg-blue-500 text-white py-2 rounded-md mt-4\">\r\n-                Obtener Predicciones\r\n+                Guardar Progreso\r\n             </button>\r\n         </form>\r\n     );\r\n };\r\n \r\n export default ProgressForm;\r\n-import React, { useState } from 'react';\r\n-import axios from 'axios';\r\n-\r\n-const ProgressForm = ({ onPredictionsReceived }) => {\r\n-    const [dailyData, setDailyData] = useState({\r\n-        weight: '',\r\n-        hoursSleep: '',\r\n-        stepsWalked: '',\r\n-    });\r\n-\r\n-    const handleChange = (e) => {\r\n-        setDailyData({\r\n-            ...dailyData,\r\n-            [e.target.name]: e.target.value,\r\n-        });\r\n-    };\r\n-\r\n-    const handleSubmit = async (e) => {\r\n-        e.preventDefault();\r\n-\r\n-        try {\r\n-            const token = localStorage.getItem('token');\r\n-            const userData = [\r\n-                [dailyData.weight, dailyData.hoursSleep, dailyData.stepsWalked],\r\n-                // Datos históricos simulados o acumulados\r\n-            ];\r\n-\r\n-            const response = await axios.post('http://127.0.0.1:8000/predict_progreso', userData, {\r\n-                headers: {\r\n-                    Authorization: `Bearer ${token}`,\r\n-                },\r\n-            });\r\n-            onPredictionsReceived(response.data);\r\n-        } catch (error) {\r\n-            console.error('Error al obtener las predicciones:', error);\r\n-        }\r\n-    };\r\n-\r\n-    return (\r\n-        <form onSubmit={handleSubmit} className=\"p-6 bg-white rounded-lg shadow-md max-w-md mx-auto\">\r\n-            <h2 className=\"text-xl font-semibold mb-4\">Registrar Progreso Semanal</h2>\r\n-            <label className=\"block mb-2\">\r\n-                Peso (kg)\r\n-                <input\r\n-                    type=\"number\"\r\n-                    name=\"weight\"\r\n-                    placeholder=\"Peso (kg)\"\r\n-                    value={dailyData.weight}\r\n-                    onChange={handleChange}\r\n-                    required\r\n-                    className=\"mt-1 block w-full border border-gray-300 rounded-md p-2\"\r\n-                />\r\n-            </label>\r\n-            <label className=\"block mb-2\">\r\n-                Horas de Sueño\r\n-                <input\r\n-                    type=\"number\"\r\n-                    name=\"hoursSleep\"\r\n-                    placeholder=\"Horas de sueño\"\r\n-                    value={dailyData.hoursSleep}\r\n-                    onChange={handleChange}\r\n-                    required\r\n-                    className=\"mt-1 block w-full border border-gray-300 rounded-md p-2\"\r\n-                />\r\n-            </label>\r\n-            <label className=\"block mb-2\">\r\n-                Pasos Caminados\r\n-                <input\r\n-                    type=\"number\"\r\n-                    name=\"stepsWalked\"\r\n-                    placeholder=\"Pasos caminados\"\r\n-                    value={dailyData.stepsWalked}\r\n-                    onChange={handleChange}\r\n-                    required\r\n-                    className=\"mt-1 block w-full border border-gray-300 rounded-md p-2\"\r\n-                />\r\n-            </label>\r\n-            <button type=\"submit\" className=\"w-full bg-blue-500 text-white py-2 rounded-md mt-4\">\r\n-                Obtener Predicciones\r\n-            </button>\r\n-        </form>\r\n-    );\r\n-};\r\n-\r\n-export default ProgressForm;\r\n"
                },
                {
                    "date": 1731007861065,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,69 @@\n+// import React, { useState } from 'react';\r\n+// import axios from 'axios';\r\n+\r\n+// const ProgressForm = ({ onProgressSubmit }) => {\r\n+//     const [dailyData, setDailyData] = useState({\r\n+//         weight: '',\r\n+//         hoursSleep: '',\r\n+//     });\r\n+\r\n+//     const handleChange = (e) => {\r\n+//         setDailyData({\r\n+//             ...dailyData,\r\n+//             [e.target.name]: e.target.value,\r\n+//         });\r\n+//     };\r\n+\r\n+//     const handleSubmit = async (e) => {\r\n+//         e.preventDefault();\r\n+\r\n+//         try {\r\n+//             const token = localStorage.getItem('token');\r\n+//             // Aquí estamos enviando solo los datos actuales de progreso\r\n+//             const response = await axios.post('http://127.0.0.1:8000/update_plan', dailyData, {\r\n+//                 headers: {\r\n+//                     Authorization: `Bearer ${token}`,\r\n+//                     'Content-Type': 'application/json',\r\n+//                 },\r\n+//             });\r\n+//             onProgressSubmit(response.data); // Actualizamos el plan en el frontend\r\n+//         } catch (error) {\r\n+//             console.error('Error al actualizar el plan con los datos de progreso:', error);\r\n+//         }\r\n+//     };\r\n+\r\n+//     return (\r\n+//         <form onSubmit={handleSubmit} className=\"p-6 bg-white rounded-lg shadow-md max-w-md mx-auto\">\r\n+//             <h2 className=\"text-xl font-semibold mb-4\">Registrar Progreso Semanal</h2>\r\n+//             <label className=\"block mb-2\">\r\n+//                 Peso (kg)\r\n+//                 <input\r\n+//                     type=\"number\"\r\n+//                     name=\"weight\"\r\n+//                     placeholder=\"Peso (kg)\"\r\n+//                     value={dailyData.weight}\r\n+//                     onChange={handleChange}\r\n+//                     required\r\n+//                     className=\"mt-1 block w-full border border-gray-300 rounded-md p-2\"\r\n+//                 />\r\n+//             </label>\r\n+//             <label className=\"block mb-2\">\r\n+//                 Horas de Sueño\r\n+//                 <input\r\n+//                     type=\"number\"\r\n+//                     name=\"hoursSleep\"\r\n+//                     placeholder=\"Horas de sueño\"\r\n+//                     value={dailyData.hoursSleep}\r\n+//                     onChange={handleChange}\r\n+//                     required\r\n+//                     className=\"mt-1 block w-full border border-gray-300 rounded-md p-2\"\r\n+//                 />\r\n+//             </label>\r\n+//             <button type=\"submit\" className=\"w-full bg-blue-500 text-white py-2 rounded-md mt-4\">\r\n+//                 Guardar Progreso\r\n+//             </button>\r\n+//         </form>\r\n+//     );\r\n+// };\r\n+\r\n+// export default ProgressForm;\r\n"
                },
                {
                    "date": 1731008459146,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,69 @@\n+import React, { useState } from 'react';\r\n+import axios from 'axios';\r\n+\r\n+const ProgressForm = ({ onProgressSubmit }) => {\r\n+    const [dailyData, setDailyData] = useState({\r\n+        weight: '',\r\n+        hoursSleep: '',\r\n+    });\r\n+\r\n+    const handleChange = (e) => {\r\n+        setDailyData({\r\n+            ...dailyData,\r\n+            [e.target.name]: e.target.value,\r\n+        });\r\n+    };\r\n+\r\n+    const handleSubmit = async (e) => {\r\n+        e.preventDefault();\r\n+\r\n+        try {\r\n+            const token = localStorage.getItem('token');\r\n+            // Aquí estamos enviando solo los datos actuales de progreso\r\n+            const response = await axios.post('http://127.0.0.1:8000/update_plan', dailyData, {\r\n+                headers: {\r\n+                    Authorization: `Bearer ${token}`,\r\n+                    'Content-Type': 'application/json',\r\n+                },\r\n+            });\r\n+            onProgressSubmit(response.data); // Actualizamos el plan en el frontend\r\n+        } catch (error) {\r\n+            console.error('Error al actualizar el plan con los datos de progreso:', error);\r\n+        }\r\n+    };\r\n+\r\n+    return (\r\n+        <form onSubmit={handleSubmit} className=\"p-6 bg-white rounded-lg shadow-md max-w-md mx-auto\">\r\n+            <h2 className=\"text-xl font-semibold mb-4\">Registrar Progreso Semanal</h2>\r\n+            <label className=\"block mb-2\">\r\n+                Peso (kg)\r\n+                <input\r\n+                    type=\"number\"\r\n+                    name=\"weight\"\r\n+                    placeholder=\"Peso (kg)\"\r\n+                    value={dailyData.weight}\r\n+                    onChange={handleChange}\r\n+                    required\r\n+                    className=\"mt-1 block w-full border border-gray-300 rounded-md p-2\"\r\n+                />\r\n+            </label>\r\n+            <label className=\"block mb-2\">\r\n+                Horas de Sueño\r\n+                <input\r\n+                    type=\"number\"\r\n+                    name=\"hoursSleep\"\r\n+                    placeholder=\"Horas de sueño\"\r\n+                    value={dailyData.hoursSleep}\r\n+                    onChange={handleChange}\r\n+                    required\r\n+                    className=\"mt-1 block w-full border border-gray-300 rounded-md p-2\"\r\n+                />\r\n+            </label>\r\n+            <button type=\"submit\" className=\"w-full bg-blue-500 text-white py-2 rounded-md mt-4\">\r\n+                Guardar Progreso\r\n+            </button>\r\n+        </form>\r\n+    );\r\n+};\r\n+\r\n+export default ProgressForm;\r\n"
                },
                {
                    "date": 1731009468075,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,8 +4,11 @@\n const ProgressForm = ({ onProgressSubmit }) => {\r\n     const [dailyData, setDailyData] = useState({\r\n         weight: '',\r\n         hoursSleep: '',\r\n+        caloriesConsumed: '',\r\n+        caloriesBurned: '',\r\n+        energyLevel: '',\r\n     });\r\n \r\n     const handleChange = (e) => {\r\n         setDailyData({\r\n@@ -18,16 +21,15 @@\n         e.preventDefault();\r\n \r\n         try {\r\n             const token = localStorage.getItem('token');\r\n-            // Aquí estamos enviando solo los datos actuales de progreso\r\n             const response = await axios.post('http://127.0.0.1:8000/update_plan', dailyData, {\r\n                 headers: {\r\n                     Authorization: `Bearer ${token}`,\r\n                     'Content-Type': 'application/json',\r\n                 },\r\n             });\r\n-            onProgressSubmit(response.data); // Actualizamos el plan en el frontend\r\n+            onProgressSubmit(response.data); // Actualizamos el plan en el frontend con la respuesta\r\n         } catch (error) {\r\n             console.error('Error al actualizar el plan con los datos de progreso:', error);\r\n         }\r\n     };\r\n@@ -58,146 +60,46 @@\n                     required\r\n                     className=\"mt-1 block w-full border border-gray-300 rounded-md p-2\"\r\n                 />\r\n             </label>\r\n-            <button type=\"submit\" className=\"w-full bg-blue-500 text-white py-2 rounded-md mt-4\">\r\n-                Guardar Progreso\r\n-            </button>\r\n-        </form>\r\n-    );\r\n-};\r\n-\r\n-export default ProgressForm;\r\n-// import React, { useState } from 'react';\r\n-// import axios from 'axios';\r\n-\r\n-// const ProgressForm = ({ onProgressSubmit }) => {\r\n-//     const [dailyData, setDailyData] = useState({\r\n-//         weight: '',\r\n-//         hoursSleep: '',\r\n-//     });\r\n-\r\n-//     const handleChange = (e) => {\r\n-//         setDailyData({\r\n-//             ...dailyData,\r\n-//             [e.target.name]: e.target.value,\r\n-//         });\r\n-//     };\r\n-\r\n-//     const handleSubmit = async (e) => {\r\n-//         e.preventDefault();\r\n-\r\n-//         try {\r\n-//             const token = localStorage.getItem('token');\r\n-//             // Aquí estamos enviando solo los datos actuales de progreso\r\n-//             const response = await axios.post('http://127.0.0.1:8000/update_plan', dailyData, {\r\n-//                 headers: {\r\n-//                     Authorization: `Bearer ${token}`,\r\n-//                     'Content-Type': 'application/json',\r\n-//                 },\r\n-//             });\r\n-//             onProgressSubmit(response.data); // Actualizamos el plan en el frontend\r\n-//         } catch (error) {\r\n-//             console.error('Error al actualizar el plan con los datos de progreso:', error);\r\n-//         }\r\n-//     };\r\n-\r\n-//     return (\r\n-//         <form onSubmit={handleSubmit} className=\"p-6 bg-white rounded-lg shadow-md max-w-md mx-auto\">\r\n-//             <h2 className=\"text-xl font-semibold mb-4\">Registrar Progreso Semanal</h2>\r\n-//             <label className=\"block mb-2\">\r\n-//                 Peso (kg)\r\n-//                 <input\r\n-//                     type=\"number\"\r\n-//                     name=\"weight\"\r\n-//                     placeholder=\"Peso (kg)\"\r\n-//                     value={dailyData.weight}\r\n-//                     onChange={handleChange}\r\n-//                     required\r\n-//                     className=\"mt-1 block w-full border border-gray-300 rounded-md p-2\"\r\n-//                 />\r\n-//             </label>\r\n-//             <label className=\"block mb-2\">\r\n-//                 Horas de Sueño\r\n-//                 <input\r\n-//                     type=\"number\"\r\n-//                     name=\"hoursSleep\"\r\n-//                     placeholder=\"Horas de sueño\"\r\n-//                     value={dailyData.hoursSleep}\r\n-//                     onChange={handleChange}\r\n-//                     required\r\n-//                     className=\"mt-1 block w-full border border-gray-300 rounded-md p-2\"\r\n-//                 />\r\n-//             </label>\r\n-//             <button type=\"submit\" className=\"w-full bg-blue-500 text-white py-2 rounded-md mt-4\">\r\n-//                 Guardar Progreso\r\n-//             </button>\r\n-//         </form>\r\n-//     );\r\n-// };\r\n-\r\n-// export default ProgressForm;\r\n-import React, { useState } from 'react';\r\n-import axios from 'axios';\r\n-\r\n-const ProgressForm = ({ onProgressSubmit }) => {\r\n-    const [dailyData, setDailyData] = useState({\r\n-        weight: '',\r\n-        hoursSleep: '',\r\n-    });\r\n-\r\n-    const handleChange = (e) => {\r\n-        setDailyData({\r\n-            ...dailyData,\r\n-            [e.target.name]: e.target.value,\r\n-        });\r\n-    };\r\n-\r\n-    const handleSubmit = async (e) => {\r\n-        e.preventDefault();\r\n-\r\n-        try {\r\n-            const token = localStorage.getItem('token');\r\n-            // Aquí estamos enviando solo los datos actuales de progreso\r\n-            const response = await axios.post('http://127.0.0.1:8000/update_plan', dailyData, {\r\n-                headers: {\r\n-                    Authorization: `Bearer ${token}`,\r\n-                    'Content-Type': 'application/json',\r\n-                },\r\n-            });\r\n-            onProgressSubmit(response.data); // Actualizamos el plan en el frontend\r\n-        } catch (error) {\r\n-            console.error('Error al actualizar el plan con los datos de progreso:', error);\r\n-        }\r\n-    };\r\n-\r\n-    return (\r\n-        <form onSubmit={handleSubmit} className=\"p-6 bg-white rounded-lg shadow-md max-w-md mx-auto\">\r\n-            <h2 className=\"text-xl font-semibold mb-4\">Registrar Progreso Semanal</h2>\r\n             <label className=\"block mb-2\">\r\n-                Peso (kg)\r\n+                Calorías Consumidas\r\n                 <input\r\n                     type=\"number\"\r\n-                    name=\"weight\"\r\n-                    placeholder=\"Peso (kg)\"\r\n-                    value={dailyData.weight}\r\n+                    name=\"caloriesConsumed\"\r\n+                    placeholder=\"Calorías consumidas\"\r\n+                    value={dailyData.caloriesConsumed}\r\n                     onChange={handleChange}\r\n                     required\r\n                     className=\"mt-1 block w-full border border-gray-300 rounded-md p-2\"\r\n                 />\r\n             </label>\r\n             <label className=\"block mb-2\">\r\n-                Horas de Sueño\r\n+                Calorías Quemadas\r\n                 <input\r\n                     type=\"number\"\r\n-                    name=\"hoursSleep\"\r\n-                    placeholder=\"Horas de sueño\"\r\n-                    value={dailyData.hoursSleep}\r\n+                    name=\"caloriesBurned\"\r\n+                    placeholder=\"Calorías quemadas\"\r\n+                    value={dailyData.caloriesBurned}\r\n                     onChange={handleChange}\r\n                     required\r\n                     className=\"mt-1 block w-full border border-gray-300 rounded-md p-2\"\r\n                 />\r\n             </label>\r\n+            <label className=\"block mb-2\">\r\n+                Nivel de Energía (1-10)\r\n+                <input\r\n+                    type=\"number\"\r\n+                    name=\"energyLevel\"\r\n+                    placeholder=\"Nivel de energía\"\r\n+                    value={dailyData.energyLevel}\r\n+                    onChange={handleChange}\r\n+                    required\r\n+                    min=\"1\"\r\n+                    max=\"10\"\r\n+                    className=\"mt-1 block w-full border border-gray-300 rounded-md p-2\"\r\n+                />\r\n+            </label>\r\n             <button type=\"submit\" className=\"w-full bg-blue-500 text-white py-2 rounded-md mt-4\">\r\n                 Guardar Progreso\r\n             </button>\r\n         </form>\r\n"
                },
                {
                    "date": 1731009694970,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,119 @@\n+import React, { useState, useEffect } from 'react';\r\n+import axios from 'axios';\r\n+\r\n+const ProgressForm = ({ onProgressSubmit, dayPlan }) => {\r\n+    const [dailyData, setDailyData] = useState({\r\n+        weight: '',\r\n+        hoursSleep: '',\r\n+        caloriesConsumed: 0,\r\n+        caloriesBurned: 0,\r\n+        energyLevel: '',\r\n+    });\r\n+\r\n+    useEffect(() => {\r\n+        if (dayPlan) {\r\n+            // Calculamos las calorías consumidas y quemadas a partir del plan diario\r\n+            const totalCaloriesConsumed = dayPlan.meals.reduce((sum, meal) => sum + meal.details.Calories, 0);\r\n+            const totalCaloriesBurned = dayPlan.exercises.reduce((sum, exercise) => sum + exercise.details.Calories_Burned, 0);\r\n+\r\n+            setDailyData(prevData => ({\r\n+                ...prevData,\r\n+                caloriesConsumed: totalCaloriesConsumed,\r\n+                caloriesBurned: totalCaloriesBurned,\r\n+            }));\r\n+        }\r\n+    }, [dayPlan]);\r\n+\r\n+    const handleChange = (e) => {\r\n+        setDailyData({\r\n+            ...dailyData,\r\n+            [e.target.name]: e.target.value,\r\n+        });\r\n+    };\r\n+\r\n+    const handleSubmit = async (e) => {\r\n+        e.preventDefault();\r\n+\r\n+        try {\r\n+            const token = localStorage.getItem('token');\r\n+            const response = await axios.post('http://127.0.0.1:8000/update_plan', dailyData, {\r\n+                headers: {\r\n+                    Authorization: `Bearer ${token}`,\r\n+                    'Content-Type': 'application/json',\r\n+                },\r\n+            });\r\n+            onProgressSubmit(response.data);\r\n+        } catch (error) {\r\n+            console.error('Error al actualizar el plan con los datos de progreso:', error);\r\n+        }\r\n+    };\r\n+\r\n+    return (\r\n+        <form onSubmit={handleSubmit} className=\"p-6 bg-white rounded-lg shadow-md max-w-md mx-auto\">\r\n+            <h2 className=\"text-xl font-semibold mb-4\">Registrar Progreso Semanal</h2>\r\n+            <label className=\"block mb-2\">\r\n+                Peso (kg)\r\n+                <input\r\n+                    type=\"number\"\r\n+                    name=\"weight\"\r\n+                    placeholder=\"Peso (kg)\"\r\n+                    value={dailyData.weight}\r\n+                    onChange={handleChange}\r\n+                    required\r\n+                    className=\"mt-1 block w-full border border-gray-300 rounded-md p-2\"\r\n+                />\r\n+            </label>\r\n+            <label className=\"block mb-2\">\r\n+                Horas de Sueño\r\n+                <input\r\n+                    type=\"number\"\r\n+                    name=\"hoursSleep\"\r\n+                    placeholder=\"Horas de sueño\"\r\n+                    value={dailyData.hoursSleep}\r\n+                    onChange={handleChange}\r\n+                    required\r\n+                    className=\"mt-1 block w-full border border-gray-300 rounded-md p-2\"\r\n+                />\r\n+            </label>\r\n+            <label className=\"block mb-2\">\r\n+                Calorías Consumidas\r\n+                <input\r\n+                    type=\"number\"\r\n+                    name=\"caloriesConsumed\"\r\n+                    value={dailyData.caloriesConsumed}\r\n+                    readOnly\r\n+                    className=\"mt-1 block w-full border border-gray-300 rounded-md p-2 bg-gray-100\"\r\n+                />\r\n+            </label>\r\n+            <label className=\"block mb-2\">\r\n+                Calorías Quemadas\r\n+                <input\r\n+                    type=\"number\"\r\n+                    name=\"caloriesBurned\"\r\n+                    value={dailyData.caloriesBurned}\r\n+                    readOnly\r\n+                    className=\"mt-1 block w-full border border-gray-300 rounded-md p-2 bg-gray-100\"\r\n+                />\r\n+            </label>\r\n+            <label className=\"block mb-2\">\r\n+                Nivel de Energía (1-10)\r\n+                <input\r\n+                    type=\"number\"\r\n+                    name=\"energyLevel\"\r\n+                    placeholder=\"Nivel de energía\"\r\n+                    value={dailyData.energyLevel}\r\n+                    onChange={handleChange}\r\n+                    required\r\n+                    min=\"1\"\r\n+                    max=\"10\"\r\n+                    className=\"mt-1 block w-full border border-gray-300 rounded-md p-2\"\r\n+                />\r\n+            </label>\r\n+            <button type=\"submit\" className=\"w-full bg-blue-500 text-white py-2 rounded-md mt-4\">\r\n+                Guardar Progreso\r\n+            </button>\r\n+        </form>\r\n+    );\r\n+};\r\n+\r\n+export default ProgressForm;\r\n"
                },
                {
                    "date": 1731009972232,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,11 +11,13 @@\n     });\r\n \r\n     useEffect(() => {\r\n         if (dayPlan) {\r\n+            console.log(\"Plan del día:\", dayPlan); // Verifica que dayPlan tenga los datos correctos\r\n+\r\n             // Calculamos las calorías consumidas y quemadas a partir del plan diario\r\n-            const totalCaloriesConsumed = dayPlan.meals.reduce((sum, meal) => sum + meal.details.Calories, 0);\r\n-            const totalCaloriesBurned = dayPlan.exercises.reduce((sum, exercise) => sum + exercise.details.Calories_Burned, 0);\r\n+            const totalCaloriesConsumed = dayPlan.meals?.reduce((sum, meal) => sum + (meal.details.Calories || 0), 0);\r\n+            const totalCaloriesBurned = dayPlan.exercises?.reduce((sum, exercise) => sum + (exercise.details.Calories_Burned || 0), 0);\r\n \r\n             setDailyData(prevData => ({\r\n                 ...prevData,\r\n                 caloriesConsumed: totalCaloriesConsumed,\r\n@@ -116,113 +118,4 @@\n     );\r\n };\r\n \r\n export default ProgressForm;\r\n-import React, { useState } from 'react';\r\n-import axios from 'axios';\r\n-\r\n-const ProgressForm = ({ onProgressSubmit }) => {\r\n-    const [dailyData, setDailyData] = useState({\r\n-        weight: '',\r\n-        hoursSleep: '',\r\n-        caloriesConsumed: '',\r\n-        caloriesBurned: '',\r\n-        energyLevel: '',\r\n-    });\r\n-\r\n-    const handleChange = (e) => {\r\n-        setDailyData({\r\n-            ...dailyData,\r\n-            [e.target.name]: e.target.value,\r\n-        });\r\n-    };\r\n-\r\n-    const handleSubmit = async (e) => {\r\n-        e.preventDefault();\r\n-\r\n-        try {\r\n-            const token = localStorage.getItem('token');\r\n-            const response = await axios.post('http://127.0.0.1:8000/update_plan', dailyData, {\r\n-                headers: {\r\n-                    Authorization: `Bearer ${token}`,\r\n-                    'Content-Type': 'application/json',\r\n-                },\r\n-            });\r\n-            onProgressSubmit(response.data); // Actualizamos el plan en el frontend con la respuesta\r\n-        } catch (error) {\r\n-            console.error('Error al actualizar el plan con los datos de progreso:', error);\r\n-        }\r\n-    };\r\n-\r\n-    return (\r\n-        <form onSubmit={handleSubmit} className=\"p-6 bg-white rounded-lg shadow-md max-w-md mx-auto\">\r\n-            <h2 className=\"text-xl font-semibold mb-4\">Registrar Progreso Semanal</h2>\r\n-            <label className=\"block mb-2\">\r\n-                Peso (kg)\r\n-                <input\r\n-                    type=\"number\"\r\n-                    name=\"weight\"\r\n-                    placeholder=\"Peso (kg)\"\r\n-                    value={dailyData.weight}\r\n-                    onChange={handleChange}\r\n-                    required\r\n-                    className=\"mt-1 block w-full border border-gray-300 rounded-md p-2\"\r\n-                />\r\n-            </label>\r\n-            <label className=\"block mb-2\">\r\n-                Horas de Sueño\r\n-                <input\r\n-                    type=\"number\"\r\n-                    name=\"hoursSleep\"\r\n-                    placeholder=\"Horas de sueño\"\r\n-                    value={dailyData.hoursSleep}\r\n-                    onChange={handleChange}\r\n-                    required\r\n-                    className=\"mt-1 block w-full border border-gray-300 rounded-md p-2\"\r\n-                />\r\n-            </label>\r\n-            <label className=\"block mb-2\">\r\n-                Calorías Consumidas\r\n-                <input\r\n-                    type=\"number\"\r\n-                    name=\"caloriesConsumed\"\r\n-                    placeholder=\"Calorías consumidas\"\r\n-                    value={dailyData.caloriesConsumed}\r\n-                    onChange={handleChange}\r\n-                    required\r\n-                    className=\"mt-1 block w-full border border-gray-300 rounded-md p-2\"\r\n-                />\r\n-            </label>\r\n-            <label className=\"block mb-2\">\r\n-                Calorías Quemadas\r\n-                <input\r\n-                    type=\"number\"\r\n-                    name=\"caloriesBurned\"\r\n-                    placeholder=\"Calorías quemadas\"\r\n-                    value={dailyData.caloriesBurned}\r\n-                    onChange={handleChange}\r\n-                    required\r\n-                    className=\"mt-1 block w-full border border-gray-300 rounded-md p-2\"\r\n-                />\r\n-            </label>\r\n-            <label className=\"block mb-2\">\r\n-                Nivel de Energía (1-10)\r\n-                <input\r\n-                    type=\"number\"\r\n-                    name=\"energyLevel\"\r\n-                    placeholder=\"Nivel de energía\"\r\n-                    value={dailyData.energyLevel}\r\n-                    onChange={handleChange}\r\n-                    required\r\n-                    min=\"1\"\r\n-                    max=\"10\"\r\n-                    className=\"mt-1 block w-full border border-gray-300 rounded-md p-2\"\r\n-                />\r\n-            </label>\r\n-            <button type=\"submit\" className=\"w-full bg-blue-500 text-white py-2 rounded-md mt-4\">\r\n-                Guardar Progreso\r\n-            </button>\r\n-        </form>\r\n-    );\r\n-};\r\n-\r\n-export default ProgressForm;\r\n"
                },
                {
                    "date": 1731010303999,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,128 @@\n+import React, { useState, useEffect } from 'react';\r\n+import axios from 'axios';\r\n+\r\n+const ProgressForm = ({ onProgressSubmit, dayNumber }) => {\r\n+    const [dailyData, setDailyData] = useState({\r\n+        weight: '',\r\n+        hoursSleep: '',\r\n+        caloriesConsumed: 0,\r\n+        caloriesBurned: 0,\r\n+        energyLevel: '',\r\n+    });\r\n+\r\n+    useEffect(() => {\r\n+        // Cargar los datos del día desde `localStorage`\r\n+        const savedDayData = JSON.parse(localStorage.getItem(`dayData_${dayNumber}`));\r\n+\r\n+        if (savedDayData) {\r\n+            // Calculamos las calorías solo para los elementos completados\r\n+            const totalCaloriesConsumed = savedDayData.meals\r\n+                .filter(meal => meal.completed)\r\n+                .reduce((sum, meal) => sum + (meal.details.Calories || 0), 0);\r\n+\r\n+            const totalCaloriesBurned = savedDayData.exercises\r\n+                .filter(exercise => exercise.completed)\r\n+                .reduce((sum, exercise) => sum + (exercise.details.Calories_Burned || 0), 0);\r\n+\r\n+            // Actualizamos el estado con los totales de calorías\r\n+            setDailyData(prevData => ({\r\n+                ...prevData,\r\n+                caloriesConsumed: totalCaloriesConsumed,\r\n+                caloriesBurned: totalCaloriesBurned,\r\n+            }));\r\n+        }\r\n+    }, [dayNumber]);\r\n+\r\n+    const handleChange = (e) => {\r\n+        setDailyData({\r\n+            ...dailyData,\r\n+            [e.target.name]: e.target.value,\r\n+        });\r\n+    };\r\n+\r\n+    const handleSubmit = async (e) => {\r\n+        e.preventDefault();\r\n+\r\n+        try {\r\n+            const token = localStorage.getItem('token');\r\n+            const response = await axios.post('http://127.0.0.1:8000/update_plan', dailyData, {\r\n+                headers: {\r\n+                    Authorization: `Bearer ${token}`,\r\n+                    'Content-Type': 'application/json',\r\n+                },\r\n+            });\r\n+            onProgressSubmit(response.data);\r\n+        } catch (error) {\r\n+            console.error('Error al actualizar el plan con los datos de progreso:', error);\r\n+        }\r\n+    };\r\n+\r\n+    return (\r\n+        <form onSubmit={handleSubmit} className=\"p-6 bg-white rounded-lg shadow-md max-w-md mx-auto\">\r\n+            <h2 className=\"text-xl font-semibold mb-4\">Registrar Progreso Semanal</h2>\r\n+            <label className=\"block mb-2\">\r\n+                Peso (kg)\r\n+                <input\r\n+                    type=\"number\"\r\n+                    name=\"weight\"\r\n+                    placeholder=\"Peso (kg)\"\r\n+                    value={dailyData.weight}\r\n+                    onChange={handleChange}\r\n+                    required\r\n+                    className=\"mt-1 block w-full border border-gray-300 rounded-md p-2\"\r\n+                />\r\n+            </label>\r\n+            <label className=\"block mb-2\">\r\n+                Horas de Sueño\r\n+                <input\r\n+                    type=\"number\"\r\n+                    name=\"hoursSleep\"\r\n+                    placeholder=\"Horas de sueño\"\r\n+                    value={dailyData.hoursSleep}\r\n+                    onChange={handleChange}\r\n+                    required\r\n+                    className=\"mt-1 block w-full border border-gray-300 rounded-md p-2\"\r\n+                />\r\n+            </label>\r\n+            <label className=\"block mb-2\">\r\n+                Calorías Consumidas\r\n+                <input\r\n+                    type=\"number\"\r\n+                    name=\"caloriesConsumed\"\r\n+                    value={dailyData.caloriesConsumed}\r\n+                    readOnly\r\n+                    className=\"mt-1 block w-full border border-gray-300 rounded-md p-2 bg-gray-100\"\r\n+                />\r\n+            </label>\r\n+            <label className=\"block mb-2\">\r\n+                Calorías Quemadas\r\n+                <input\r\n+                    type=\"number\"\r\n+                    name=\"caloriesBurned\"\r\n+                    value={dailyData.caloriesBurned}\r\n+                    readOnly\r\n+                    className=\"mt-1 block w-full border border-gray-300 rounded-md p-2 bg-gray-100\"\r\n+                />\r\n+            </label>\r\n+            <label className=\"block mb-2\">\r\n+                Nivel de Energía (1-10)\r\n+                <input\r\n+                    type=\"number\"\r\n+                    name=\"energyLevel\"\r\n+                    placeholder=\"Nivel de energía\"\r\n+                    value={dailyData.energyLevel}\r\n+                    onChange={handleChange}\r\n+                    required\r\n+                    min=\"1\"\r\n+                    max=\"10\"\r\n+                    className=\"mt-1 block w-full border border-gray-300 rounded-md p-2\"\r\n+                />\r\n+            </label>\r\n+            <button type=\"submit\" className=\"w-full bg-blue-500 text-white py-2 rounded-md mt-4\">\r\n+                Guardar Progreso\r\n+            </button>\r\n+        </form>\r\n+    );\r\n+};\r\n+\r\n+export default ProgressForm;\r\n"
                },
                {
                    "date": 1731010427038,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,31 +1,26 @@\n import React, { useState, useEffect } from 'react';\r\n import axios from 'axios';\r\n \r\n-const ProgressForm = ({ onProgressSubmit, dayNumber }) => {\r\n+const ProgressForm = ({ onProgressSubmit, dayNumber, onClose }) => {\r\n     const [dailyData, setDailyData] = useState({\r\n         weight: '',\r\n         hoursSleep: '',\r\n-        caloriesConsumed: 0,\r\n-        caloriesBurned: 0,\r\n         energyLevel: '',\r\n     });\r\n \r\n     useEffect(() => {\r\n-        // Cargar los datos del día desde `localStorage`\r\n         const savedDayData = JSON.parse(localStorage.getItem(`dayData_${dayNumber}`));\r\n \r\n         if (savedDayData) {\r\n-            // Calculamos las calorías solo para los elementos completados\r\n             const totalCaloriesConsumed = savedDayData.meals\r\n                 .filter(meal => meal.completed)\r\n                 .reduce((sum, meal) => sum + (meal.details.Calories || 0), 0);\r\n \r\n             const totalCaloriesBurned = savedDayData.exercises\r\n                 .filter(exercise => exercise.completed)\r\n                 .reduce((sum, exercise) => sum + (exercise.details.Calories_Burned || 0), 0);\r\n \r\n-            // Actualizamos el estado con los totales de calorías\r\n             setDailyData(prevData => ({\r\n                 ...prevData,\r\n                 caloriesConsumed: totalCaloriesConsumed,\r\n                 caloriesBurned: totalCaloriesBurned,\r\n@@ -51,8 +46,9 @@\n                     'Content-Type': 'application/json',\r\n                 },\r\n             });\r\n             onProgressSubmit(response.data);\r\n+            onClose(); // Cierra el popup después del envío exitoso\r\n         } catch (error) {\r\n             console.error('Error al actualizar el plan con los datos de progreso:', error);\r\n         }\r\n     };\r\n@@ -84,28 +80,8 @@\n                     className=\"mt-1 block w-full border border-gray-300 rounded-md p-2\"\r\n                 />\r\n             </label>\r\n             <label className=\"block mb-2\">\r\n-                Calorías Consumidas\r\n-                <input\r\n-                    type=\"number\"\r\n-                    name=\"caloriesConsumed\"\r\n-                    value={dailyData.caloriesConsumed}\r\n-                    readOnly\r\n-                    className=\"mt-1 block w-full border border-gray-300 rounded-md p-2 bg-gray-100\"\r\n-                />\r\n-            </label>\r\n-            <label className=\"block mb-2\">\r\n-                Calorías Quemadas\r\n-                <input\r\n-                    type=\"number\"\r\n-                    name=\"caloriesBurned\"\r\n-                    value={dailyData.caloriesBurned}\r\n-                    readOnly\r\n-                    className=\"mt-1 block w-full border border-gray-300 rounded-md p-2 bg-gray-100\"\r\n-                />\r\n-            </label>\r\n-            <label className=\"block mb-2\">\r\n                 Nivel de Energía (1-10)\r\n                 <input\r\n                     type=\"number\"\r\n                     name=\"energyLevel\"\r\n@@ -125,125 +101,4 @@\n     );\r\n };\r\n \r\n export default ProgressForm;\r\n-import React, { useState, useEffect } from 'react';\r\n-import axios from 'axios';\r\n-\r\n-const ProgressForm = ({ onProgressSubmit, dayPlan }) => {\r\n-    const [dailyData, setDailyData] = useState({\r\n-        weight: '',\r\n-        hoursSleep: '',\r\n-        caloriesConsumed: 0,\r\n-        caloriesBurned: 0,\r\n-        energyLevel: '',\r\n-    });\r\n-\r\n-    useEffect(() => {\r\n-        if (dayPlan) {\r\n-            console.log(\"Plan del día:\", dayPlan); // Verifica que dayPlan tenga los datos correctos\r\n-\r\n-            // Calculamos las calorías consumidas y quemadas a partir del plan diario\r\n-            const totalCaloriesConsumed = dayPlan.meals?.reduce((sum, meal) => sum + (meal.details.Calories || 0), 0);\r\n-            const totalCaloriesBurned = dayPlan.exercises?.reduce((sum, exercise) => sum + (exercise.details.Calories_Burned || 0), 0);\r\n-\r\n-            setDailyData(prevData => ({\r\n-                ...prevData,\r\n-                caloriesConsumed: totalCaloriesConsumed,\r\n-                caloriesBurned: totalCaloriesBurned,\r\n-            }));\r\n-        }\r\n-    }, [dayPlan]);\r\n-\r\n-    const handleChange = (e) => {\r\n-        setDailyData({\r\n-            ...dailyData,\r\n-            [e.target.name]: e.target.value,\r\n-        });\r\n-    };\r\n-\r\n-    const handleSubmit = async (e) => {\r\n-        e.preventDefault();\r\n-\r\n-        try {\r\n-            const token = localStorage.getItem('token');\r\n-            const response = await axios.post('http://127.0.0.1:8000/update_plan', dailyData, {\r\n-                headers: {\r\n-                    Authorization: `Bearer ${token}`,\r\n-                    'Content-Type': 'application/json',\r\n-                },\r\n-            });\r\n-            onProgressSubmit(response.data);\r\n-        } catch (error) {\r\n-            console.error('Error al actualizar el plan con los datos de progreso:', error);\r\n-        }\r\n-    };\r\n-\r\n-    return (\r\n-        <form onSubmit={handleSubmit} className=\"p-6 bg-white rounded-lg shadow-md max-w-md mx-auto\">\r\n-            <h2 className=\"text-xl font-semibold mb-4\">Registrar Progreso Semanal</h2>\r\n-            <label className=\"block mb-2\">\r\n-                Peso (kg)\r\n-                <input\r\n-                    type=\"number\"\r\n-                    name=\"weight\"\r\n-                    placeholder=\"Peso (kg)\"\r\n-                    value={dailyData.weight}\r\n-                    onChange={handleChange}\r\n-                    required\r\n-                    className=\"mt-1 block w-full border border-gray-300 rounded-md p-2\"\r\n-                />\r\n-            </label>\r\n-            <label className=\"block mb-2\">\r\n-                Horas de Sueño\r\n-                <input\r\n-                    type=\"number\"\r\n-                    name=\"hoursSleep\"\r\n-                    placeholder=\"Horas de sueño\"\r\n-                    value={dailyData.hoursSleep}\r\n-                    onChange={handleChange}\r\n-                    required\r\n-                    className=\"mt-1 block w-full border border-gray-300 rounded-md p-2\"\r\n-                />\r\n-            </label>\r\n-            <label className=\"block mb-2\">\r\n-                Calorías Consumidas\r\n-                <input\r\n-                    type=\"number\"\r\n-                    name=\"caloriesConsumed\"\r\n-                    value={dailyData.caloriesConsumed}\r\n-                    readOnly\r\n-                    className=\"mt-1 block w-full border border-gray-300 rounded-md p-2 bg-gray-100\"\r\n-                />\r\n-            </label>\r\n-            <label className=\"block mb-2\">\r\n-                Calorías Quemadas\r\n-                <input\r\n-                    type=\"number\"\r\n-                    name=\"caloriesBurned\"\r\n-                    value={dailyData.caloriesBurned}\r\n-                    readOnly\r\n-                    className=\"mt-1 block w-full border border-gray-300 rounded-md p-2 bg-gray-100\"\r\n-                />\r\n-            </label>\r\n-            <label className=\"block mb-2\">\r\n-                Nivel de Energía (1-10)\r\n-                <input\r\n-                    type=\"number\"\r\n-                    name=\"energyLevel\"\r\n-                    placeholder=\"Nivel de energía\"\r\n-                    value={dailyData.energyLevel}\r\n-                    onChange={handleChange}\r\n-                    required\r\n-                    min=\"1\"\r\n-                    max=\"10\"\r\n-                    className=\"mt-1 block w-full border border-gray-300 rounded-md p-2\"\r\n-                />\r\n-            </label>\r\n-            <button type=\"submit\" className=\"w-full bg-blue-500 text-white py-2 rounded-md mt-4\">\r\n-                Guardar Progreso\r\n-            </button>\r\n-        </form>\r\n-    );\r\n-};\r\n-\r\n-export default ProgressForm;\r\n"
                }
            ],
            "date": 1731004274245,
            "name": "Commit-0",
            "content": "import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst ProgressForm = ({ onPredictionsReceived }) => {\r\n    const [dailyData, setDailyData] = useState({\r\n        weight: '',\r\n        hoursSleep: '',\r\n        stepsWalked: '',\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        setDailyData({\r\n            ...dailyData,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            const userData = [\r\n                [dailyData.weight, dailyData.hoursSleep, dailyData.stepsWalked],\r\n                // Datos históricos simulados o acumulados\r\n            ];\r\n\r\n            const response = await axios.post('http://127.0.0.1:8000/predict_progreso', userData, {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            });\r\n            onPredictionsReceived(response.data);\r\n        } catch (error) {\r\n            console.error('Error al obtener las predicciones:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"p-6 bg-white rounded-lg shadow-md max-w-md mx-auto\">\r\n            <h2 className=\"text-xl font-semibold mb-4\">Registrar Progreso Semanal</h2>\r\n            <label className=\"block mb-2\">\r\n                Peso (kg)\r\n                <input\r\n                    type=\"number\"\r\n                    name=\"weight\"\r\n                    placeholder=\"Peso (kg)\"\r\n                    value={dailyData.weight}\r\n                    onChange={handleChange}\r\n                    required\r\n                    className=\"mt-1 block w-full border border-gray-300 rounded-md p-2\"\r\n                />\r\n            </label>\r\n            <label className=\"block mb-2\">\r\n                Horas de Sueño\r\n                <input\r\n                    type=\"number\"\r\n                    name=\"hoursSleep\"\r\n                    placeholder=\"Horas de sueño\"\r\n                    value={dailyData.hoursSleep}\r\n                    onChange={handleChange}\r\n                    required\r\n                    className=\"mt-1 block w-full border border-gray-300 rounded-md p-2\"\r\n                />\r\n            </label>\r\n            <label className=\"block mb-2\">\r\n                Pasos Caminados\r\n                <input\r\n                    type=\"number\"\r\n                    name=\"stepsWalked\"\r\n                    placeholder=\"Pasos caminados\"\r\n                    value={dailyData.stepsWalked}\r\n                    onChange={handleChange}\r\n                    required\r\n                    className=\"mt-1 block w-full border border-gray-300 rounded-md p-2\"\r\n                />\r\n            </label>\r\n            <button type=\"submit\" className=\"w-full bg-blue-500 text-white py-2 rounded-md mt-4\">\r\n                Obtener Predicciones\r\n            </button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default ProgressForm;\r\n"
        }
    ]
}