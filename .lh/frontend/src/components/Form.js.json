{
    "sourceFile": "frontend/src/components/Form.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 13,
            "patches": [
                {
                    "date": 1730410243007,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1730410248307,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,374 @@\n+import React, { useState } from 'react';\r\n+import axios from 'axios';\r\n+\r\n+const Form = ({ setPlan }) => {\r\n+  // Estados para todos los campos del formulario básico\r\n+  const [weight, setWeight] = useState('');\r\n+  const [height, setHeight] = useState('');\r\n+  const [age, setAge] = useState('');\r\n+  const [gender, setGender] = useState('');\r\n+  const [activityLevel, setActivityLevel] = useState('');\r\n+  const [dietaryRestrictions, setDietaryRestrictions] = useState([]);\r\n+  const [dislikedFoods, setDislikedFoods] = useState('');\r\n+  const [trainingPreference, setTrainingPreference] = useState([]);\r\n+  const [fitnessGoals, setFitnessGoals] = useState([]);\r\n+\r\n+  // Estados para datos avanzados y dispositivos inteligentes\r\n+  const [advanced, setAdvanced] = useState(false);\r\n+  const [bodyFat, setBodyFat] = useState('');\r\n+  const [muscleMass, setMuscleMass] = useState('');\r\n+  const [heartRate, setHeartRate] = useState('');\r\n+  const [steps, setSteps] = useState('');\r\n+  const [smartDevice, setSmartDevice] = useState(false);\r\n+\r\n+  const [step, setStep] = useState(0);\r\n+  const [errors, setErrors] = useState({}); // Estado de errores\r\n+\r\n+  const validateForm = () => {\r\n+    const newErrors = {};\r\n+  \r\n+    // Validación para el peso\r\n+    if (!weight || isNaN(weight) || weight < 20 || weight > 500) {\r\n+      newErrors.weight = 'El peso debe estar entre 20 kg y 500 kg';\r\n+    }\r\n+  \r\n+    // Validación para la altura\r\n+    if (!height || isNaN(height) || height < 50 || height > 300) {\r\n+      newErrors.height = 'La altura debe estar entre 50 cm y 300 cm';\r\n+    }\r\n+  \r\n+    // Validación para la edad\r\n+    if (!age || isNaN(age) || age < 10 || age > 120) {\r\n+      newErrors.age = 'La edad debe estar entre 10 y 120 años';\r\n+    }\r\n+  \r\n+    // Validación para el género\r\n+    if (!gender) {\r\n+      newErrors.gender = 'Selecciona un género';\r\n+    }\r\n+  \r\n+    // Validación para el nivel de actividad\r\n+    if (!activityLevel) {\r\n+      newErrors.activityLevel = 'Selecciona un nivel de actividad';\r\n+    }\r\n+  \r\n+    // Validación para los objetivos de fitness\r\n+    if (fitnessGoals.length === 0) {\r\n+      newErrors.fitnessGoals = 'Selecciona al menos un objetivo de fitness';\r\n+    }\r\n+  \r\n+    setErrors(newErrors);\r\n+    return Object.keys(newErrors).length === 0;\r\n+  };\r\n+  \r\n+\r\n+  const handleSubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    if (validateForm()) {\r\n+      const userData = {\r\n+        weight: parseFloat(weight),\r\n+        height: parseFloat(height),\r\n+        age: parseInt(age),\r\n+        gender,\r\n+        activity_level: activityLevel,\r\n+        goals: fitnessGoals,\r\n+        routine_preference: trainingPreference.join(', ') || 'Ninguno',\r\n+        dietary_restrictions: dietaryRestrictions,\r\n+        disliked_foods: dislikedFoods,\r\n+        ...(advanced && { body_fat: parseFloat(bodyFat), muscle_mass: parseFloat(muscleMass) }),\r\n+        ...(smartDevice && { heart_rate: parseFloat(heartRate), steps: parseInt(steps) })\r\n+      };\r\n+\r\n+    try {\r\n+            const response = await axios.post('http://localhost:8000/generate_plan/', userData);\r\n+            setPlan(response.data);\r\n+            setHasPlan(true); // Actualiza hasPlan a true\r\n+        } catch (error) {\r\n+            console.error('Error al obtener el plan:', error);\r\n+        }\r\n+    }\r\n+};\r\n+\r\n+  const handleCheckboxChange = (setState, value, state) => {\r\n+    if (state.includes(value)) {\r\n+      setState(state.filter((item) => item !== value));\r\n+    } else {\r\n+      setState([...state, value]);\r\n+    }\r\n+  };\r\n+\r\n+  const nextStep = () => setStep((prevStep) => Math.min(prevStep + 1, 5));\r\n+  const prevStep = () => setStep((prevStep) => Math.max(prevStep - 1, 0));\r\n+\r\n+  return (\r\n+    <div className=\"flex flex-col items-center min-h-screen bg-white font-['Noto_Sans', 'Work_Sans', sans-serif]\">\r\n+      <form onSubmit={handleSubmit} className=\"w-[512px] max-w-full p-8 bg-white rounded-lg shadow-md\">\r\n+\r\n+        {/* Paso 0: Datos Personales */}\r\n+        {step === 0 && (\r\n+          <div>\r\n+            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Datos Personales</h3>\r\n+            <div className=\"px-4 py-3\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Peso (kg)</span>\r\n+                <input\r\n+                  type=\"number\"\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n+                  value={weight}\r\n+                  onChange={(e) => setWeight(e.target.value)}\r\n+                  required\r\n+                />\r\n+                {errors.weight && <p style={{ color: 'red' }}>{errors.weight}</p>}\r\n+              </label>\r\n+            </div>\r\n+            <div className=\"px-4 py-3\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Altura (cm)</span>\r\n+                <input\r\n+                  type=\"number\"\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n+                  value={height}\r\n+                  onChange={(e) => setHeight(e.target.value)}\r\n+                  required\r\n+                />\r\n+                {errors.height && <p style={{ color: 'red' }}>{errors.height}</p>}\r\n+              </label>\r\n+            </div>\r\n+            <div className=\"px-4 py-3\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Edad</span>\r\n+                <input\r\n+                  type=\"number\"\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n+                  value={age}\r\n+                  onChange={(e) => setAge(e.target.value)}\r\n+                  required\r\n+                />\r\n+                {errors.age && <p style={{ color: 'red' }}>{errors.age}</p>}\r\n+              </label>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* Paso 1: Información adicional */}\r\n+        {step === 1 && (\r\n+          <div>\r\n+            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Información adicional</h3>\r\n+            <div className=\"px-4 py-3\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Sexo</span>\r\n+                <select\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n+                  value={gender}\r\n+                  onChange={(e) => setGender(e.target.value)}\r\n+                  required\r\n+                >\r\n+                  <option value=\"\">Seleccionar</option>\r\n+                  <option value=\"male\">Hombre</option>\r\n+                  <option value=\"female\">Mujer</option>\r\n+                </select>\r\n+                {errors.gender && <p style={{ color: 'red' }}>{errors.gender}</p>}\r\n+              </label>\r\n+            </div>\r\n+            <div className=\"px-4 py-3\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Nivel de actividad</span>\r\n+                <select\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n+                  value={activityLevel}\r\n+                  onChange={(e) => setActivityLevel(e.target.value)}\r\n+                  required\r\n+                >\r\n+                  <option value=\"\">Seleccionar</option>\r\n+                  <option value=\"sedentary\">Sedentario</option>\r\n+                  <option value=\"lightly_active\">Ligeramente activo</option>\r\n+                  <option value=\"moderately_active\">Moderadamente activo</option>\r\n+                  <option value=\"very_active\">Muy activo</option>\r\n+                  <option value=\"super_active\">Súper activo</option>\r\n+                </select>\r\n+                {errors.activityLevel && <p style={{ color: 'red' }}>{errors.activityLevel}</p>}\r\n+              </label>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* Paso 2: Datos avanzados y dispositivos */}\r\n+        {step === 2 && (\r\n+          <div>\r\n+            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Datos avanzados y dispositivos</h3>\r\n+            <label className=\"block pb-2\">\r\n+              <input type=\"checkbox\" checked={advanced} onChange={(e) => setAdvanced(e.target.checked)} />\r\n+              <span className=\"ml-2\">Proveer datos avanzados</span>\r\n+            </label>\r\n+\r\n+            {advanced && (\r\n+              <div>\r\n+                <div className=\"px-4 py-3\">\r\n+                  <label className=\"block pb-2\">\r\n+                    <span className=\"text-base font-medium text-[#111418]\">Porcentaje de grasa corporal (%)</span>\r\n+                    <input\r\n+                      type=\"number\"\r\n+                      className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n+                      value={bodyFat}\r\n+                      onChange={(e) => setBodyFat(e.target.value)}\r\n+                    />\r\n+                  </label>\r\n+                </div>\r\n+                <div className=\"px-4 py-3\">\r\n+                  <label className=\"block pb-2\">\r\n+                    <span className=\"text-base font-medium text-[#111418]\">Masa muscular (kg)</span>\r\n+                    <input\r\n+                      type=\"number\"\r\n+                      className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n+                      value={muscleMass}\r\n+                      onChange={(e) => setMuscleMass(e.target.value)}\r\n+                    />\r\n+                  </label>\r\n+                </div>\r\n+              </div>\r\n+            )}\r\n+\r\n+            <label className=\"block mt-4\">\r\n+              <input\r\n+                type=\"checkbox\"\r\n+                checked={smartDevice}\r\n+                onChange={(e) => setSmartDevice(e.target.checked)}\r\n+              />\r\n+              <span className=\"ml-2\">Sincronizar con un dispositivo inteligente</span>\r\n+            </label>\r\n+\r\n+            {smartDevice && (\r\n+              <div className=\"mt-4\">\r\n+                <div className=\"px-4 py-3\">\r\n+                  <label className=\"block pb-2\">\r\n+                    <span className=\"text-base font-medium text-[#111418]\">Frecuencia cardíaca en reposo (BPM)</span>\r\n+                    <input\r\n+                      type=\"number\"\r\n+                      className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n+                      value={heartRate}\r\n+                      onChange={(e) => setHeartRate(e.target.value)}\r\n+                    />\r\n+                  </label>\r\n+                </div>\r\n+                <div className=\"px-4 py-3\">\r\n+                  <label className=\"block pb-2\">\r\n+                    <span className=\"text-base font-medium text-[#111418]\">Pasos diarios</span>\r\n+                    <input\r\n+                      type=\"number\"\r\n+                      className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n+                      value={steps}\r\n+                      onChange={(e) => setSteps(e.target.value)}\r\n+                    />\r\n+                  </label>\r\n+                </div>\r\n+              </div>\r\n+            )}\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* Paso 3: Preferencias alimenticias */}\r\n+        {step === 3 && (\r\n+          <div>\r\n+            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Preferencias alimenticias</h3>\r\n+            <div className=\"flex gap-3 p-3 flex-wrap\">\r\n+              {['Sin restricciones', 'Vegetariano', 'Vegano', 'Sin gluten', 'Sin lactosa', 'Sin nueces', 'Dieta cetogénica'].map((preference) => (\r\n+                <div\r\n+                  key={preference}\r\n+                  onClick={() => handleCheckboxChange(setDietaryRestrictions, preference, dietaryRestrictions)}\r\n+                  className={`cursor-pointer flex h-8 items-center justify-center gap-x-2 rounded-xl px-4 ${\r\n+                    dietaryRestrictions.includes(preference) ? 'bg-[#1980e6] text-white' : 'bg-[#f0f2f4] text-[#111418]'\r\n+                  }`}\r\n+                >\r\n+                  <p className=\"text-sm font-medium\">{preference}</p>\r\n+                </div>\r\n+              ))}\r\n+            </div>\r\n+            <div className=\"px-4 py-3 mt-4\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Alimentos que prefieres evitar</span>\r\n+                <input\r\n+                  type=\"text\"\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n+                  placeholder=\"Ej. Brócoli, pescado\"\r\n+                  value={dislikedFoods}\r\n+                  onChange={(e) => setDislikedFoods(e.target.value)}\r\n+                />\r\n+              </label>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* Paso 4: Tipo de entrenamiento */}\r\n+        {step === 4 && (\r\n+          <div>\r\n+            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Tipo de entrenamiento</h3>\r\n+            <div className=\"flex gap-3 p-3 flex-wrap\">\r\n+              {['Ejercicio en casa', 'Ejercicio al aire libre', 'Ejercicio en el gimnasio', 'Ninguno', 'No estoy seguro'].map((preference) => (\r\n+                <div\r\n+                  key={preference}\r\n+                  onClick={() => handleCheckboxChange(setTrainingPreference, preference, trainingPreference)}\r\n+                  className={`cursor-pointer flex h-8 items-center justify-center gap-x-2 rounded-xl px-4 ${\r\n+                    trainingPreference.includes(preference) ? 'bg-[#1980e6] text-white' : 'bg-[#f0f2f4] text-[#111418]'\r\n+                  }`}\r\n+                >\r\n+                  <p className=\"text-sm font-medium\">{preference}</p>\r\n+                </div>\r\n+              ))}\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* Paso 5: Objetivos de Fitness */}\r\n+        {step === 5 && (\r\n+          <div>\r\n+            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Objetivos de Fitness</h3>\r\n+            <div className=\"flex gap-3 p-3 flex-wrap\">\r\n+              {['Perder peso', 'Ganar masa muscular', 'Mejorar la salud', 'Mejorar el rendimiento'].map((goal) => (\r\n+                <div\r\n+                  key={goal}\r\n+                  onClick={() => handleCheckboxChange(setFitnessGoals, goal, fitnessGoals)}\r\n+                  className={`cursor-pointer flex h-8 items-center justify-center gap-x-2 rounded-xl px-4 ${\r\n+                    fitnessGoals.includes(goal) ? 'bg-[#1980e6] text-white' : 'bg-[#f0f2f4] text-[#111418]'\r\n+                  }`}\r\n+                >\r\n+                  <p className=\"text-sm font-medium\">{goal}</p>\r\n+                </div>\r\n+              ))}\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* Botones de navegación */}\r\n+        <div className=\"flex justify-between mt-6\">\r\n+          {step > 0 && (\r\n+            <button\r\n+              type=\"button\"\r\n+              className=\"bg-gray-300 text-gray-800 font-bold py-2 px-4 rounded\"\r\n+              onClick={prevStep}\r\n+            >\r\n+              Anterior\r\n+            </button>\r\n+          )}\r\n+          {step < 5 ? (\r\n+            <button\r\n+              type=\"button\"\r\n+              className=\"bg-blue-500 text-white font-bold py-2 px-4 rounded\"\r\n+              onClick={nextStep}\r\n+            >\r\n+              Siguiente\r\n+            </button>\r\n+          ) : (\r\n+            <button\r\n+              type=\"submit\"\r\n+              className=\"bg-green-500 text-white font-bold py-2 px-4 rounded\"\r\n+            >\r\n+              Finalizar\r\n+            </button>\r\n+          )}\r\n+        </div>\r\n+      </form>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default Form;\r\n"
                },
                {
                    "date": 1730410254966,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,373 @@\n+import React, { useState } from 'react';\r\n+import axios from 'axios';\r\n+\r\n+const Form = ({ setPlan }) => {\r\n+  // Estados para todos los campos del formulario básico\r\n+  const [weight, setWeight] = useState('');\r\n+  const [height, setHeight] = useState('');\r\n+  const [age, setAge] = useState('');\r\n+  const [gender, setGender] = useState('');\r\n+  const [activityLevel, setActivityLevel] = useState('');\r\n+  const [dietaryRestrictions, setDietaryRestrictions] = useState([]);\r\n+  const [dislikedFoods, setDislikedFoods] = useState('');\r\n+  const [trainingPreference, setTrainingPreference] = useState([]);\r\n+  const [fitnessGoals, setFitnessGoals] = useState([]);\r\n+\r\n+  // Estados para datos avanzados y dispositivos inteligentes\r\n+  const [advanced, setAdvanced] = useState(false);\r\n+  const [bodyFat, setBodyFat] = useState('');\r\n+  const [muscleMass, setMuscleMass] = useState('');\r\n+  const [heartRate, setHeartRate] = useState('');\r\n+  const [steps, setSteps] = useState('');\r\n+  const [smartDevice, setSmartDevice] = useState(false);\r\n+\r\n+  const [step, setStep] = useState(0);\r\n+  const [errors, setErrors] = useState({}); // Estado de errores\r\n+\r\n+  const validateForm = () => {\r\n+    const newErrors = {};\r\n+  \r\n+    // Validación para el peso\r\n+    if (!weight || isNaN(weight) || weight < 20 || weight > 500) {\r\n+      newErrors.weight = 'El peso debe estar entre 20 kg y 500 kg';\r\n+    }\r\n+  \r\n+    // Validación para la altura\r\n+    if (!height || isNaN(height) || height < 50 || height > 300) {\r\n+      newErrors.height = 'La altura debe estar entre 50 cm y 300 cm';\r\n+    }\r\n+  \r\n+    // Validación para la edad\r\n+    if (!age || isNaN(age) || age < 10 || age > 120) {\r\n+      newErrors.age = 'La edad debe estar entre 10 y 120 años';\r\n+    }\r\n+  \r\n+    // Validación para el género\r\n+    if (!gender) {\r\n+      newErrors.gender = 'Selecciona un género';\r\n+    }\r\n+  \r\n+    // Validación para el nivel de actividad\r\n+    if (!activityLevel) {\r\n+      newErrors.activityLevel = 'Selecciona un nivel de actividad';\r\n+    }\r\n+  \r\n+    // Validación para los objetivos de fitness\r\n+    if (fitnessGoals.length === 0) {\r\n+      newErrors.fitnessGoals = 'Selecciona al menos un objetivo de fitness';\r\n+    }\r\n+  \r\n+    setErrors(newErrors);\r\n+    return Object.keys(newErrors).length === 0;\r\n+  };\r\n+  \r\n+\r\n+  const handleSubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    if (validateForm()) {\r\n+      const userData = {\r\n+        weight: parseFloat(weight),\r\n+        height: parseFloat(height),\r\n+        age: parseInt(age),\r\n+        gender,\r\n+        activity_level: activityLevel,\r\n+        goals: fitnessGoals,\r\n+        routine_preference: trainingPreference.join(', ') || 'Ninguno',\r\n+        dietary_restrictions: dietaryRestrictions,\r\n+        disliked_foods: dislikedFoods,\r\n+        ...(advanced && { body_fat: parseFloat(bodyFat), muscle_mass: parseFloat(muscleMass) }),\r\n+        ...(smartDevice && { heart_rate: parseFloat(heartRate), steps: parseInt(steps) })\r\n+      };\r\n+\r\n+      try {\r\n+        const response = await axios.post('http://localhost:8000/generate_plan/', userData);\r\n+        setPlan(response.data);\r\n+      } catch (error) {\r\n+        console.error('Error al obtener el plan:', error);\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const handleCheckboxChange = (setState, value, state) => {\r\n+    if (state.includes(value)) {\r\n+      setState(state.filter((item) => item !== value));\r\n+    } else {\r\n+      setState([...state, value]);\r\n+    }\r\n+  };\r\n+\r\n+  const nextStep = () => setStep((prevStep) => Math.min(prevStep + 1, 5));\r\n+  const prevStep = () => setStep((prevStep) => Math.max(prevStep - 1, 0));\r\n+\r\n+  return (\r\n+    <div className=\"flex flex-col items-center min-h-screen bg-white font-['Noto_Sans', 'Work_Sans', sans-serif]\">\r\n+      <form onSubmit={handleSubmit} className=\"w-[512px] max-w-full p-8 bg-white rounded-lg shadow-md\">\r\n+\r\n+        {/* Paso 0: Datos Personales */}\r\n+        {step === 0 && (\r\n+          <div>\r\n+            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Datos Personales</h3>\r\n+            <div className=\"px-4 py-3\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Peso (kg)</span>\r\n+                <input\r\n+                  type=\"number\"\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n+                  value={weight}\r\n+                  onChange={(e) => setWeight(e.target.value)}\r\n+                  required\r\n+                />\r\n+                {errors.weight && <p style={{ color: 'red' }}>{errors.weight}</p>}\r\n+              </label>\r\n+            </div>\r\n+            <div className=\"px-4 py-3\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Altura (cm)</span>\r\n+                <input\r\n+                  type=\"number\"\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n+                  value={height}\r\n+                  onChange={(e) => setHeight(e.target.value)}\r\n+                  required\r\n+                />\r\n+                {errors.height && <p style={{ color: 'red' }}>{errors.height}</p>}\r\n+              </label>\r\n+            </div>\r\n+            <div className=\"px-4 py-3\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Edad</span>\r\n+                <input\r\n+                  type=\"number\"\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n+                  value={age}\r\n+                  onChange={(e) => setAge(e.target.value)}\r\n+                  required\r\n+                />\r\n+                {errors.age && <p style={{ color: 'red' }}>{errors.age}</p>}\r\n+              </label>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* Paso 1: Información adicional */}\r\n+        {step === 1 && (\r\n+          <div>\r\n+            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Información adicional</h3>\r\n+            <div className=\"px-4 py-3\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Sexo</span>\r\n+                <select\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n+                  value={gender}\r\n+                  onChange={(e) => setGender(e.target.value)}\r\n+                  required\r\n+                >\r\n+                  <option value=\"\">Seleccionar</option>\r\n+                  <option value=\"male\">Hombre</option>\r\n+                  <option value=\"female\">Mujer</option>\r\n+                </select>\r\n+                {errors.gender && <p style={{ color: 'red' }}>{errors.gender}</p>}\r\n+              </label>\r\n+            </div>\r\n+            <div className=\"px-4 py-3\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Nivel de actividad</span>\r\n+                <select\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n+                  value={activityLevel}\r\n+                  onChange={(e) => setActivityLevel(e.target.value)}\r\n+                  required\r\n+                >\r\n+                  <option value=\"\">Seleccionar</option>\r\n+                  <option value=\"sedentary\">Sedentario</option>\r\n+                  <option value=\"lightly_active\">Ligeramente activo</option>\r\n+                  <option value=\"moderately_active\">Moderadamente activo</option>\r\n+                  <option value=\"very_active\">Muy activo</option>\r\n+                  <option value=\"super_active\">Súper activo</option>\r\n+                </select>\r\n+                {errors.activityLevel && <p style={{ color: 'red' }}>{errors.activityLevel}</p>}\r\n+              </label>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* Paso 2: Datos avanzados y dispositivos */}\r\n+        {step === 2 && (\r\n+          <div>\r\n+            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Datos avanzados y dispositivos</h3>\r\n+            <label className=\"block pb-2\">\r\n+              <input type=\"checkbox\" checked={advanced} onChange={(e) => setAdvanced(e.target.checked)} />\r\n+              <span className=\"ml-2\">Proveer datos avanzados</span>\r\n+            </label>\r\n+\r\n+            {advanced && (\r\n+              <div>\r\n+                <div className=\"px-4 py-3\">\r\n+                  <label className=\"block pb-2\">\r\n+                    <span className=\"text-base font-medium text-[#111418]\">Porcentaje de grasa corporal (%)</span>\r\n+                    <input\r\n+                      type=\"number\"\r\n+                      className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n+                      value={bodyFat}\r\n+                      onChange={(e) => setBodyFat(e.target.value)}\r\n+                    />\r\n+                  </label>\r\n+                </div>\r\n+                <div className=\"px-4 py-3\">\r\n+                  <label className=\"block pb-2\">\r\n+                    <span className=\"text-base font-medium text-[#111418]\">Masa muscular (kg)</span>\r\n+                    <input\r\n+                      type=\"number\"\r\n+                      className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n+                      value={muscleMass}\r\n+                      onChange={(e) => setMuscleMass(e.target.value)}\r\n+                    />\r\n+                  </label>\r\n+                </div>\r\n+              </div>\r\n+            )}\r\n+\r\n+            <label className=\"block mt-4\">\r\n+              <input\r\n+                type=\"checkbox\"\r\n+                checked={smartDevice}\r\n+                onChange={(e) => setSmartDevice(e.target.checked)}\r\n+              />\r\n+              <span className=\"ml-2\">Sincronizar con un dispositivo inteligente</span>\r\n+            </label>\r\n+\r\n+            {smartDevice && (\r\n+              <div className=\"mt-4\">\r\n+                <div className=\"px-4 py-3\">\r\n+                  <label className=\"block pb-2\">\r\n+                    <span className=\"text-base font-medium text-[#111418]\">Frecuencia cardíaca en reposo (BPM)</span>\r\n+                    <input\r\n+                      type=\"number\"\r\n+                      className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n+                      value={heartRate}\r\n+                      onChange={(e) => setHeartRate(e.target.value)}\r\n+                    />\r\n+                  </label>\r\n+                </div>\r\n+                <div className=\"px-4 py-3\">\r\n+                  <label className=\"block pb-2\">\r\n+                    <span className=\"text-base font-medium text-[#111418]\">Pasos diarios</span>\r\n+                    <input\r\n+                      type=\"number\"\r\n+                      className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n+                      value={steps}\r\n+                      onChange={(e) => setSteps(e.target.value)}\r\n+                    />\r\n+                  </label>\r\n+                </div>\r\n+              </div>\r\n+            )}\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* Paso 3: Preferencias alimenticias */}\r\n+        {step === 3 && (\r\n+          <div>\r\n+            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Preferencias alimenticias</h3>\r\n+            <div className=\"flex gap-3 p-3 flex-wrap\">\r\n+              {['Sin restricciones', 'Vegetariano', 'Vegano', 'Sin gluten', 'Sin lactosa', 'Sin nueces', 'Dieta cetogénica'].map((preference) => (\r\n+                <div\r\n+                  key={preference}\r\n+                  onClick={() => handleCheckboxChange(setDietaryRestrictions, preference, dietaryRestrictions)}\r\n+                  className={`cursor-pointer flex h-8 items-center justify-center gap-x-2 rounded-xl px-4 ${\r\n+                    dietaryRestrictions.includes(preference) ? 'bg-[#1980e6] text-white' : 'bg-[#f0f2f4] text-[#111418]'\r\n+                  }`}\r\n+                >\r\n+                  <p className=\"text-sm font-medium\">{preference}</p>\r\n+                </div>\r\n+              ))}\r\n+            </div>\r\n+            <div className=\"px-4 py-3 mt-4\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Alimentos que prefieres evitar</span>\r\n+                <input\r\n+                  type=\"text\"\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n+                  placeholder=\"Ej. Brócoli, pescado\"\r\n+                  value={dislikedFoods}\r\n+                  onChange={(e) => setDislikedFoods(e.target.value)}\r\n+                />\r\n+              </label>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* Paso 4: Tipo de entrenamiento */}\r\n+        {step === 4 && (\r\n+          <div>\r\n+            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Tipo de entrenamiento</h3>\r\n+            <div className=\"flex gap-3 p-3 flex-wrap\">\r\n+              {['Ejercicio en casa', 'Ejercicio al aire libre', 'Ejercicio en el gimnasio', 'Ninguno', 'No estoy seguro'].map((preference) => (\r\n+                <div\r\n+                  key={preference}\r\n+                  onClick={() => handleCheckboxChange(setTrainingPreference, preference, trainingPreference)}\r\n+                  className={`cursor-pointer flex h-8 items-center justify-center gap-x-2 rounded-xl px-4 ${\r\n+                    trainingPreference.includes(preference) ? 'bg-[#1980e6] text-white' : 'bg-[#f0f2f4] text-[#111418]'\r\n+                  }`}\r\n+                >\r\n+                  <p className=\"text-sm font-medium\">{preference}</p>\r\n+                </div>\r\n+              ))}\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* Paso 5: Objetivos de Fitness */}\r\n+        {step === 5 && (\r\n+          <div>\r\n+            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Objetivos de Fitness</h3>\r\n+            <div className=\"flex gap-3 p-3 flex-wrap\">\r\n+              {['Perder peso', 'Ganar masa muscular', 'Mejorar la salud', 'Mejorar el rendimiento'].map((goal) => (\r\n+                <div\r\n+                  key={goal}\r\n+                  onClick={() => handleCheckboxChange(setFitnessGoals, goal, fitnessGoals)}\r\n+                  className={`cursor-pointer flex h-8 items-center justify-center gap-x-2 rounded-xl px-4 ${\r\n+                    fitnessGoals.includes(goal) ? 'bg-[#1980e6] text-white' : 'bg-[#f0f2f4] text-[#111418]'\r\n+                  }`}\r\n+                >\r\n+                  <p className=\"text-sm font-medium\">{goal}</p>\r\n+                </div>\r\n+              ))}\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* Botones de navegación */}\r\n+        <div className=\"flex justify-between mt-6\">\r\n+          {step > 0 && (\r\n+            <button\r\n+              type=\"button\"\r\n+              className=\"bg-gray-300 text-gray-800 font-bold py-2 px-4 rounded\"\r\n+              onClick={prevStep}\r\n+            >\r\n+              Anterior\r\n+            </button>\r\n+          )}\r\n+          {step < 5 ? (\r\n+            <button\r\n+              type=\"button\"\r\n+              className=\"bg-blue-500 text-white font-bold py-2 px-4 rounded\"\r\n+              onClick={nextStep}\r\n+            >\r\n+              Siguiente\r\n+            </button>\r\n+          ) : (\r\n+            <button\r\n+              type=\"submit\"\r\n+              className=\"bg-green-500 text-white font-bold py-2 px-4 rounded\"\r\n+            >\r\n+              Finalizar\r\n+            </button>\r\n+          )}\r\n+        </div>\r\n+      </form>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default Form;\r\n"
                },
                {
                    "date": 1730410447373,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,374 @@\n+import React, { useState } from 'react';\r\n+import axios from 'axios';\r\n+\r\n+const Form = ({ setPlan }) => {\r\n+  // Estados para todos los campos del formulario básico\r\n+  const [weight, setWeight] = useState('');\r\n+  const [height, setHeight] = useState('');\r\n+  const [age, setAge] = useState('');\r\n+  const [gender, setGender] = useState('');\r\n+  const [activityLevel, setActivityLevel] = useState('');\r\n+  const [dietaryRestrictions, setDietaryRestrictions] = useState([]);\r\n+  const [dislikedFoods, setDislikedFoods] = useState('');\r\n+  const [trainingPreference, setTrainingPreference] = useState([]);\r\n+  const [fitnessGoals, setFitnessGoals] = useState([]);\r\n+\r\n+  // Estados para datos avanzados y dispositivos inteligentes\r\n+  const [advanced, setAdvanced] = useState(false);\r\n+  const [bodyFat, setBodyFat] = useState('');\r\n+  const [muscleMass, setMuscleMass] = useState('');\r\n+  const [heartRate, setHeartRate] = useState('');\r\n+  const [steps, setSteps] = useState('');\r\n+  const [smartDevice, setSmartDevice] = useState(false);\r\n+\r\n+  const [step, setStep] = useState(0);\r\n+  const [errors, setErrors] = useState({}); // Estado de errores\r\n+\r\n+  const validateForm = () => {\r\n+    const newErrors = {};\r\n+  \r\n+    // Validación para el peso\r\n+    if (!weight || isNaN(weight) || weight < 20 || weight > 500) {\r\n+      newErrors.weight = 'El peso debe estar entre 20 kg y 500 kg';\r\n+    }\r\n+  \r\n+    // Validación para la altura\r\n+    if (!height || isNaN(height) || height < 50 || height > 300) {\r\n+      newErrors.height = 'La altura debe estar entre 50 cm y 300 cm';\r\n+    }\r\n+  \r\n+    // Validación para la edad\r\n+    if (!age || isNaN(age) || age < 10 || age > 120) {\r\n+      newErrors.age = 'La edad debe estar entre 10 y 120 años';\r\n+    }\r\n+  \r\n+    // Validación para el género\r\n+    if (!gender) {\r\n+      newErrors.gender = 'Selecciona un género';\r\n+    }\r\n+  \r\n+    // Validación para el nivel de actividad\r\n+    if (!activityLevel) {\r\n+      newErrors.activityLevel = 'Selecciona un nivel de actividad';\r\n+    }\r\n+  \r\n+    // Validación para los objetivos de fitness\r\n+    if (fitnessGoals.length === 0) {\r\n+      newErrors.fitnessGoals = 'Selecciona al menos un objetivo de fitness';\r\n+    }\r\n+  \r\n+    setErrors(newErrors);\r\n+    return Object.keys(newErrors).length === 0;\r\n+  };\r\n+  \r\n+\r\n+  const handleSubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    if (validateForm()) {\r\n+      const userData = {\r\n+        weight: parseFloat(weight),\r\n+        height: parseFloat(height),\r\n+        age: parseInt(age),\r\n+        gender,\r\n+        activity_level: activityLevel,\r\n+        goals: fitnessGoals,\r\n+        routine_preference: trainingPreference.join(', ') || 'Ninguno',\r\n+        dietary_restrictions: dietaryRestrictions,\r\n+        disliked_foods: dislikedFoods,\r\n+        ...(advanced && { body_fat: parseFloat(bodyFat), muscle_mass: parseFloat(muscleMass) }),\r\n+        ...(smartDevice && { heart_rate: parseFloat(heartRate), steps: parseInt(steps) })\r\n+      };\r\n+\r\n+      try {\r\n+        const response = await axios.post('http://localhost:8000/generate_plan/', userData);\r\n+        setPlan(response.data);\r\n+        setHasPlan(true); // Actualiza hasPlan a true\r\n+    } catch (error) {\r\n+        console.error('Error al obtener el plan:', error);\r\n+    }\r\n+}\r\n+};\r\n+\r\n+  const handleCheckboxChange = (setState, value, state) => {\r\n+    if (state.includes(value)) {\r\n+      setState(state.filter((item) => item !== value));\r\n+    } else {\r\n+      setState([...state, value]);\r\n+    }\r\n+  };\r\n+\r\n+  const nextStep = () => setStep((prevStep) => Math.min(prevStep + 1, 5));\r\n+  const prevStep = () => setStep((prevStep) => Math.max(prevStep - 1, 0));\r\n+\r\n+  return (\r\n+    <div className=\"flex flex-col items-center min-h-screen bg-white font-['Noto_Sans', 'Work_Sans', sans-serif]\">\r\n+      <form onSubmit={handleSubmit} className=\"w-[512px] max-w-full p-8 bg-white rounded-lg shadow-md\">\r\n+\r\n+        {/* Paso 0: Datos Personales */}\r\n+        {step === 0 && (\r\n+          <div>\r\n+            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Datos Personales</h3>\r\n+            <div className=\"px-4 py-3\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Peso (kg)</span>\r\n+                <input\r\n+                  type=\"number\"\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n+                  value={weight}\r\n+                  onChange={(e) => setWeight(e.target.value)}\r\n+                  required\r\n+                />\r\n+                {errors.weight && <p style={{ color: 'red' }}>{errors.weight}</p>}\r\n+              </label>\r\n+            </div>\r\n+            <div className=\"px-4 py-3\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Altura (cm)</span>\r\n+                <input\r\n+                  type=\"number\"\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n+                  value={height}\r\n+                  onChange={(e) => setHeight(e.target.value)}\r\n+                  required\r\n+                />\r\n+                {errors.height && <p style={{ color: 'red' }}>{errors.height}</p>}\r\n+              </label>\r\n+            </div>\r\n+            <div className=\"px-4 py-3\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Edad</span>\r\n+                <input\r\n+                  type=\"number\"\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n+                  value={age}\r\n+                  onChange={(e) => setAge(e.target.value)}\r\n+                  required\r\n+                />\r\n+                {errors.age && <p style={{ color: 'red' }}>{errors.age}</p>}\r\n+              </label>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* Paso 1: Información adicional */}\r\n+        {step === 1 && (\r\n+          <div>\r\n+            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Información adicional</h3>\r\n+            <div className=\"px-4 py-3\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Sexo</span>\r\n+                <select\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n+                  value={gender}\r\n+                  onChange={(e) => setGender(e.target.value)}\r\n+                  required\r\n+                >\r\n+                  <option value=\"\">Seleccionar</option>\r\n+                  <option value=\"male\">Hombre</option>\r\n+                  <option value=\"female\">Mujer</option>\r\n+                </select>\r\n+                {errors.gender && <p style={{ color: 'red' }}>{errors.gender}</p>}\r\n+              </label>\r\n+            </div>\r\n+            <div className=\"px-4 py-3\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Nivel de actividad</span>\r\n+                <select\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n+                  value={activityLevel}\r\n+                  onChange={(e) => setActivityLevel(e.target.value)}\r\n+                  required\r\n+                >\r\n+                  <option value=\"\">Seleccionar</option>\r\n+                  <option value=\"sedentary\">Sedentario</option>\r\n+                  <option value=\"lightly_active\">Ligeramente activo</option>\r\n+                  <option value=\"moderately_active\">Moderadamente activo</option>\r\n+                  <option value=\"very_active\">Muy activo</option>\r\n+                  <option value=\"super_active\">Súper activo</option>\r\n+                </select>\r\n+                {errors.activityLevel && <p style={{ color: 'red' }}>{errors.activityLevel}</p>}\r\n+              </label>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* Paso 2: Datos avanzados y dispositivos */}\r\n+        {step === 2 && (\r\n+          <div>\r\n+            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Datos avanzados y dispositivos</h3>\r\n+            <label className=\"block pb-2\">\r\n+              <input type=\"checkbox\" checked={advanced} onChange={(e) => setAdvanced(e.target.checked)} />\r\n+              <span className=\"ml-2\">Proveer datos avanzados</span>\r\n+            </label>\r\n+\r\n+            {advanced && (\r\n+              <div>\r\n+                <div className=\"px-4 py-3\">\r\n+                  <label className=\"block pb-2\">\r\n+                    <span className=\"text-base font-medium text-[#111418]\">Porcentaje de grasa corporal (%)</span>\r\n+                    <input\r\n+                      type=\"number\"\r\n+                      className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n+                      value={bodyFat}\r\n+                      onChange={(e) => setBodyFat(e.target.value)}\r\n+                    />\r\n+                  </label>\r\n+                </div>\r\n+                <div className=\"px-4 py-3\">\r\n+                  <label className=\"block pb-2\">\r\n+                    <span className=\"text-base font-medium text-[#111418]\">Masa muscular (kg)</span>\r\n+                    <input\r\n+                      type=\"number\"\r\n+                      className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n+                      value={muscleMass}\r\n+                      onChange={(e) => setMuscleMass(e.target.value)}\r\n+                    />\r\n+                  </label>\r\n+                </div>\r\n+              </div>\r\n+            )}\r\n+\r\n+            <label className=\"block mt-4\">\r\n+              <input\r\n+                type=\"checkbox\"\r\n+                checked={smartDevice}\r\n+                onChange={(e) => setSmartDevice(e.target.checked)}\r\n+              />\r\n+              <span className=\"ml-2\">Sincronizar con un dispositivo inteligente</span>\r\n+            </label>\r\n+\r\n+            {smartDevice && (\r\n+              <div className=\"mt-4\">\r\n+                <div className=\"px-4 py-3\">\r\n+                  <label className=\"block pb-2\">\r\n+                    <span className=\"text-base font-medium text-[#111418]\">Frecuencia cardíaca en reposo (BPM)</span>\r\n+                    <input\r\n+                      type=\"number\"\r\n+                      className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n+                      value={heartRate}\r\n+                      onChange={(e) => setHeartRate(e.target.value)}\r\n+                    />\r\n+                  </label>\r\n+                </div>\r\n+                <div className=\"px-4 py-3\">\r\n+                  <label className=\"block pb-2\">\r\n+                    <span className=\"text-base font-medium text-[#111418]\">Pasos diarios</span>\r\n+                    <input\r\n+                      type=\"number\"\r\n+                      className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n+                      value={steps}\r\n+                      onChange={(e) => setSteps(e.target.value)}\r\n+                    />\r\n+                  </label>\r\n+                </div>\r\n+              </div>\r\n+            )}\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* Paso 3: Preferencias alimenticias */}\r\n+        {step === 3 && (\r\n+          <div>\r\n+            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Preferencias alimenticias</h3>\r\n+            <div className=\"flex gap-3 p-3 flex-wrap\">\r\n+              {['Sin restricciones', 'Vegetariano', 'Vegano', 'Sin gluten', 'Sin lactosa', 'Sin nueces', 'Dieta cetogénica'].map((preference) => (\r\n+                <div\r\n+                  key={preference}\r\n+                  onClick={() => handleCheckboxChange(setDietaryRestrictions, preference, dietaryRestrictions)}\r\n+                  className={`cursor-pointer flex h-8 items-center justify-center gap-x-2 rounded-xl px-4 ${\r\n+                    dietaryRestrictions.includes(preference) ? 'bg-[#1980e6] text-white' : 'bg-[#f0f2f4] text-[#111418]'\r\n+                  }`}\r\n+                >\r\n+                  <p className=\"text-sm font-medium\">{preference}</p>\r\n+                </div>\r\n+              ))}\r\n+            </div>\r\n+            <div className=\"px-4 py-3 mt-4\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Alimentos que prefieres evitar</span>\r\n+                <input\r\n+                  type=\"text\"\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n+                  placeholder=\"Ej. Brócoli, pescado\"\r\n+                  value={dislikedFoods}\r\n+                  onChange={(e) => setDislikedFoods(e.target.value)}\r\n+                />\r\n+              </label>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* Paso 4: Tipo de entrenamiento */}\r\n+        {step === 4 && (\r\n+          <div>\r\n+            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Tipo de entrenamiento</h3>\r\n+            <div className=\"flex gap-3 p-3 flex-wrap\">\r\n+              {['Ejercicio en casa', 'Ejercicio al aire libre', 'Ejercicio en el gimnasio', 'Ninguno', 'No estoy seguro'].map((preference) => (\r\n+                <div\r\n+                  key={preference}\r\n+                  onClick={() => handleCheckboxChange(setTrainingPreference, preference, trainingPreference)}\r\n+                  className={`cursor-pointer flex h-8 items-center justify-center gap-x-2 rounded-xl px-4 ${\r\n+                    trainingPreference.includes(preference) ? 'bg-[#1980e6] text-white' : 'bg-[#f0f2f4] text-[#111418]'\r\n+                  }`}\r\n+                >\r\n+                  <p className=\"text-sm font-medium\">{preference}</p>\r\n+                </div>\r\n+              ))}\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* Paso 5: Objetivos de Fitness */}\r\n+        {step === 5 && (\r\n+          <div>\r\n+            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Objetivos de Fitness</h3>\r\n+            <div className=\"flex gap-3 p-3 flex-wrap\">\r\n+              {['Perder peso', 'Ganar masa muscular', 'Mejorar la salud', 'Mejorar el rendimiento'].map((goal) => (\r\n+                <div\r\n+                  key={goal}\r\n+                  onClick={() => handleCheckboxChange(setFitnessGoals, goal, fitnessGoals)}\r\n+                  className={`cursor-pointer flex h-8 items-center justify-center gap-x-2 rounded-xl px-4 ${\r\n+                    fitnessGoals.includes(goal) ? 'bg-[#1980e6] text-white' : 'bg-[#f0f2f4] text-[#111418]'\r\n+                  }`}\r\n+                >\r\n+                  <p className=\"text-sm font-medium\">{goal}</p>\r\n+                </div>\r\n+              ))}\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* Botones de navegación */}\r\n+        <div className=\"flex justify-between mt-6\">\r\n+          {step > 0 && (\r\n+            <button\r\n+              type=\"button\"\r\n+              className=\"bg-gray-300 text-gray-800 font-bold py-2 px-4 rounded\"\r\n+              onClick={prevStep}\r\n+            >\r\n+              Anterior\r\n+            </button>\r\n+          )}\r\n+          {step < 5 ? (\r\n+            <button\r\n+              type=\"button\"\r\n+              className=\"bg-blue-500 text-white font-bold py-2 px-4 rounded\"\r\n+              onClick={nextStep}\r\n+            >\r\n+              Siguiente\r\n+            </button>\r\n+          ) : (\r\n+            <button\r\n+              type=\"submit\"\r\n+              className=\"bg-green-500 text-white font-bold py-2 px-4 rounded\"\r\n+            >\r\n+              Finalizar\r\n+            </button>\r\n+          )}\r\n+        </div>\r\n+      </form>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default Form;\r\n"
                },
                {
                    "date": 1730410520137,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,374 @@\n+import React, { useState } from 'react';\r\n+import axios from 'axios';\r\n+\r\n+const Form = ({ setPlan }) => {\r\n+  // Estados para todos los campos del formulario básico\r\n+  const [weight, setWeight] = useState('');\r\n+  const [height, setHeight] = useState('');\r\n+  const [age, setAge] = useState('');\r\n+  const [gender, setGender] = useState('');\r\n+  const [activityLevel, setActivityLevel] = useState('');\r\n+  const [dietaryRestrictions, setDietaryRestrictions] = useState([]);\r\n+  const [dislikedFoods, setDislikedFoods] = useState('');\r\n+  const [trainingPreference, setTrainingPreference] = useState([]);\r\n+  const [fitnessGoals, setFitnessGoals] = useState([]);\r\n+\r\n+  // Estados para datos avanzados y dispositivos inteligentes\r\n+  const [advanced, setAdvanced] = useState(false);\r\n+  const [bodyFat, setBodyFat] = useState('');\r\n+  const [muscleMass, setMuscleMass] = useState('');\r\n+  const [heartRate, setHeartRate] = useState('');\r\n+  const [steps, setSteps] = useState('');\r\n+  const [smartDevice, setSmartDevice] = useState(false);\r\n+\r\n+  const [step, setStep] = useState(0);\r\n+  const [errors, setErrors] = useState({}); // Estado de errores\r\n+\r\n+  const validateForm = () => {\r\n+    const newErrors = {};\r\n+  \r\n+    // Validación para el peso\r\n+    if (!weight || isNaN(weight) || weight < 20 || weight > 500) {\r\n+      newErrors.weight = 'El peso debe estar entre 20 kg y 500 kg';\r\n+    }\r\n+  \r\n+    // Validación para la altura\r\n+    if (!height || isNaN(height) || height < 50 || height > 300) {\r\n+      newErrors.height = 'La altura debe estar entre 50 cm y 300 cm';\r\n+    }\r\n+  \r\n+    // Validación para la edad\r\n+    if (!age || isNaN(age) || age < 10 || age > 120) {\r\n+      newErrors.age = 'La edad debe estar entre 10 y 120 años';\r\n+    }\r\n+  \r\n+    // Validación para el género\r\n+    if (!gender) {\r\n+      newErrors.gender = 'Selecciona un género';\r\n+    }\r\n+  \r\n+    // Validación para el nivel de actividad\r\n+    if (!activityLevel) {\r\n+      newErrors.activityLevel = 'Selecciona un nivel de actividad';\r\n+    }\r\n+  \r\n+    // Validación para los objetivos de fitness\r\n+    if (fitnessGoals.length === 0) {\r\n+      newErrors.fitnessGoals = 'Selecciona al menos un objetivo de fitness';\r\n+    }\r\n+  \r\n+    setErrors(newErrors);\r\n+    return Object.keys(newErrors).length === 0;\r\n+  };\r\n+  \r\n+\r\n+  const handleSubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    if (validateForm()) {\r\n+        const userData = {\r\n+        weight: parseFloat(weight),\r\n+        height: parseFloat(height),\r\n+        age: parseInt(age),\r\n+        gender,\r\n+        activity_level: activityLevel,\r\n+        goals: fitnessGoals,\r\n+        routine_preference: trainingPreference.join(', ') || 'Ninguno',\r\n+        dietary_restrictions: dietaryRestrictions,\r\n+        disliked_foods: dislikedFoods,\r\n+        ...(advanced && { body_fat: parseFloat(bodyFat), muscle_mass: parseFloat(muscleMass) }),\r\n+        ...(smartDevice && { heart_rate: parseFloat(heartRate), steps: parseInt(steps) })\r\n+      };\r\n+\r\n+      try {\r\n+        const response = await axios.post('http://localhost:8000/generate_plan/', userData);\r\n+        setPlan(response.data);\r\n+        setHasPlan(true); // Actualiza hasPlan a true\r\n+    } catch (error) {\r\n+        console.error('Error al obtener el plan:', error);\r\n+    }\r\n+}\r\n+};\r\n+\r\n+  const handleCheckboxChange = (setState, value, state) => {\r\n+    if (state.includes(value)) {\r\n+      setState(state.filter((item) => item !== value));\r\n+    } else {\r\n+      setState([...state, value]);\r\n+    }\r\n+  };\r\n+\r\n+  const nextStep = () => setStep((prevStep) => Math.min(prevStep + 1, 5));\r\n+  const prevStep = () => setStep((prevStep) => Math.max(prevStep - 1, 0));\r\n+\r\n+  return (\r\n+    <div className=\"flex flex-col items-center min-h-screen bg-white font-['Noto_Sans', 'Work_Sans', sans-serif]\">\r\n+      <form onSubmit={handleSubmit} className=\"w-[512px] max-w-full p-8 bg-white rounded-lg shadow-md\">\r\n+\r\n+        {/* Paso 0: Datos Personales */}\r\n+        {step === 0 && (\r\n+          <div>\r\n+            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Datos Personales</h3>\r\n+            <div className=\"px-4 py-3\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Peso (kg)</span>\r\n+                <input\r\n+                  type=\"number\"\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n+                  value={weight}\r\n+                  onChange={(e) => setWeight(e.target.value)}\r\n+                  required\r\n+                />\r\n+                {errors.weight && <p style={{ color: 'red' }}>{errors.weight}</p>}\r\n+              </label>\r\n+            </div>\r\n+            <div className=\"px-4 py-3\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Altura (cm)</span>\r\n+                <input\r\n+                  type=\"number\"\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n+                  value={height}\r\n+                  onChange={(e) => setHeight(e.target.value)}\r\n+                  required\r\n+                />\r\n+                {errors.height && <p style={{ color: 'red' }}>{errors.height}</p>}\r\n+              </label>\r\n+            </div>\r\n+            <div className=\"px-4 py-3\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Edad</span>\r\n+                <input\r\n+                  type=\"number\"\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n+                  value={age}\r\n+                  onChange={(e) => setAge(e.target.value)}\r\n+                  required\r\n+                />\r\n+                {errors.age && <p style={{ color: 'red' }}>{errors.age}</p>}\r\n+              </label>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* Paso 1: Información adicional */}\r\n+        {step === 1 && (\r\n+          <div>\r\n+            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Información adicional</h3>\r\n+            <div className=\"px-4 py-3\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Sexo</span>\r\n+                <select\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n+                  value={gender}\r\n+                  onChange={(e) => setGender(e.target.value)}\r\n+                  required\r\n+                >\r\n+                  <option value=\"\">Seleccionar</option>\r\n+                  <option value=\"male\">Hombre</option>\r\n+                  <option value=\"female\">Mujer</option>\r\n+                </select>\r\n+                {errors.gender && <p style={{ color: 'red' }}>{errors.gender}</p>}\r\n+              </label>\r\n+            </div>\r\n+            <div className=\"px-4 py-3\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Nivel de actividad</span>\r\n+                <select\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n+                  value={activityLevel}\r\n+                  onChange={(e) => setActivityLevel(e.target.value)}\r\n+                  required\r\n+                >\r\n+                  <option value=\"\">Seleccionar</option>\r\n+                  <option value=\"sedentary\">Sedentario</option>\r\n+                  <option value=\"lightly_active\">Ligeramente activo</option>\r\n+                  <option value=\"moderately_active\">Moderadamente activo</option>\r\n+                  <option value=\"very_active\">Muy activo</option>\r\n+                  <option value=\"super_active\">Súper activo</option>\r\n+                </select>\r\n+                {errors.activityLevel && <p style={{ color: 'red' }}>{errors.activityLevel}</p>}\r\n+              </label>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* Paso 2: Datos avanzados y dispositivos */}\r\n+        {step === 2 && (\r\n+          <div>\r\n+            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Datos avanzados y dispositivos</h3>\r\n+            <label className=\"block pb-2\">\r\n+              <input type=\"checkbox\" checked={advanced} onChange={(e) => setAdvanced(e.target.checked)} />\r\n+              <span className=\"ml-2\">Proveer datos avanzados</span>\r\n+            </label>\r\n+\r\n+            {advanced && (\r\n+              <div>\r\n+                <div className=\"px-4 py-3\">\r\n+                  <label className=\"block pb-2\">\r\n+                    <span className=\"text-base font-medium text-[#111418]\">Porcentaje de grasa corporal (%)</span>\r\n+                    <input\r\n+                      type=\"number\"\r\n+                      className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n+                      value={bodyFat}\r\n+                      onChange={(e) => setBodyFat(e.target.value)}\r\n+                    />\r\n+                  </label>\r\n+                </div>\r\n+                <div className=\"px-4 py-3\">\r\n+                  <label className=\"block pb-2\">\r\n+                    <span className=\"text-base font-medium text-[#111418]\">Masa muscular (kg)</span>\r\n+                    <input\r\n+                      type=\"number\"\r\n+                      className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n+                      value={muscleMass}\r\n+                      onChange={(e) => setMuscleMass(e.target.value)}\r\n+                    />\r\n+                  </label>\r\n+                </div>\r\n+              </div>\r\n+            )}\r\n+\r\n+            <label className=\"block mt-4\">\r\n+              <input\r\n+                type=\"checkbox\"\r\n+                checked={smartDevice}\r\n+                onChange={(e) => setSmartDevice(e.target.checked)}\r\n+              />\r\n+              <span className=\"ml-2\">Sincronizar con un dispositivo inteligente</span>\r\n+            </label>\r\n+\r\n+            {smartDevice && (\r\n+              <div className=\"mt-4\">\r\n+                <div className=\"px-4 py-3\">\r\n+                  <label className=\"block pb-2\">\r\n+                    <span className=\"text-base font-medium text-[#111418]\">Frecuencia cardíaca en reposo (BPM)</span>\r\n+                    <input\r\n+                      type=\"number\"\r\n+                      className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n+                      value={heartRate}\r\n+                      onChange={(e) => setHeartRate(e.target.value)}\r\n+                    />\r\n+                  </label>\r\n+                </div>\r\n+                <div className=\"px-4 py-3\">\r\n+                  <label className=\"block pb-2\">\r\n+                    <span className=\"text-base font-medium text-[#111418]\">Pasos diarios</span>\r\n+                    <input\r\n+                      type=\"number\"\r\n+                      className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n+                      value={steps}\r\n+                      onChange={(e) => setSteps(e.target.value)}\r\n+                    />\r\n+                  </label>\r\n+                </div>\r\n+              </div>\r\n+            )}\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* Paso 3: Preferencias alimenticias */}\r\n+        {step === 3 && (\r\n+          <div>\r\n+            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Preferencias alimenticias</h3>\r\n+            <div className=\"flex gap-3 p-3 flex-wrap\">\r\n+              {['Sin restricciones', 'Vegetariano', 'Vegano', 'Sin gluten', 'Sin lactosa', 'Sin nueces', 'Dieta cetogénica'].map((preference) => (\r\n+                <div\r\n+                  key={preference}\r\n+                  onClick={() => handleCheckboxChange(setDietaryRestrictions, preference, dietaryRestrictions)}\r\n+                  className={`cursor-pointer flex h-8 items-center justify-center gap-x-2 rounded-xl px-4 ${\r\n+                    dietaryRestrictions.includes(preference) ? 'bg-[#1980e6] text-white' : 'bg-[#f0f2f4] text-[#111418]'\r\n+                  }`}\r\n+                >\r\n+                  <p className=\"text-sm font-medium\">{preference}</p>\r\n+                </div>\r\n+              ))}\r\n+            </div>\r\n+            <div className=\"px-4 py-3 mt-4\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Alimentos que prefieres evitar</span>\r\n+                <input\r\n+                  type=\"text\"\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n+                  placeholder=\"Ej. Brócoli, pescado\"\r\n+                  value={dislikedFoods}\r\n+                  onChange={(e) => setDislikedFoods(e.target.value)}\r\n+                />\r\n+              </label>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* Paso 4: Tipo de entrenamiento */}\r\n+        {step === 4 && (\r\n+          <div>\r\n+            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Tipo de entrenamiento</h3>\r\n+            <div className=\"flex gap-3 p-3 flex-wrap\">\r\n+              {['Ejercicio en casa', 'Ejercicio al aire libre', 'Ejercicio en el gimnasio', 'Ninguno', 'No estoy seguro'].map((preference) => (\r\n+                <div\r\n+                  key={preference}\r\n+                  onClick={() => handleCheckboxChange(setTrainingPreference, preference, trainingPreference)}\r\n+                  className={`cursor-pointer flex h-8 items-center justify-center gap-x-2 rounded-xl px-4 ${\r\n+                    trainingPreference.includes(preference) ? 'bg-[#1980e6] text-white' : 'bg-[#f0f2f4] text-[#111418]'\r\n+                  }`}\r\n+                >\r\n+                  <p className=\"text-sm font-medium\">{preference}</p>\r\n+                </div>\r\n+              ))}\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* Paso 5: Objetivos de Fitness */}\r\n+        {step === 5 && (\r\n+          <div>\r\n+            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Objetivos de Fitness</h3>\r\n+            <div className=\"flex gap-3 p-3 flex-wrap\">\r\n+              {['Perder peso', 'Ganar masa muscular', 'Mejorar la salud', 'Mejorar el rendimiento'].map((goal) => (\r\n+                <div\r\n+                  key={goal}\r\n+                  onClick={() => handleCheckboxChange(setFitnessGoals, goal, fitnessGoals)}\r\n+                  className={`cursor-pointer flex h-8 items-center justify-center gap-x-2 rounded-xl px-4 ${\r\n+                    fitnessGoals.includes(goal) ? 'bg-[#1980e6] text-white' : 'bg-[#f0f2f4] text-[#111418]'\r\n+                  }`}\r\n+                >\r\n+                  <p className=\"text-sm font-medium\">{goal}</p>\r\n+                </div>\r\n+              ))}\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* Botones de navegación */}\r\n+        <div className=\"flex justify-between mt-6\">\r\n+          {step > 0 && (\r\n+            <button\r\n+              type=\"button\"\r\n+              className=\"bg-gray-300 text-gray-800 font-bold py-2 px-4 rounded\"\r\n+              onClick={prevStep}\r\n+            >\r\n+              Anterior\r\n+            </button>\r\n+          )}\r\n+          {step < 5 ? (\r\n+            <button\r\n+              type=\"button\"\r\n+              className=\"bg-blue-500 text-white font-bold py-2 px-4 rounded\"\r\n+              onClick={nextStep}\r\n+            >\r\n+              Siguiente\r\n+            </button>\r\n+          ) : (\r\n+            <button\r\n+              type=\"submit\"\r\n+              className=\"bg-green-500 text-white font-bold py-2 px-4 rounded\"\r\n+            >\r\n+              Finalizar\r\n+            </button>\r\n+          )}\r\n+        </div>\r\n+      </form>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default Form;\r\n"
                },
                {
                    "date": 1730410528274,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,374 @@\n+import React, { useState } from 'react';\r\n+import axios from 'axios';\r\n+\r\n+const Form = ({ setPlan }) => {\r\n+  // Estados para todos los campos del formulario básico\r\n+  const [weight, setWeight] = useState('');\r\n+  const [height, setHeight] = useState('');\r\n+  const [age, setAge] = useState('');\r\n+  const [gender, setGender] = useState('');\r\n+  const [activityLevel, setActivityLevel] = useState('');\r\n+  const [dietaryRestrictions, setDietaryRestrictions] = useState([]);\r\n+  const [dislikedFoods, setDislikedFoods] = useState('');\r\n+  const [trainingPreference, setTrainingPreference] = useState([]);\r\n+  const [fitnessGoals, setFitnessGoals] = useState([]);\r\n+\r\n+  // Estados para datos avanzados y dispositivos inteligentes\r\n+  const [advanced, setAdvanced] = useState(false);\r\n+  const [bodyFat, setBodyFat] = useState('');\r\n+  const [muscleMass, setMuscleMass] = useState('');\r\n+  const [heartRate, setHeartRate] = useState('');\r\n+  const [steps, setSteps] = useState('');\r\n+  const [smartDevice, setSmartDevice] = useState(false);\r\n+\r\n+  const [step, setStep] = useState(0);\r\n+  const [errors, setErrors] = useState({}); // Estado de errores\r\n+\r\n+  const validateForm = () => {\r\n+    const newErrors = {};\r\n+  \r\n+    // Validación para el peso\r\n+    if (!weight || isNaN(weight) || weight < 20 || weight > 500) {\r\n+      newErrors.weight = 'El peso debe estar entre 20 kg y 500 kg';\r\n+    }\r\n+  \r\n+    // Validación para la altura\r\n+    if (!height || isNaN(height) || height < 50 || height > 300) {\r\n+      newErrors.height = 'La altura debe estar entre 50 cm y 300 cm';\r\n+    }\r\n+  \r\n+    // Validación para la edad\r\n+    if (!age || isNaN(age) || age < 10 || age > 120) {\r\n+      newErrors.age = 'La edad debe estar entre 10 y 120 años';\r\n+    }\r\n+  \r\n+    // Validación para el género\r\n+    if (!gender) {\r\n+      newErrors.gender = 'Selecciona un género';\r\n+    }\r\n+  \r\n+    // Validación para el nivel de actividad\r\n+    if (!activityLevel) {\r\n+      newErrors.activityLevel = 'Selecciona un nivel de actividad';\r\n+    }\r\n+  \r\n+    // Validación para los objetivos de fitness\r\n+    if (fitnessGoals.length === 0) {\r\n+      newErrors.fitnessGoals = 'Selecciona al menos un objetivo de fitness';\r\n+    }\r\n+  \r\n+    setErrors(newErrors);\r\n+    return Object.keys(newErrors).length === 0;\r\n+  };\r\n+  \r\n+\r\n+  const handleSubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    if (validateForm()) {\r\n+        const userData = {\r\n+        weight: parseFloat(weight),\r\n+        height: parseFloat(height),\r\n+        age: parseInt(age),\r\n+        gender,\r\n+        activity_level: activityLevel,\r\n+        goals: fitnessGoals,\r\n+        routine_preference: trainingPreference.join(', ') || 'Ninguno',\r\n+        dietary_restrictions: dietaryRestrictions,\r\n+        disliked_foods: dislikedFoods,\r\n+        ...(advanced && { body_fat: parseFloat(bodyFat), muscle_mass: parseFloat(muscleMass) }),\r\n+        ...(smartDevice && { heart_rate: parseFloat(heartRate), steps: parseInt(steps) })\r\n+      };\r\n+\r\n+      try {\r\n+        const response = await axios.post('http://localhost:8000/generate_plan/', userData);\r\n+        setPlan(response.data);\r\n+        setHasPlan(true); // Actualiza hasPlan a true\r\n+    } catch (error) {\r\n+        console.error('Error al obtener el plan:', error);\r\n+    }\r\n+}\r\n+};\r\n+\r\n+  const handleCheckboxChange = (setState, value, state) => {\r\n+    if (state.includes(value)) {\r\n+      setState(state.filter((item) => item !== value));\r\n+    } else {\r\n+      setState([...state, value]);\r\n+    }\r\n+  };\r\n+\r\n+  const nextStep = () => setStep((prevStep) => Math.min(prevStep + 1, 5));\r\n+  const prevStep = () => setStep((prevStep) => Math.max(prevStep - 1, 0));\r\n+\r\n+  return (\r\n+    <div className=\"flex flex-col items-center min-h-screen bg-white font-['Noto_Sans', 'Work_Sans', sans-serif]\">\r\n+      <form onSubmit={handleSubmit} className=\"w-[512px] max-w-full p-8 bg-white rounded-lg shadow-md\">\r\n+\r\n+        {/* Paso 0: Datos Personales */}\r\n+        {step === 0 && (\r\n+          <div>\r\n+            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Datos Personales</h3>\r\n+            <div className=\"px-4 py-3\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Peso (kg)</span>\r\n+                <input\r\n+                  type=\"number\"\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n+                  value={weight}\r\n+                  onChange={(e) => setWeight(e.target.value)}\r\n+                  required\r\n+                />\r\n+                {errors.weight && <p style={{ color: 'red' }}>{errors.weight}</p>}\r\n+              </label>\r\n+            </div>\r\n+            <div className=\"px-4 py-3\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Altura (cm)</span>\r\n+                <input\r\n+                  type=\"number\"\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n+                  value={height}\r\n+                  onChange={(e) => setHeight(e.target.value)}\r\n+                  required\r\n+                />\r\n+                {errors.height && <p style={{ color: 'red' }}>{errors.height}</p>}\r\n+              </label>\r\n+            </div>\r\n+            <div className=\"px-4 py-3\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Edad</span>\r\n+                <input\r\n+                  type=\"number\"\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n+                  value={age}\r\n+                  onChange={(e) => setAge(e.target.value)}\r\n+                  required\r\n+                />\r\n+                {errors.age && <p style={{ color: 'red' }}>{errors.age}</p>}\r\n+              </label>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* Paso 1: Información adicional */}\r\n+        {step === 1 && (\r\n+          <div>\r\n+            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Información adicional</h3>\r\n+            <div className=\"px-4 py-3\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Sexo</span>\r\n+                <select\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n+                  value={gender}\r\n+                  onChange={(e) => setGender(e.target.value)}\r\n+                  required\r\n+                >\r\n+                  <option value=\"\">Seleccionar</option>\r\n+                  <option value=\"male\">Hombre</option>\r\n+                  <option value=\"female\">Mujer</option>\r\n+                </select>\r\n+                {errors.gender && <p style={{ color: 'red' }}>{errors.gender}</p>}\r\n+              </label>\r\n+            </div>\r\n+            <div className=\"px-4 py-3\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Nivel de actividad</span>\r\n+                <select\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n+                  value={activityLevel}\r\n+                  onChange={(e) => setActivityLevel(e.target.value)}\r\n+                  required\r\n+                >\r\n+                  <option value=\"\">Seleccionar</option>\r\n+                  <option value=\"sedentary\">Sedentario</option>\r\n+                  <option value=\"lightly_active\">Ligeramente activo</option>\r\n+                  <option value=\"moderately_active\">Moderadamente activo</option>\r\n+                  <option value=\"very_active\">Muy activo</option>\r\n+                  <option value=\"super_active\">Súper activo</option>\r\n+                </select>\r\n+                {errors.activityLevel && <p style={{ color: 'red' }}>{errors.activityLevel}</p>}\r\n+              </label>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* Paso 2: Datos avanzados y dispositivos */}\r\n+        {step === 2 && (\r\n+          <div>\r\n+            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Datos avanzados y dispositivos</h3>\r\n+            <label className=\"block pb-2\">\r\n+              <input type=\"checkbox\" checked={advanced} onChange={(e) => setAdvanced(e.target.checked)} />\r\n+              <span className=\"ml-2\">Proveer datos avanzados</span>\r\n+            </label>\r\n+\r\n+            {advanced && (\r\n+              <div>\r\n+                <div className=\"px-4 py-3\">\r\n+                  <label className=\"block pb-2\">\r\n+                    <span className=\"text-base font-medium text-[#111418]\">Porcentaje de grasa corporal (%)</span>\r\n+                    <input\r\n+                      type=\"number\"\r\n+                      className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n+                      value={bodyFat}\r\n+                      onChange={(e) => setBodyFat(e.target.value)}\r\n+                    />\r\n+                  </label>\r\n+                </div>\r\n+                <div className=\"px-4 py-3\">\r\n+                  <label className=\"block pb-2\">\r\n+                    <span className=\"text-base font-medium text-[#111418]\">Masa muscular (kg)</span>\r\n+                    <input\r\n+                      type=\"number\"\r\n+                      className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n+                      value={muscleMass}\r\n+                      onChange={(e) => setMuscleMass(e.target.value)}\r\n+                    />\r\n+                  </label>\r\n+                </div>\r\n+              </div>\r\n+            )}\r\n+\r\n+            <label className=\"block mt-4\">\r\n+              <input\r\n+                type=\"checkbox\"\r\n+                checked={smartDevice}\r\n+                onChange={(e) => setSmartDevice(e.target.checked)}\r\n+              />\r\n+              <span className=\"ml-2\">Sincronizar con un dispositivo inteligente</span>\r\n+            </label>\r\n+\r\n+            {smartDevice && (\r\n+              <div className=\"mt-4\">\r\n+                <div className=\"px-4 py-3\">\r\n+                  <label className=\"block pb-2\">\r\n+                    <span className=\"text-base font-medium text-[#111418]\">Frecuencia cardíaca en reposo (BPM)</span>\r\n+                    <input\r\n+                      type=\"number\"\r\n+                      className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n+                      value={heartRate}\r\n+                      onChange={(e) => setHeartRate(e.target.value)}\r\n+                    />\r\n+                  </label>\r\n+                </div>\r\n+                <div className=\"px-4 py-3\">\r\n+                  <label className=\"block pb-2\">\r\n+                    <span className=\"text-base font-medium text-[#111418]\">Pasos diarios</span>\r\n+                    <input\r\n+                      type=\"number\"\r\n+                      className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n+                      value={steps}\r\n+                      onChange={(e) => setSteps(e.target.value)}\r\n+                    />\r\n+                  </label>\r\n+                </div>\r\n+              </div>\r\n+            )}\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* Paso 3: Preferencias alimenticias */}\r\n+        {step === 3 && (\r\n+          <div>\r\n+            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Preferencias alimenticias</h3>\r\n+            <div className=\"flex gap-3 p-3 flex-wrap\">\r\n+              {['Sin restricciones', 'Vegetariano', 'Vegano', 'Sin gluten', 'Sin lactosa', 'Sin nueces', 'Dieta cetogénica'].map((preference) => (\r\n+                <div\r\n+                  key={preference}\r\n+                  onClick={() => handleCheckboxChange(setDietaryRestrictions, preference, dietaryRestrictions)}\r\n+                  className={`cursor-pointer flex h-8 items-center justify-center gap-x-2 rounded-xl px-4 ${\r\n+                    dietaryRestrictions.includes(preference) ? 'bg-[#1980e6] text-white' : 'bg-[#f0f2f4] text-[#111418]'\r\n+                  }`}\r\n+                >\r\n+                  <p className=\"text-sm font-medium\">{preference}</p>\r\n+                </div>\r\n+              ))}\r\n+            </div>\r\n+            <div className=\"px-4 py-3 mt-4\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Alimentos que prefieres evitar</span>\r\n+                <input\r\n+                  type=\"text\"\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n+                  placeholder=\"Ej. Brócoli, pescado\"\r\n+                  value={dislikedFoods}\r\n+                  onChange={(e) => setDislikedFoods(e.target.value)}\r\n+                />\r\n+              </label>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* Paso 4: Tipo de entrenamiento */}\r\n+        {step === 4 && (\r\n+          <div>\r\n+            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Tipo de entrenamiento</h3>\r\n+            <div className=\"flex gap-3 p-3 flex-wrap\">\r\n+              {['Ejercicio en casa', 'Ejercicio al aire libre', 'Ejercicio en el gimnasio', 'Ninguno', 'No estoy seguro'].map((preference) => (\r\n+                <div\r\n+                  key={preference}\r\n+                  onClick={() => handleCheckboxChange(setTrainingPreference, preference, trainingPreference)}\r\n+                  className={`cursor-pointer flex h-8 items-center justify-center gap-x-2 rounded-xl px-4 ${\r\n+                    trainingPreference.includes(preference) ? 'bg-[#1980e6] text-white' : 'bg-[#f0f2f4] text-[#111418]'\r\n+                  }`}\r\n+                >\r\n+                  <p className=\"text-sm font-medium\">{preference}</p>\r\n+                </div>\r\n+              ))}\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* Paso 5: Objetivos de Fitness */}\r\n+        {step === 5 && (\r\n+          <div>\r\n+            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Objetivos de Fitness</h3>\r\n+            <div className=\"flex gap-3 p-3 flex-wrap\">\r\n+              {['Perder peso', 'Ganar masa muscular', 'Mejorar la salud', 'Mejorar el rendimiento'].map((goal) => (\r\n+                <div\r\n+                  key={goal}\r\n+                  onClick={() => handleCheckboxChange(setFitnessGoals, goal, fitnessGoals)}\r\n+                  className={`cursor-pointer flex h-8 items-center justify-center gap-x-2 rounded-xl px-4 ${\r\n+                    fitnessGoals.includes(goal) ? 'bg-[#1980e6] text-white' : 'bg-[#f0f2f4] text-[#111418]'\r\n+                  }`}\r\n+                >\r\n+                  <p className=\"text-sm font-medium\">{goal}</p>\r\n+                </div>\r\n+              ))}\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* Botones de navegación */}\r\n+        <div className=\"flex justify-between mt-6\">\r\n+          {step > 0 && (\r\n+            <button\r\n+              type=\"button\"\r\n+              className=\"bg-gray-300 text-gray-800 font-bold py-2 px-4 rounded\"\r\n+              onClick={prevStep}\r\n+            >\r\n+              Anterior\r\n+            </button>\r\n+          )}\r\n+          {step < 5 ? (\r\n+            <button\r\n+              type=\"button\"\r\n+              className=\"bg-blue-500 text-white font-bold py-2 px-4 rounded\"\r\n+              onClick={nextStep}\r\n+            >\r\n+              Siguiente\r\n+            </button>\r\n+          ) : (\r\n+            <button\r\n+              type=\"submit\"\r\n+              className=\"bg-green-500 text-white font-bold py-2 px-4 rounded\"\r\n+            >\r\n+              Finalizar\r\n+            </button>\r\n+          )}\r\n+        </div>\r\n+      </form>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default Form;\r\n"
                },
                {
                    "date": 1730410704567,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,374 @@\n+import React, { useState } from 'react';\r\n+import axios from 'axios';\r\n+\r\n+const Form = ({ setPlan, setHasPlan }) => {\r\n+  // Estados para todos los campos del formulario básico\r\n+  const [weight, setWeight] = useState('');\r\n+  const [height, setHeight] = useState('');\r\n+  const [age, setAge] = useState('');\r\n+  const [gender, setGender] = useState('');\r\n+  const [activityLevel, setActivityLevel] = useState('');\r\n+  const [dietaryRestrictions, setDietaryRestrictions] = useState([]);\r\n+  const [dislikedFoods, setDislikedFoods] = useState('');\r\n+  const [trainingPreference, setTrainingPreference] = useState([]);\r\n+  const [fitnessGoals, setFitnessGoals] = useState([]);\r\n+\r\n+  // Estados para datos avanzados y dispositivos inteligentes\r\n+  const [advanced, setAdvanced] = useState(false);\r\n+  const [bodyFat, setBodyFat] = useState('');\r\n+  const [muscleMass, setMuscleMass] = useState('');\r\n+  const [heartRate, setHeartRate] = useState('');\r\n+  const [steps, setSteps] = useState('');\r\n+  const [smartDevice, setSmartDevice] = useState(false);\r\n+\r\n+  const [step, setStep] = useState(0);\r\n+  const [errors, setErrors] = useState({}); // Estado de errores\r\n+\r\n+  const validateForm = () => {\r\n+    const newErrors = {};\r\n+  \r\n+    // Validación para el peso\r\n+    if (!weight || isNaN(weight) || weight < 20 || weight > 500) {\r\n+      newErrors.weight = 'El peso debe estar entre 20 kg y 500 kg';\r\n+    }\r\n+  \r\n+    // Validación para la altura\r\n+    if (!height || isNaN(height) || height < 50 || height > 300) {\r\n+      newErrors.height = 'La altura debe estar entre 50 cm y 300 cm';\r\n+    }\r\n+  \r\n+    // Validación para la edad\r\n+    if (!age || isNaN(age) || age < 10 || age > 120) {\r\n+      newErrors.age = 'La edad debe estar entre 10 y 120 años';\r\n+    }\r\n+  \r\n+    // Validación para el género\r\n+    if (!gender) {\r\n+      newErrors.gender = 'Selecciona un género';\r\n+    }\r\n+  \r\n+    // Validación para el nivel de actividad\r\n+    if (!activityLevel) {\r\n+      newErrors.activityLevel = 'Selecciona un nivel de actividad';\r\n+    }\r\n+  \r\n+    // Validación para los objetivos de fitness\r\n+    if (fitnessGoals.length === 0) {\r\n+      newErrors.fitnessGoals = 'Selecciona al menos un objetivo de fitness';\r\n+    }\r\n+  \r\n+    setErrors(newErrors);\r\n+    return Object.keys(newErrors).length === 0;\r\n+  };\r\n+  \r\n+\r\n+  const handleSubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    if (validateForm()) {\r\n+        const userData = {\r\n+        weight: parseFloat(weight),\r\n+        height: parseFloat(height),\r\n+        age: parseInt(age),\r\n+        gender,\r\n+        activity_level: activityLevel,\r\n+        goals: fitnessGoals,\r\n+        routine_preference: trainingPreference.join(', ') || 'Ninguno',\r\n+        dietary_restrictions: dietaryRestrictions,\r\n+        disliked_foods: dislikedFoods,\r\n+        ...(advanced && { body_fat: parseFloat(bodyFat), muscle_mass: parseFloat(muscleMass) }),\r\n+        ...(smartDevice && { heart_rate: parseFloat(heartRate), steps: parseInt(steps) })\r\n+      };\r\n+\r\n+      try {\r\n+        const response = await axios.post('http://localhost:8000/generate_plan/', userData);\r\n+        setPlan(response.data);\r\n+        setHasPlan(true); // Actualiza hasPlan a true\r\n+    } catch (error) {\r\n+        console.error('Error al obtener el plan:', error);\r\n+    }\r\n+}\r\n+};\r\n+\r\n+  const handleCheckboxChange = (setState, value, state) => {\r\n+    if (state.includes(value)) {\r\n+      setState(state.filter((item) => item !== value));\r\n+    } else {\r\n+      setState([...state, value]);\r\n+    }\r\n+  };\r\n+\r\n+  const nextStep = () => setStep((prevStep) => Math.min(prevStep + 1, 5));\r\n+  const prevStep = () => setStep((prevStep) => Math.max(prevStep - 1, 0));\r\n+\r\n+  return (\r\n+    <div className=\"flex flex-col items-center min-h-screen bg-white font-['Noto_Sans', 'Work_Sans', sans-serif]\">\r\n+      <form onSubmit={handleSubmit} className=\"w-[512px] max-w-full p-8 bg-white rounded-lg shadow-md\">\r\n+\r\n+        {/* Paso 0: Datos Personales */}\r\n+        {step === 0 && (\r\n+          <div>\r\n+            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Datos Personales</h3>\r\n+            <div className=\"px-4 py-3\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Peso (kg)</span>\r\n+                <input\r\n+                  type=\"number\"\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n+                  value={weight}\r\n+                  onChange={(e) => setWeight(e.target.value)}\r\n+                  required\r\n+                />\r\n+                {errors.weight && <p style={{ color: 'red' }}>{errors.weight}</p>}\r\n+              </label>\r\n+            </div>\r\n+            <div className=\"px-4 py-3\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Altura (cm)</span>\r\n+                <input\r\n+                  type=\"number\"\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n+                  value={height}\r\n+                  onChange={(e) => setHeight(e.target.value)}\r\n+                  required\r\n+                />\r\n+                {errors.height && <p style={{ color: 'red' }}>{errors.height}</p>}\r\n+              </label>\r\n+            </div>\r\n+            <div className=\"px-4 py-3\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Edad</span>\r\n+                <input\r\n+                  type=\"number\"\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n+                  value={age}\r\n+                  onChange={(e) => setAge(e.target.value)}\r\n+                  required\r\n+                />\r\n+                {errors.age && <p style={{ color: 'red' }}>{errors.age}</p>}\r\n+              </label>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* Paso 1: Información adicional */}\r\n+        {step === 1 && (\r\n+          <div>\r\n+            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Información adicional</h3>\r\n+            <div className=\"px-4 py-3\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Sexo</span>\r\n+                <select\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n+                  value={gender}\r\n+                  onChange={(e) => setGender(e.target.value)}\r\n+                  required\r\n+                >\r\n+                  <option value=\"\">Seleccionar</option>\r\n+                  <option value=\"male\">Hombre</option>\r\n+                  <option value=\"female\">Mujer</option>\r\n+                </select>\r\n+                {errors.gender && <p style={{ color: 'red' }}>{errors.gender}</p>}\r\n+              </label>\r\n+            </div>\r\n+            <div className=\"px-4 py-3\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Nivel de actividad</span>\r\n+                <select\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n+                  value={activityLevel}\r\n+                  onChange={(e) => setActivityLevel(e.target.value)}\r\n+                  required\r\n+                >\r\n+                  <option value=\"\">Seleccionar</option>\r\n+                  <option value=\"sedentary\">Sedentario</option>\r\n+                  <option value=\"lightly_active\">Ligeramente activo</option>\r\n+                  <option value=\"moderately_active\">Moderadamente activo</option>\r\n+                  <option value=\"very_active\">Muy activo</option>\r\n+                  <option value=\"super_active\">Súper activo</option>\r\n+                </select>\r\n+                {errors.activityLevel && <p style={{ color: 'red' }}>{errors.activityLevel}</p>}\r\n+              </label>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* Paso 2: Datos avanzados y dispositivos */}\r\n+        {step === 2 && (\r\n+          <div>\r\n+            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Datos avanzados y dispositivos</h3>\r\n+            <label className=\"block pb-2\">\r\n+              <input type=\"checkbox\" checked={advanced} onChange={(e) => setAdvanced(e.target.checked)} />\r\n+              <span className=\"ml-2\">Proveer datos avanzados</span>\r\n+            </label>\r\n+\r\n+            {advanced && (\r\n+              <div>\r\n+                <div className=\"px-4 py-3\">\r\n+                  <label className=\"block pb-2\">\r\n+                    <span className=\"text-base font-medium text-[#111418]\">Porcentaje de grasa corporal (%)</span>\r\n+                    <input\r\n+                      type=\"number\"\r\n+                      className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n+                      value={bodyFat}\r\n+                      onChange={(e) => setBodyFat(e.target.value)}\r\n+                    />\r\n+                  </label>\r\n+                </div>\r\n+                <div className=\"px-4 py-3\">\r\n+                  <label className=\"block pb-2\">\r\n+                    <span className=\"text-base font-medium text-[#111418]\">Masa muscular (kg)</span>\r\n+                    <input\r\n+                      type=\"number\"\r\n+                      className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n+                      value={muscleMass}\r\n+                      onChange={(e) => setMuscleMass(e.target.value)}\r\n+                    />\r\n+                  </label>\r\n+                </div>\r\n+              </div>\r\n+            )}\r\n+\r\n+            <label className=\"block mt-4\">\r\n+              <input\r\n+                type=\"checkbox\"\r\n+                checked={smartDevice}\r\n+                onChange={(e) => setSmartDevice(e.target.checked)}\r\n+              />\r\n+              <span className=\"ml-2\">Sincronizar con un dispositivo inteligente</span>\r\n+            </label>\r\n+\r\n+            {smartDevice && (\r\n+              <div className=\"mt-4\">\r\n+                <div className=\"px-4 py-3\">\r\n+                  <label className=\"block pb-2\">\r\n+                    <span className=\"text-base font-medium text-[#111418]\">Frecuencia cardíaca en reposo (BPM)</span>\r\n+                    <input\r\n+                      type=\"number\"\r\n+                      className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n+                      value={heartRate}\r\n+                      onChange={(e) => setHeartRate(e.target.value)}\r\n+                    />\r\n+                  </label>\r\n+                </div>\r\n+                <div className=\"px-4 py-3\">\r\n+                  <label className=\"block pb-2\">\r\n+                    <span className=\"text-base font-medium text-[#111418]\">Pasos diarios</span>\r\n+                    <input\r\n+                      type=\"number\"\r\n+                      className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n+                      value={steps}\r\n+                      onChange={(e) => setSteps(e.target.value)}\r\n+                    />\r\n+                  </label>\r\n+                </div>\r\n+              </div>\r\n+            )}\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* Paso 3: Preferencias alimenticias */}\r\n+        {step === 3 && (\r\n+          <div>\r\n+            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Preferencias alimenticias</h3>\r\n+            <div className=\"flex gap-3 p-3 flex-wrap\">\r\n+              {['Sin restricciones', 'Vegetariano', 'Vegano', 'Sin gluten', 'Sin lactosa', 'Sin nueces', 'Dieta cetogénica'].map((preference) => (\r\n+                <div\r\n+                  key={preference}\r\n+                  onClick={() => handleCheckboxChange(setDietaryRestrictions, preference, dietaryRestrictions)}\r\n+                  className={`cursor-pointer flex h-8 items-center justify-center gap-x-2 rounded-xl px-4 ${\r\n+                    dietaryRestrictions.includes(preference) ? 'bg-[#1980e6] text-white' : 'bg-[#f0f2f4] text-[#111418]'\r\n+                  }`}\r\n+                >\r\n+                  <p className=\"text-sm font-medium\">{preference}</p>\r\n+                </div>\r\n+              ))}\r\n+            </div>\r\n+            <div className=\"px-4 py-3 mt-4\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Alimentos que prefieres evitar</span>\r\n+                <input\r\n+                  type=\"text\"\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n+                  placeholder=\"Ej. Brócoli, pescado\"\r\n+                  value={dislikedFoods}\r\n+                  onChange={(e) => setDislikedFoods(e.target.value)}\r\n+                />\r\n+              </label>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* Paso 4: Tipo de entrenamiento */}\r\n+        {step === 4 && (\r\n+          <div>\r\n+            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Tipo de entrenamiento</h3>\r\n+            <div className=\"flex gap-3 p-3 flex-wrap\">\r\n+              {['Ejercicio en casa', 'Ejercicio al aire libre', 'Ejercicio en el gimnasio', 'Ninguno', 'No estoy seguro'].map((preference) => (\r\n+                <div\r\n+                  key={preference}\r\n+                  onClick={() => handleCheckboxChange(setTrainingPreference, preference, trainingPreference)}\r\n+                  className={`cursor-pointer flex h-8 items-center justify-center gap-x-2 rounded-xl px-4 ${\r\n+                    trainingPreference.includes(preference) ? 'bg-[#1980e6] text-white' : 'bg-[#f0f2f4] text-[#111418]'\r\n+                  }`}\r\n+                >\r\n+                  <p className=\"text-sm font-medium\">{preference}</p>\r\n+                </div>\r\n+              ))}\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* Paso 5: Objetivos de Fitness */}\r\n+        {step === 5 && (\r\n+          <div>\r\n+            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Objetivos de Fitness</h3>\r\n+            <div className=\"flex gap-3 p-3 flex-wrap\">\r\n+              {['Perder peso', 'Ganar masa muscular', 'Mejorar la salud', 'Mejorar el rendimiento'].map((goal) => (\r\n+                <div\r\n+                  key={goal}\r\n+                  onClick={() => handleCheckboxChange(setFitnessGoals, goal, fitnessGoals)}\r\n+                  className={`cursor-pointer flex h-8 items-center justify-center gap-x-2 rounded-xl px-4 ${\r\n+                    fitnessGoals.includes(goal) ? 'bg-[#1980e6] text-white' : 'bg-[#f0f2f4] text-[#111418]'\r\n+                  }`}\r\n+                >\r\n+                  <p className=\"text-sm font-medium\">{goal}</p>\r\n+                </div>\r\n+              ))}\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* Botones de navegación */}\r\n+        <div className=\"flex justify-between mt-6\">\r\n+          {step > 0 && (\r\n+            <button\r\n+              type=\"button\"\r\n+              className=\"bg-gray-300 text-gray-800 font-bold py-2 px-4 rounded\"\r\n+              onClick={prevStep}\r\n+            >\r\n+              Anterior\r\n+            </button>\r\n+          )}\r\n+          {step < 5 ? (\r\n+            <button\r\n+              type=\"button\"\r\n+              className=\"bg-blue-500 text-white font-bold py-2 px-4 rounded\"\r\n+              onClick={nextStep}\r\n+            >\r\n+              Siguiente\r\n+            </button>\r\n+          ) : (\r\n+            <button\r\n+              type=\"submit\"\r\n+              className=\"bg-green-500 text-white font-bold py-2 px-4 rounded\"\r\n+            >\r\n+              Finalizar\r\n+            </button>\r\n+          )}\r\n+        </div>\r\n+      </form>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default Form;\r\n"
                },
                {
                    "date": 1730732578882,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,95 +1,86 @@\n+// frontend/src/Form.js\r\n import React, { useState } from 'react';\r\n import axios from 'axios';\r\n \r\n const Form = ({ setPlan, setHasPlan }) => {\r\n-  // Estados para todos los campos del formulario básico\r\n+  // Estados para todos los campos del formulario\r\n   const [weight, setWeight] = useState('');\r\n   const [height, setHeight] = useState('');\r\n   const [age, setAge] = useState('');\r\n   const [gender, setGender] = useState('');\r\n   const [activityLevel, setActivityLevel] = useState('');\r\n-  const [dietaryRestrictions, setDietaryRestrictions] = useState([]);\r\n-  const [dislikedFoods, setDislikedFoods] = useState('');\r\n-  const [trainingPreference, setTrainingPreference] = useState([]);\r\n-  const [fitnessGoals, setFitnessGoals] = useState([]);\r\n+  const [fitnessGoal, setFitnessGoal] = useState('');\r\n+  const [routinePreference, setRoutinePreference] = useState('');\r\n+  const [dietaryPreferences, setDietaryPreferences] = useState([]);\r\n+  const [equipmentAvailable, setEquipmentAvailable] = useState([]);\r\n+  const [mealsPerDay, setMealsPerDay] = useState(3);\r\n \r\n-  // Estados para datos avanzados y dispositivos inteligentes\r\n-  const [advanced, setAdvanced] = useState(false);\r\n-  const [bodyFat, setBodyFat] = useState('');\r\n-  const [muscleMass, setMuscleMass] = useState('');\r\n-  const [heartRate, setHeartRate] = useState('');\r\n-  const [steps, setSteps] = useState('');\r\n-  const [smartDevice, setSmartDevice] = useState(false);\r\n-\r\n   const [step, setStep] = useState(0);\r\n   const [errors, setErrors] = useState({}); // Estado de errores\r\n \r\n+  // Validación del formulario\r\n   const validateForm = () => {\r\n     const newErrors = {};\r\n-  \r\n-    // Validación para el peso\r\n+\r\n+    // Validaciones para los campos requeridos\r\n     if (!weight || isNaN(weight) || weight < 20 || weight > 500) {\r\n       newErrors.weight = 'El peso debe estar entre 20 kg y 500 kg';\r\n     }\r\n-  \r\n-    // Validación para la altura\r\n     if (!height || isNaN(height) || height < 50 || height > 300) {\r\n       newErrors.height = 'La altura debe estar entre 50 cm y 300 cm';\r\n     }\r\n-  \r\n-    // Validación para la edad\r\n     if (!age || isNaN(age) || age < 10 || age > 120) {\r\n       newErrors.age = 'La edad debe estar entre 10 y 120 años';\r\n     }\r\n-  \r\n-    // Validación para el género\r\n     if (!gender) {\r\n       newErrors.gender = 'Selecciona un género';\r\n     }\r\n-  \r\n-    // Validación para el nivel de actividad\r\n     if (!activityLevel) {\r\n       newErrors.activityLevel = 'Selecciona un nivel de actividad';\r\n     }\r\n-  \r\n-    // Validación para los objetivos de fitness\r\n-    if (fitnessGoals.length === 0) {\r\n-      newErrors.fitnessGoals = 'Selecciona al menos un objetivo de fitness';\r\n+    if (!fitnessGoal) {\r\n+      newErrors.fitnessGoal = 'Selecciona un objetivo de fitness';\r\n     }\r\n-  \r\n+    if (!routinePreference) {\r\n+      newErrors.routinePreference = 'Selecciona una preferencia de rutina de ejercicio';\r\n+    }\r\n+    if (isNaN(mealsPerDay) || mealsPerDay < 1 || mealsPerDay > 6) {\r\n+      newErrors.mealsPerDay = 'El número de comidas por día debe estar entre 1 y 6';\r\n+    }\r\n+\r\n     setErrors(newErrors);\r\n     return Object.keys(newErrors).length === 0;\r\n   };\r\n-  \r\n \r\n+  // Manejar el envío del formulario\r\n   const handleSubmit = async (event) => {\r\n     event.preventDefault();\r\n     if (validateForm()) {\r\n-        const userData = {\r\n+      const userData = {\r\n         weight: parseFloat(weight),\r\n         height: parseFloat(height),\r\n         age: parseInt(age),\r\n         gender,\r\n         activity_level: activityLevel,\r\n-        goals: fitnessGoals,\r\n-        routine_preference: trainingPreference.join(', ') || 'Ninguno',\r\n-        dietary_restrictions: dietaryRestrictions,\r\n-        disliked_foods: dislikedFoods,\r\n-        ...(advanced && { body_fat: parseFloat(bodyFat), muscle_mass: parseFloat(muscleMass) }),\r\n-        ...(smartDevice && { heart_rate: parseFloat(heartRate), steps: parseInt(steps) })\r\n+        fitness_goal: fitnessGoal,\r\n+        routine_preference: routinePreference,\r\n+        dietary_preferences: dietaryPreferences,\r\n+        equipment_available: equipmentAvailable,\r\n+        meals_per_day: parseInt(mealsPerDay),\r\n       };\r\n \r\n       try {\r\n         const response = await axios.post('http://localhost:8000/generate_plan/', userData);\r\n         setPlan(response.data);\r\n-        setHasPlan(true); // Actualiza hasPlan a true\r\n-    } catch (error) {\r\n+        setHasPlan(true);\r\n+      } catch (error) {\r\n         console.error('Error al obtener el plan:', error);\r\n+      }\r\n     }\r\n-}\r\n-};\r\n+  };\r\n \r\n+  // Manejar cambios en los checkboxes\r\n   const handleCheckboxChange = (setState, value, state) => {\r\n     if (state.includes(value)) {\r\n       setState(state.filter((item) => item !== value));\r\n     } else {\r\n@@ -99,48 +90,89 @@\n \r\n   const nextStep = () => setStep((prevStep) => Math.min(prevStep + 1, 5));\r\n   const prevStep = () => setStep((prevStep) => Math.max(prevStep - 1, 0));\r\n \r\n+  // Opciones para los select y checkboxes\r\n+  const activityLevelOptions = [\r\n+    { label: 'Sedentario', value: 'sedentary' },\r\n+    { label: 'Ligeramente activo', value: 'lightly_active' },\r\n+    { label: 'Moderadamente activo', value: 'moderately_active' },\r\n+    { label: 'Muy activo', value: 'very_active' },\r\n+    { label: 'Súper activo', value: 'super_active' },\r\n+  ];\r\n+\r\n+  const fitnessGoalOptions = [\r\n+    { label: 'Perder peso', value: 'lose_weight' },\r\n+    { label: 'Ganar masa muscular', value: 'gain_muscle' },\r\n+    { label: 'Mantener peso', value: 'maintain' },\r\n+  ];\r\n+\r\n+  const routinePreferenceOptions = [\r\n+    { label: 'Ejercicio en casa', value: 'home' },\r\n+    { label: 'Ejercicio al aire libre', value: 'outdoor' },\r\n+    { label: 'Ejercicio en el gimnasio', value: 'gym' },\r\n+    { label: 'No estoy seguro', value: 'unsure' },\r\n+  ];\r\n+\r\n+  const dietaryOptions = [\r\n+    { label: 'Vegetariano', value: 'vegetarian' },\r\n+    { label: 'Vegano', value: 'vegan' },\r\n+    { label: 'Sin gluten', value: 'gluten_free' },\r\n+    { label: 'Sin lactosa', value: 'lactose_free' },\r\n+    { label: 'Paleo', value: 'paleo' },\r\n+    { label: 'Cetogénica', value: 'keto' },\r\n+  ];\r\n+\r\n+  const equipmentOptions = [\r\n+    { label: 'Peso corporal', value: 'body weight' },\r\n+    { label: 'Mancuernas', value: 'dumbbells' },\r\n+    { label: 'Bandas de resistencia', value: 'resistance band' },\r\n+    { label: 'Barra', value: 'barbell' },\r\n+    { label: 'Máquinas de gimnasio', value: 'machine' },\r\n+  ];\r\n+\r\n   return (\r\n     <div className=\"flex flex-col items-center min-h-screen bg-white font-['Noto_Sans', 'Work_Sans', sans-serif]\">\r\n       <form onSubmit={handleSubmit} className=\"w-[512px] max-w-full p-8 bg-white rounded-lg shadow-md\">\r\n-\r\n         {/* Paso 0: Datos Personales */}\r\n         {step === 0 && (\r\n           <div>\r\n             <h3 className=\"text-2xl font-bold leading-tight pb-2\">Datos Personales</h3>\r\n+            {/* Peso */}\r\n             <div className=\"px-4 py-3\">\r\n               <label className=\"block pb-2\">\r\n                 <span className=\"text-base font-medium text-[#111418]\">Peso (kg)</span>\r\n                 <input\r\n                   type=\"number\"\r\n-                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n                   value={weight}\r\n                   onChange={(e) => setWeight(e.target.value)}\r\n                   required\r\n                 />\r\n                 {errors.weight && <p style={{ color: 'red' }}>{errors.weight}</p>}\r\n               </label>\r\n             </div>\r\n+            {/* Altura */}\r\n             <div className=\"px-4 py-3\">\r\n               <label className=\"block pb-2\">\r\n                 <span className=\"text-base font-medium text-[#111418]\">Altura (cm)</span>\r\n                 <input\r\n                   type=\"number\"\r\n-                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n                   value={height}\r\n                   onChange={(e) => setHeight(e.target.value)}\r\n                   required\r\n                 />\r\n                 {errors.height && <p style={{ color: 'red' }}>{errors.height}</p>}\r\n               </label>\r\n             </div>\r\n+            {/* Edad */}\r\n             <div className=\"px-4 py-3\">\r\n               <label className=\"block pb-2\">\r\n                 <span className=\"text-base font-medium text-[#111418]\">Edad</span>\r\n                 <input\r\n                   type=\"number\"\r\n-                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n                   value={age}\r\n                   onChange={(e) => setAge(e.target.value)}\r\n                   required\r\n                 />\r\n@@ -153,11 +185,12 @@\n         {/* Paso 1: Información adicional */}\r\n         {step === 1 && (\r\n           <div>\r\n             <h3 className=\"text-2xl font-bold leading-tight pb-2\">Información adicional</h3>\r\n+            {/* Género */}\r\n             <div className=\"px-4 py-3\">\r\n               <label className=\"block pb-2\">\r\n-                <span className=\"text-base font-medium text-[#111418]\">Sexo</span>\r\n+                <span className=\"text-base font-medium text-[#111418]\">Género</span>\r\n                 <select\r\n                   className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n                   value={gender}\r\n                   onChange={(e) => setGender(e.target.value)}\r\n@@ -169,8 +202,9 @@\n                 </select>\r\n                 {errors.gender && <p style={{ color: 'red' }}>{errors.gender}</p>}\r\n               </label>\r\n             </div>\r\n+            {/* Nivel de actividad */}\r\n             <div className=\"px-4 py-3\">\r\n               <label className=\"block pb-2\">\r\n                 <span className=\"text-base font-medium text-[#111418]\">Nivel de actividad</span>\r\n                 <select\r\n@@ -179,163 +213,121 @@\n                   onChange={(e) => setActivityLevel(e.target.value)}\r\n                   required\r\n                 >\r\n                   <option value=\"\">Seleccionar</option>\r\n-                  <option value=\"sedentary\">Sedentario</option>\r\n-                  <option value=\"lightly_active\">Ligeramente activo</option>\r\n-                  <option value=\"moderately_active\">Moderadamente activo</option>\r\n-                  <option value=\"very_active\">Muy activo</option>\r\n-                  <option value=\"super_active\">Súper activo</option>\r\n+                  {activityLevelOptions.map((option) => (\r\n+                    <option key={option.value} value={option.value}>\r\n+                      {option.label}\r\n+                    </option>\r\n+                  ))}\r\n                 </select>\r\n                 {errors.activityLevel && <p style={{ color: 'red' }}>{errors.activityLevel}</p>}\r\n               </label>\r\n             </div>\r\n           </div>\r\n         )}\r\n \r\n-        {/* Paso 2: Datos avanzados y dispositivos */}\r\n+        {/* Paso 2: Preferencias alimenticias */}\r\n         {step === 2 && (\r\n           <div>\r\n-            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Datos avanzados y dispositivos</h3>\r\n-            <label className=\"block pb-2\">\r\n-              <input type=\"checkbox\" checked={advanced} onChange={(e) => setAdvanced(e.target.checked)} />\r\n-              <span className=\"ml-2\">Proveer datos avanzados</span>\r\n-            </label>\r\n-\r\n-            {advanced && (\r\n-              <div>\r\n-                <div className=\"px-4 py-3\">\r\n-                  <label className=\"block pb-2\">\r\n-                    <span className=\"text-base font-medium text-[#111418]\">Porcentaje de grasa corporal (%)</span>\r\n-                    <input\r\n-                      type=\"number\"\r\n-                      className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n-                      value={bodyFat}\r\n-                      onChange={(e) => setBodyFat(e.target.value)}\r\n-                    />\r\n-                  </label>\r\n-                </div>\r\n-                <div className=\"px-4 py-3\">\r\n-                  <label className=\"block pb-2\">\r\n-                    <span className=\"text-base font-medium text-[#111418]\">Masa muscular (kg)</span>\r\n-                    <input\r\n-                      type=\"number\"\r\n-                      className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n-                      value={muscleMass}\r\n-                      onChange={(e) => setMuscleMass(e.target.value)}\r\n-                    />\r\n-                  </label>\r\n-                </div>\r\n-              </div>\r\n-            )}\r\n-\r\n-            <label className=\"block mt-4\">\r\n-              <input\r\n-                type=\"checkbox\"\r\n-                checked={smartDevice}\r\n-                onChange={(e) => setSmartDevice(e.target.checked)}\r\n-              />\r\n-              <span className=\"ml-2\">Sincronizar con un dispositivo inteligente</span>\r\n-            </label>\r\n-\r\n-            {smartDevice && (\r\n-              <div className=\"mt-4\">\r\n-                <div className=\"px-4 py-3\">\r\n-                  <label className=\"block pb-2\">\r\n-                    <span className=\"text-base font-medium text-[#111418]\">Frecuencia cardíaca en reposo (BPM)</span>\r\n-                    <input\r\n-                      type=\"number\"\r\n-                      className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n-                      value={heartRate}\r\n-                      onChange={(e) => setHeartRate(e.target.value)}\r\n-                    />\r\n-                  </label>\r\n-                </div>\r\n-                <div className=\"px-4 py-3\">\r\n-                  <label className=\"block pb-2\">\r\n-                    <span className=\"text-base font-medium text-[#111418]\">Pasos diarios</span>\r\n-                    <input\r\n-                      type=\"number\"\r\n-                      className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n-                      value={steps}\r\n-                      onChange={(e) => setSteps(e.target.value)}\r\n-                    />\r\n-                  </label>\r\n-                </div>\r\n-              </div>\r\n-            )}\r\n-          </div>\r\n-        )}\r\n-\r\n-        {/* Paso 3: Preferencias alimenticias */}\r\n-        {step === 3 && (\r\n-          <div>\r\n             <h3 className=\"text-2xl font-bold leading-tight pb-2\">Preferencias alimenticias</h3>\r\n+            {/* Preferencias dietéticas */}\r\n             <div className=\"flex gap-3 p-3 flex-wrap\">\r\n-              {['Sin restricciones', 'Vegetariano', 'Vegano', 'Sin gluten', 'Sin lactosa', 'Sin nueces', 'Dieta cetogénica'].map((preference) => (\r\n+              {dietaryOptions.map((option) => (\r\n                 <div\r\n-                  key={preference}\r\n-                  onClick={() => handleCheckboxChange(setDietaryRestrictions, preference, dietaryRestrictions)}\r\n+                  key={option.value}\r\n+                  onClick={() => handleCheckboxChange(setDietaryPreferences, option.value, dietaryPreferences)}\r\n                   className={`cursor-pointer flex h-8 items-center justify-center gap-x-2 rounded-xl px-4 ${\r\n-                    dietaryRestrictions.includes(preference) ? 'bg-[#1980e6] text-white' : 'bg-[#f0f2f4] text-[#111418]'\r\n+                    dietaryPreferences.includes(option.value) ? 'bg-[#1980e6] text-white' : 'bg-[#f0f2f4] text-[#111418]'\r\n                   }`}\r\n                 >\r\n-                  <p className=\"text-sm font-medium\">{preference}</p>\r\n+                  <p className=\"text-sm font-medium\">{option.label}</p>\r\n                 </div>\r\n               ))}\r\n             </div>\r\n+            {/* Número de comidas por día */}\r\n             <div className=\"px-4 py-3 mt-4\">\r\n               <label className=\"block pb-2\">\r\n-                <span className=\"text-base font-medium text-[#111418]\">Alimentos que prefieres evitar</span>\r\n+                <span className=\"text-base font-medium text-[#111418]\">Número de comidas por día</span>\r\n                 <input\r\n-                  type=\"text\"\r\n-                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n-                  placeholder=\"Ej. Brócoli, pescado\"\r\n-                  value={dislikedFoods}\r\n-                  onChange={(e) => setDislikedFoods(e.target.value)}\r\n+                  type=\"number\"\r\n+                  min=\"1\"\r\n+                  max=\"6\"\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n+                  value={mealsPerDay}\r\n+                  onChange={(e) => setMealsPerDay(e.target.value)}\r\n+                  required\r\n                 />\r\n+                {errors.mealsPerDay && <p style={{ color: 'red' }}>{errors.mealsPerDay}</p>}\r\n               </label>\r\n             </div>\r\n           </div>\r\n         )}\r\n \r\n-        {/* Paso 4: Tipo de entrenamiento */}\r\n-        {step === 4 && (\r\n+        {/* Paso 3: Equipamiento disponible */}\r\n+        {step === 3 && (\r\n           <div>\r\n-            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Tipo de entrenamiento</h3>\r\n+            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Equipamiento Disponible</h3>\r\n             <div className=\"flex gap-3 p-3 flex-wrap\">\r\n-              {['Ejercicio en casa', 'Ejercicio al aire libre', 'Ejercicio en el gimnasio', 'Ninguno', 'No estoy seguro'].map((preference) => (\r\n+              {equipmentOptions.map((option) => (\r\n                 <div\r\n-                  key={preference}\r\n-                  onClick={() => handleCheckboxChange(setTrainingPreference, preference, trainingPreference)}\r\n+                  key={option.value}\r\n+                  onClick={() => handleCheckboxChange(setEquipmentAvailable, option.value, equipmentAvailable)}\r\n                   className={`cursor-pointer flex h-8 items-center justify-center gap-x-2 rounded-xl px-4 ${\r\n-                    trainingPreference.includes(preference) ? 'bg-[#1980e6] text-white' : 'bg-[#f0f2f4] text-[#111418]'\r\n+                    equipmentAvailable.includes(option.value) ? 'bg-[#1980e6] text-white' : 'bg-[#f0f2f4] text-[#111418]'\r\n                   }`}\r\n                 >\r\n-                  <p className=\"text-sm font-medium\">{preference}</p>\r\n+                  <p className=\"text-sm font-medium\">{option.label}</p>\r\n                 </div>\r\n               ))}\r\n             </div>\r\n           </div>\r\n         )}\r\n \r\n-        {/* Paso 5: Objetivos de Fitness */}\r\n-        {step === 5 && (\r\n+        {/* Paso 4: Preferencia de rutina y objetivo de fitness */}\r\n+        {step === 4 && (\r\n           <div>\r\n-            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Objetivos de Fitness</h3>\r\n-            <div className=\"flex gap-3 p-3 flex-wrap\">\r\n-              {['Perder peso', 'Ganar masa muscular', 'Mejorar la salud', 'Mejorar el rendimiento'].map((goal) => (\r\n-                <div\r\n-                  key={goal}\r\n-                  onClick={() => handleCheckboxChange(setFitnessGoals, goal, fitnessGoals)}\r\n-                  className={`cursor-pointer flex h-8 items-center justify-center gap-x-2 rounded-xl px-4 ${\r\n-                    fitnessGoals.includes(goal) ? 'bg-[#1980e6] text-white' : 'bg-[#f0f2f4] text-[#111418]'\r\n-                  }`}\r\n+            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Preferencias de Ejercicio y Objetivos</h3>\r\n+            {/* Preferencia de rutina */}\r\n+            <div className=\"px-4 py-3\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Preferencia de rutina de ejercicio</span>\r\n+                <select\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n+                  value={routinePreference}\r\n+                  onChange={(e) => setRoutinePreference(e.target.value)}\r\n+                  required\r\n                 >\r\n-                  <p className=\"text-sm font-medium\">{goal}</p>\r\n-                </div>\r\n-              ))}\r\n+                  <option value=\"\">Seleccionar</option>\r\n+                  {routinePreferenceOptions.map((option) => (\r\n+                    <option key={option.value} value={option.value}>\r\n+                      {option.label}\r\n+                    </option>\r\n+                  ))}\r\n+                </select>\r\n+                {errors.routinePreference && <p style={{ color: 'red' }}>{errors.routinePreference}</p>}\r\n+              </label>\r\n             </div>\r\n+            {/* Objetivo de fitness */}\r\n+            <div className=\"px-4 py-3\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Objetivo de Fitness</span>\r\n+                <select\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n+                  value={fitnessGoal}\r\n+                  onChange={(e) => setFitnessGoal(e.target.value)}\r\n+                  required\r\n+                >\r\n+                  <option value=\"\">Seleccionar</option>\r\n+                  {fitnessGoalOptions.map((option) => (\r\n+                    <option key={option.value} value={option.value}>\r\n+                      {option.label}\r\n+                    </option>\r\n+                  ))}\r\n+                </select>\r\n+                {errors.fitnessGoal && <p style={{ color: 'red' }}>{errors.fitnessGoal}</p>}\r\n+              </label>\r\n+            </div>\r\n           </div>\r\n         )}\r\n \r\n         {/* Botones de navegación */}\r\n@@ -348,9 +340,9 @@\n             >\r\n               Anterior\r\n             </button>\r\n           )}\r\n-          {step < 5 ? (\r\n+          {step < 4 ? (\r\n             <button\r\n               type=\"button\"\r\n               className=\"bg-blue-500 text-white font-bold py-2 px-4 rounded\"\r\n               onClick={nextStep}\r\n"
                },
                {
                    "date": 1730734865471,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,370 @@\n+// frontend/src/components/Form.js\r\n+import React, { useState } from 'react';\r\n+import axios from 'axios';\r\n+\r\n+const Form = ({ setPlan }) => {\r\n+  // Estados para todos los campos del formulario\r\n+  const [weight, setWeight] = useState('');\r\n+  const [height, setHeight] = useState('');\r\n+  const [age, setAge] = useState('');\r\n+  const [gender, setGender] = useState('');\r\n+  const [activityLevel, setActivityLevel] = useState('');\r\n+  const [fitnessGoal, setFitnessGoal] = useState('');\r\n+  const [routinePreference, setRoutinePreference] = useState('');\r\n+  const [dietaryPreferences, setDietaryPreferences] = useState([]);\r\n+  const [equipmentAvailable, setEquipmentAvailable] = useState([]);\r\n+  const [mealsPerDay, setMealsPerDay] = useState(3);\r\n+\r\n+  const [step, setStep] = useState(0);\r\n+  const [errors, setErrors] = useState({}); // Estado de errores\r\n+\r\n+  // Validación del formulario\r\n+  const validateForm = () => {\r\n+    const newErrors = {};\r\n+\r\n+    // Validaciones para los campos requeridos\r\n+    if (!weight || isNaN(weight) || weight < 20 || weight > 500) {\r\n+      newErrors.weight = 'El peso debe estar entre 20 kg y 500 kg';\r\n+    }\r\n+    if (!height || isNaN(height) || height < 50 || height > 300) {\r\n+      newErrors.height = 'La altura debe estar entre 50 cm y 300 cm';\r\n+    }\r\n+    if (!age || isNaN(age) || age < 10 || age > 120) {\r\n+      newErrors.age = 'La edad debe estar entre 10 y 120 años';\r\n+    }\r\n+    if (!gender) {\r\n+      newErrors.gender = 'Selecciona un género';\r\n+    }\r\n+    if (!activityLevel) {\r\n+      newErrors.activityLevel = 'Selecciona un nivel de actividad';\r\n+    }\r\n+    if (!fitnessGoal) {\r\n+      newErrors.fitnessGoal = 'Selecciona un objetivo de fitness';\r\n+    }\r\n+    if (!routinePreference) {\r\n+      newErrors.routinePreference = 'Selecciona una preferencia de rutina de ejercicio';\r\n+    }\r\n+    if (isNaN(mealsPerDay) || mealsPerDay < 1 || mealsPerDay > 6) {\r\n+      newErrors.mealsPerDay = 'El número de comidas por día debe estar entre 1 y 6';\r\n+    }\r\n+\r\n+    setErrors(newErrors);\r\n+    return Object.keys(newErrors).length === 0;\r\n+  };\r\n+\r\n+  // Manejar el envío del formulario\r\n+  const handleSubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    if (validateForm()) {\r\n+      const userData = {\r\n+        weight: parseFloat(weight),\r\n+        height: parseFloat(height),\r\n+        age: parseInt(age),\r\n+        gender,\r\n+        activity_level: activityLevel,\r\n+        fitness_goal: fitnessGoal,\r\n+        routine_preference: routinePreference,\r\n+        dietary_preferences: dietaryPreferences,\r\n+        equipment_available: equipmentAvailable,\r\n+        meals_per_day: parseInt(mealsPerDay),\r\n+      };\r\n+\r\n+      try {\r\n+        const token = localStorage.getItem('token');\r\n+        const response = await axios.post('http://localhost:8000/generate_plan/', userData, {\r\n+          headers: {\r\n+            Authorization: `Bearer ${token}`,\r\n+          },\r\n+        });\r\n+        setPlan(response.data);\r\n+      } catch (error) {\r\n+        console.error('Error al obtener el plan:', error);\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  // Manejar cambios en los checkboxes\r\n+  const handleCheckboxChange = (setState, value, state) => {\r\n+    if (state.includes(value)) {\r\n+      setState(state.filter((item) => item !== value));\r\n+    } else {\r\n+      setState([...state, value]);\r\n+    }\r\n+  };\r\n+\r\n+  const nextStep = () => setStep((prevStep) => Math.min(prevStep + 1, 4));\r\n+  const prevStep = () => setStep((prevStep) => Math.max(prevStep - 1, 0));\r\n+\r\n+  // Opciones para los select y checkboxes\r\n+  const activityLevelOptions = [\r\n+    { label: 'Sedentario', value: 'sedentary' },\r\n+    { label: 'Ligeramente activo', value: 'lightly_active' },\r\n+    { label: 'Moderadamente activo', value: 'moderately_active' },\r\n+    { label: 'Muy activo', value: 'very_active' },\r\n+    { label: 'Súper activo', value: 'super_active' },\r\n+  ];\r\n+\r\n+  const fitnessGoalOptions = [\r\n+    { label: 'Perder peso', value: 'lose_weight' },\r\n+    { label: 'Ganar masa muscular', value: 'gain_muscle' },\r\n+    { label: 'Mantener peso', value: 'maintain' },\r\n+  ];\r\n+\r\n+  const routinePreferenceOptions = [\r\n+    { label: 'Ejercicio en casa', value: 'home' },\r\n+    { label: 'Ejercicio al aire libre', value: 'outdoor' },\r\n+    { label: 'Ejercicio en el gimnasio', value: 'gym' },\r\n+    { label: 'No estoy seguro', value: 'unsure' },\r\n+  ];\r\n+\r\n+  const dietaryOptions = [\r\n+    { label: 'Vegetariano', value: 'vegetarian' },\r\n+    { label: 'Vegano', value: 'vegan' },\r\n+    { label: 'Sin gluten', value: 'gluten_free' },\r\n+    { label: 'Sin lactosa', value: 'lactose_free' },\r\n+    { label: 'Paleo', value: 'paleo' },\r\n+    { label: 'Cetogénica', value: 'keto' },\r\n+  ];\r\n+\r\n+  const equipmentOptions = [\r\n+    { label: 'Peso corporal', value: 'body weight' },\r\n+    { label: 'Mancuernas', value: 'dumbbells' },\r\n+    { label: 'Bandas de resistencia', value: 'resistance band' },\r\n+    { label: 'Barra', value: 'barbell' },\r\n+    { label: 'Máquinas de gimnasio', value: 'machine' },\r\n+  ];\r\n+\r\n+  return (\r\n+    <div className=\"flex flex-col items-center min-h-screen bg-white font-['Noto_Sans', 'Work_Sans', sans-serif]\">\r\n+      <form onSubmit={handleSubmit} className=\"w-[512px] max-w-full p-8 bg-white rounded-lg shadow-md\">\r\n+        {/* Paso 0: Datos Personales */}\r\n+        {step === 0 && (\r\n+          <div>\r\n+            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Datos Personales</h3>\r\n+            {/* Peso */}\r\n+            <div className=\"px-4 py-3\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Peso (kg)</span>\r\n+                <input\r\n+                  type=\"number\"\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n+                  value={weight}\r\n+                  onChange={(e) => setWeight(e.target.value)}\r\n+                  required\r\n+                />\r\n+                {errors.weight && <p style={{ color: 'red' }}>{errors.weight}</p>}\r\n+              </label>\r\n+            </div>\r\n+            {/* Altura */}\r\n+            <div className=\"px-4 py-3\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Altura (cm)</span>\r\n+                <input\r\n+                  type=\"number\"\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n+                  value={height}\r\n+                  onChange={(e) => setHeight(e.target.value)}\r\n+                  required\r\n+                />\r\n+                {errors.height && <p style={{ color: 'red' }}>{errors.height}</p>}\r\n+              </label>\r\n+            </div>\r\n+            {/* Edad */}\r\n+            <div className=\"px-4 py-3\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Edad</span>\r\n+                <input\r\n+                  type=\"number\"\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n+                  value={age}\r\n+                  onChange={(e) => setAge(e.target.value)}\r\n+                  required\r\n+                />\r\n+                {errors.age && <p style={{ color: 'red' }}>{errors.age}</p>}\r\n+              </label>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* Paso 1: Información adicional */}\r\n+        {step === 1 && (\r\n+          <div>\r\n+            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Información adicional</h3>\r\n+            {/* Género */}\r\n+            <div className=\"px-4 py-3\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Género</span>\r\n+                <select\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n+                  value={gender}\r\n+                  onChange={(e) => setGender(e.target.value)}\r\n+                  required\r\n+                >\r\n+                  <option value=\"\">Seleccionar</option>\r\n+                  <option value=\"male\">Hombre</option>\r\n+                  <option value=\"female\">Mujer</option>\r\n+                </select>\r\n+                {errors.gender && <p style={{ color: 'red' }}>{errors.gender}</p>}\r\n+              </label>\r\n+            </div>\r\n+            {/* Nivel de actividad */}\r\n+            <div className=\"px-4 py-3\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Nivel de actividad</span>\r\n+                <select\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n+                  value={activityLevel}\r\n+                  onChange={(e) => setActivityLevel(e.target.value)}\r\n+                  required\r\n+                >\r\n+                  <option value=\"\">Seleccionar</option>\r\n+                  {activityLevelOptions.map((option) => (\r\n+                    <option key={option.value} value={option.value}>\r\n+                      {option.label}\r\n+                    </option>\r\n+                  ))}\r\n+                </select>\r\n+                {errors.activityLevel && <p style={{ color: 'red' }}>{errors.activityLevel}</p>}\r\n+              </label>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* Paso 2: Preferencias alimenticias */}\r\n+        {step === 2 && (\r\n+          <div>\r\n+            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Preferencias alimenticias</h3>\r\n+            {/* Preferencias dietéticas */}\r\n+            <div className=\"flex gap-3 p-3 flex-wrap\">\r\n+              {dietaryOptions.map((option) => (\r\n+                <div\r\n+                  key={option.value}\r\n+                  onClick={() => handleCheckboxChange(setDietaryPreferences, option.value, dietaryPreferences)}\r\n+                  className={`cursor-pointer flex h-8 items-center justify-center gap-x-2 rounded-xl px-4 ${\r\n+                    dietaryPreferences.includes(option.value) ? 'bg-[#1980e6] text-white' : 'bg-[#f0f2f4] text-[#111418]'\r\n+                  }`}\r\n+                >\r\n+                  <p className=\"text-sm font-medium\">{option.label}</p>\r\n+                </div>\r\n+              ))}\r\n+            </div>\r\n+            {/* Número de comidas por día */}\r\n+            <div className=\"px-4 py-3 mt-4\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Número de comidas por día</span>\r\n+                <input\r\n+                  type=\"number\"\r\n+                  min=\"1\"\r\n+                  max=\"6\"\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n+                  value={mealsPerDay}\r\n+                  onChange={(e) => setMealsPerDay(e.target.value)}\r\n+                  required\r\n+                />\r\n+                {errors.mealsPerDay && <p style={{ color: 'red' }}>{errors.mealsPerDay}</p>}\r\n+              </label>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* Paso 3: Equipamiento disponible */}\r\n+        {step === 3 && (\r\n+          <div>\r\n+            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Equipamiento Disponible</h3>\r\n+            <div className=\"flex gap-3 p-3 flex-wrap\">\r\n+              {equipmentOptions.map((option) => (\r\n+                <div\r\n+                  key={option.value}\r\n+                  onClick={() => handleCheckboxChange(setEquipmentAvailable, option.value, equipmentAvailable)}\r\n+                  className={`cursor-pointer flex h-8 items-center justify-center gap-x-2 rounded-xl px-4 ${\r\n+                    equipmentAvailable.includes(option.value) ? 'bg-[#1980e6] text-white' : 'bg-[#f0f2f4] text-[#111418]'\r\n+                  }`}\r\n+                >\r\n+                  <p className=\"text-sm font-medium\">{option.label}</p>\r\n+                </div>\r\n+              ))}\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* Paso 4: Preferencia de rutina y objetivo de fitness */}\r\n+        {step === 4 && (\r\n+          <div>\r\n+            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Preferencias de Ejercicio y Objetivos</h3>\r\n+            {/* Preferencia de rutina */}\r\n+            <div className=\"px-4 py-3\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Preferencia de rutina de ejercicio</span>\r\n+                <select\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n+                  value={routinePreference}\r\n+                  onChange={(e) => setRoutinePreference(e.target.value)}\r\n+                  required\r\n+                >\r\n+                  <option value=\"\">Seleccionar</option>\r\n+                  {routinePreferenceOptions.map((option) => (\r\n+                    <option key={option.value} value={option.value}>\r\n+                      {option.label}\r\n+                    </option>\r\n+                  ))}\r\n+                </select>\r\n+                {errors.routinePreference && <p style={{ color: 'red' }}>{errors.routinePreference}</p>}\r\n+              </label>\r\n+            </div>\r\n+            {/* Objetivo de fitness */}\r\n+            <div className=\"px-4 py-3\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Objetivo de Fitness</span>\r\n+                <select\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n+                  value={fitnessGoal}\r\n+                  onChange={(e) => setFitnessGoal(e.target.value)}\r\n+                  required\r\n+                >\r\n+                  <option value=\"\">Seleccionar</option>\r\n+                  {fitnessGoalOptions.map((option) => (\r\n+                    <option key={option.value} value={option.value}>\r\n+                      {option.label}\r\n+                    </option>\r\n+                  ))}\r\n+                </select>\r\n+                {errors.fitnessGoal && <p style={{ color: 'red' }}>{errors.fitnessGoal}</p>}\r\n+              </label>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* Botones de navegación */}\r\n+        <div className=\"flex justify-between mt-6\">\r\n+          {step > 0 && (\r\n+            <button\r\n+              type=\"button\"\r\n+              className=\"bg-gray-300 text-gray-800 font-bold py-2 px-4 rounded\"\r\n+              onClick={prevStep}\r\n+            >\r\n+              Anterior\r\n+            </button>\r\n+          )}\r\n+          {step < 4 ? (\r\n+            <button\r\n+              type=\"button\"\r\n+              className=\"bg-blue-500 text-white font-bold py-2 px-4 rounded\"\r\n+              onClick={nextStep}\r\n+            >\r\n+              Siguiente\r\n+            </button>\r\n+          ) : (\r\n+            <button\r\n+              type=\"submit\"\r\n+              className=\"bg-green-500 text-white font-bold py-2 px-4 rounded\"\r\n+            >\r\n+              Finalizar\r\n+            </button>\r\n+          )}\r\n+        </div>\r\n+      </form>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default Form;\r\n"
                },
                {
                    "date": 1730826869013,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,372 @@\n+// frontend/src/components/Form.js\r\n+import React, { useState } from 'react';\r\n+import axios from 'axios';\r\n+\r\n+const Form = ({ setPlan }) => {\r\n+  // Estados para todos los campos del formulario\r\n+  const [weight, setWeight] = useState('');\r\n+  const [height, setHeight] = useState('');\r\n+  const [age, setAge] = useState('');\r\n+  const [gender, setGender] = useState('');\r\n+  const [activityLevel, setActivityLevel] = useState('');\r\n+  const [fitnessGoal, setFitnessGoal] = useState('');\r\n+  const [routinePreference, setRoutinePreference] = useState('');\r\n+  const [dietaryPreferences, setDietaryPreferences] = useState([]);\r\n+  const [equipmentAvailable, setEquipmentAvailable] = useState([]);\r\n+  const [mealsPerDay, setMealsPerDay] = useState(3);\r\n+\r\n+  const [step, setStep] = useState(0);\r\n+  const [errors, setErrors] = useState({}); // Estado de errores\r\n+\r\n+  // Validación del formulario\r\n+  const validateForm = () => {\r\n+    const newErrors = {};\r\n+\r\n+    // Validaciones para los campos requeridos\r\n+    if (!weight || isNaN(weight) || weight < 20 || weight > 500) {\r\n+      newErrors.weight = 'El peso debe estar entre 20 kg y 500 kg';\r\n+    }\r\n+    if (!height || isNaN(height) || height < 50 || height > 300) {\r\n+      newErrors.height = 'La altura debe estar entre 50 cm y 300 cm';\r\n+    }\r\n+    if (!age || isNaN(age) || age < 10 || age > 120) {\r\n+      newErrors.age = 'La edad debe estar entre 10 y 120 años';\r\n+    }\r\n+    if (!gender) {\r\n+      newErrors.gender = 'Selecciona un género';\r\n+    }\r\n+    if (!activityLevel) {\r\n+      newErrors.activityLevel = 'Selecciona un nivel de actividad';\r\n+    }\r\n+    if (!fitnessGoal) {\r\n+      newErrors.fitnessGoal = 'Selecciona un objetivo de fitness';\r\n+    }\r\n+    if (!routinePreference) {\r\n+      newErrors.routinePreference = 'Selecciona una preferencia de rutina de ejercicio';\r\n+    }\r\n+    if (isNaN(mealsPerDay) || mealsPerDay < 1 || mealsPerDay > 6) {\r\n+      newErrors.mealsPerDay = 'El número de comidas por día debe estar entre 1 y 6';\r\n+    }\r\n+\r\n+    setErrors(newErrors);\r\n+    return Object.keys(newErrors).length === 0;\r\n+  };\r\n+\r\n+  // Manejar el envío del formulario\r\n+  const handleSubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    if (validateForm()) {\r\n+      const userData = {\r\n+        weight: parseFloat(weight),\r\n+        height: parseFloat(height),\r\n+        age: parseInt(age),\r\n+        gender,\r\n+        activity_level: activityLevel,\r\n+        fitness_goal: fitnessGoal,\r\n+        routine_preference: routinePreference,\r\n+        dietary_preferences: dietaryPreferences,\r\n+        equipment_available: equipmentAvailable,\r\n+        meals_per_day: parseInt(mealsPerDay),\r\n+      };\r\n+\r\n+      try {\r\n+        const token = localStorage.getItem('token');\r\n+        const response = await axios.post('http://localhost:8000/generate_plan/', userData, {\r\n+          headers: {\r\n+            Authorization: `Bearer ${token}`,\r\n+          },\r\n+        });\r\n+        setPlan(response.data);\r\n+      } catch (error) {\r\n+        console.error('Error al obtener el plan:', error);\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  // Manejar cambios en los checkboxes\r\n+  const handleCheckboxChange = (setState, value, state) => {\r\n+    if (state.includes(value)) {\r\n+      setState(state.filter((item) => item !== value));\r\n+    } else {\r\n+      setState([...state, value]);\r\n+    }\r\n+  };\r\n+\r\n+  const nextStep = () => setStep((prevStep) => Math.min(prevStep + 1, 4));\r\n+  const prevStep = () => setStep((prevStep) => Math.max(prevStep - 1, 0));\r\n+\r\n+  // Opciones para los select y checkboxes\r\n+  const activityLevelOptions = [\r\n+    { label: 'Sedentario', value: 'sedentary' },\r\n+    { label: 'Ligeramente activo', value: 'lightly_active' },\r\n+    { label: 'Moderadamente activo', value: 'moderately_active' },\r\n+    { label: 'Muy activo', value: 'very_active' },\r\n+    { label: 'Súper activo', value: 'super_active' },\r\n+  ];\r\n+\r\n+  const fitnessGoalOptions = [\r\n+    { label: 'Perder peso', value: 'lose_weight' },\r\n+    { label: 'Ganar masa muscular', value: 'gain_muscle' },\r\n+    { label: 'Mantener peso', value: 'maintain' },\r\n+  ];\r\n+\r\n+  const routinePreferenceOptions = [\r\n+    { label: 'Ejercicio en casa', value: 'home' },\r\n+    { label: 'Ejercicio al aire libre', value: 'outdoor' },\r\n+    { label: 'Ejercicio en el gimnasio', value: 'gym' },\r\n+    { label: 'No estoy seguro', value: 'unsure' },\r\n+  ];\r\n+\r\n+  const dietaryOptions = [\r\n+    { label: 'Vegetariano', value: 'vegetarian' },\r\n+    { label: 'Vegano', value: 'vegan' },\r\n+    { label: 'Sin gluten', value: 'gluten_free' },\r\n+    { label: 'Sin lactosa', value: 'lactose_free' },\r\n+    { label: 'Paleo', value: 'paleo' },\r\n+    { label: 'Cetogénica', value: 'keto' },\r\n+    { label: 'Sin preferencias dietéticas', value: 'no_dietary_preference' }, // Nueva opción\r\n+\r\n+  ];\r\n+\r\n+  const equipmentOptions = [\r\n+    { label: 'Peso corporal', value: 'body weight' },\r\n+    { label: 'Mancuernas', value: 'dumbbells' },\r\n+    { label: 'Bandas de resistencia', value: 'resistance band' },\r\n+    { label: 'Barra', value: 'barbell' },\r\n+    { label: 'Máquinas de gimnasio', value: 'machine' },\r\n+  ];\r\n+\r\n+  return (\r\n+    <div className=\"flex flex-col items-center min-h-screen bg-white font-['Noto_Sans', 'Work_Sans', sans-serif]\">\r\n+      <form onSubmit={handleSubmit} className=\"w-[512px] max-w-full p-8 bg-white rounded-lg shadow-md\">\r\n+        {/* Paso 0: Datos Personales */}\r\n+        {step === 0 && (\r\n+          <div>\r\n+            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Datos Personales</h3>\r\n+            {/* Peso */}\r\n+            <div className=\"px-4 py-3\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Peso (kg)</span>\r\n+                <input\r\n+                  type=\"number\"\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n+                  value={weight}\r\n+                  onChange={(e) => setWeight(e.target.value)}\r\n+                  required\r\n+                />\r\n+                {errors.weight && <p style={{ color: 'red' }}>{errors.weight}</p>}\r\n+              </label>\r\n+            </div>\r\n+            {/* Altura */}\r\n+            <div className=\"px-4 py-3\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Altura (cm)</span>\r\n+                <input\r\n+                  type=\"number\"\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n+                  value={height}\r\n+                  onChange={(e) => setHeight(e.target.value)}\r\n+                  required\r\n+                />\r\n+                {errors.height && <p style={{ color: 'red' }}>{errors.height}</p>}\r\n+              </label>\r\n+            </div>\r\n+            {/* Edad */}\r\n+            <div className=\"px-4 py-3\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Edad</span>\r\n+                <input\r\n+                  type=\"number\"\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n+                  value={age}\r\n+                  onChange={(e) => setAge(e.target.value)}\r\n+                  required\r\n+                />\r\n+                {errors.age && <p style={{ color: 'red' }}>{errors.age}</p>}\r\n+              </label>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* Paso 1: Información adicional */}\r\n+        {step === 1 && (\r\n+          <div>\r\n+            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Información adicional</h3>\r\n+            {/* Género */}\r\n+            <div className=\"px-4 py-3\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Género</span>\r\n+                <select\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n+                  value={gender}\r\n+                  onChange={(e) => setGender(e.target.value)}\r\n+                  required\r\n+                >\r\n+                  <option value=\"\">Seleccionar</option>\r\n+                  <option value=\"male\">Hombre</option>\r\n+                  <option value=\"female\">Mujer</option>\r\n+                </select>\r\n+                {errors.gender && <p style={{ color: 'red' }}>{errors.gender}</p>}\r\n+              </label>\r\n+            </div>\r\n+            {/* Nivel de actividad */}\r\n+            <div className=\"px-4 py-3\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Nivel de actividad</span>\r\n+                <select\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n+                  value={activityLevel}\r\n+                  onChange={(e) => setActivityLevel(e.target.value)}\r\n+                  required\r\n+                >\r\n+                  <option value=\"\">Seleccionar</option>\r\n+                  {activityLevelOptions.map((option) => (\r\n+                    <option key={option.value} value={option.value}>\r\n+                      {option.label}\r\n+                    </option>\r\n+                  ))}\r\n+                </select>\r\n+                {errors.activityLevel && <p style={{ color: 'red' }}>{errors.activityLevel}</p>}\r\n+              </label>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* Paso 2: Preferencias alimenticias */}\r\n+        {step === 2 && (\r\n+          <div>\r\n+            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Preferencias alimenticias</h3>\r\n+            {/* Preferencias dietéticas */}\r\n+            <div className=\"flex gap-3 p-3 flex-wrap\">\r\n+              {dietaryOptions.map((option) => (\r\n+                <div\r\n+                  key={option.value}\r\n+                  onClick={() => handleCheckboxChange(setDietaryPreferences, option.value, dietaryPreferences)}\r\n+                  className={`cursor-pointer flex h-8 items-center justify-center gap-x-2 rounded-xl px-4 ${\r\n+                    dietaryPreferences.includes(option.value) ? 'bg-[#1980e6] text-white' : 'bg-[#f0f2f4] text-[#111418]'\r\n+                  }`}\r\n+                >\r\n+                  <p className=\"text-sm font-medium\">{option.label}</p>\r\n+                </div>\r\n+              ))}\r\n+            </div>\r\n+            {/* Número de comidas por día */}\r\n+            <div className=\"px-4 py-3 mt-4\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Número de comidas por día</span>\r\n+                <input\r\n+                  type=\"number\"\r\n+                  min=\"1\"\r\n+                  max=\"6\"\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n+                  value={mealsPerDay}\r\n+                  onChange={(e) => setMealsPerDay(e.target.value)}\r\n+                  required\r\n+                />\r\n+                {errors.mealsPerDay && <p style={{ color: 'red' }}>{errors.mealsPerDay}</p>}\r\n+              </label>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* Paso 3: Equipamiento disponible */}\r\n+        {step === 3 && (\r\n+          <div>\r\n+            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Equipamiento Disponible</h3>\r\n+            <div className=\"flex gap-3 p-3 flex-wrap\">\r\n+              {equipmentOptions.map((option) => (\r\n+                <div\r\n+                  key={option.value}\r\n+                  onClick={() => handleCheckboxChange(setEquipmentAvailable, option.value, equipmentAvailable)}\r\n+                  className={`cursor-pointer flex h-8 items-center justify-center gap-x-2 rounded-xl px-4 ${\r\n+                    equipmentAvailable.includes(option.value) ? 'bg-[#1980e6] text-white' : 'bg-[#f0f2f4] text-[#111418]'\r\n+                  }`}\r\n+                >\r\n+                  <p className=\"text-sm font-medium\">{option.label}</p>\r\n+                </div>\r\n+              ))}\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* Paso 4: Preferencia de rutina y objetivo de fitness */}\r\n+        {step === 4 && (\r\n+          <div>\r\n+            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Preferencias de Ejercicio y Objetivos</h3>\r\n+            {/* Preferencia de rutina */}\r\n+            <div className=\"px-4 py-3\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Preferencia de rutina de ejercicio</span>\r\n+                <select\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n+                  value={routinePreference}\r\n+                  onChange={(e) => setRoutinePreference(e.target.value)}\r\n+                  required\r\n+                >\r\n+                  <option value=\"\">Seleccionar</option>\r\n+                  {routinePreferenceOptions.map((option) => (\r\n+                    <option key={option.value} value={option.value}>\r\n+                      {option.label}\r\n+                    </option>\r\n+                  ))}\r\n+                </select>\r\n+                {errors.routinePreference && <p style={{ color: 'red' }}>{errors.routinePreference}</p>}\r\n+              </label>\r\n+            </div>\r\n+            {/* Objetivo de fitness */}\r\n+            <div className=\"px-4 py-3\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Objetivo de Fitness</span>\r\n+                <select\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n+                  value={fitnessGoal}\r\n+                  onChange={(e) => setFitnessGoal(e.target.value)}\r\n+                  required\r\n+                >\r\n+                  <option value=\"\">Seleccionar</option>\r\n+                  {fitnessGoalOptions.map((option) => (\r\n+                    <option key={option.value} value={option.value}>\r\n+                      {option.label}\r\n+                    </option>\r\n+                  ))}\r\n+                </select>\r\n+                {errors.fitnessGoal && <p style={{ color: 'red' }}>{errors.fitnessGoal}</p>}\r\n+              </label>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* Botones de navegación */}\r\n+        <div className=\"flex justify-between mt-6\">\r\n+          {step > 0 && (\r\n+            <button\r\n+              type=\"button\"\r\n+              className=\"bg-gray-300 text-gray-800 font-bold py-2 px-4 rounded\"\r\n+              onClick={prevStep}\r\n+            >\r\n+              Anterior\r\n+            </button>\r\n+          )}\r\n+          {step < 4 ? (\r\n+            <button\r\n+              type=\"button\"\r\n+              className=\"bg-blue-500 text-white font-bold py-2 px-4 rounded\"\r\n+              onClick={nextStep}\r\n+            >\r\n+              Siguiente\r\n+            </button>\r\n+          ) : (\r\n+            <button\r\n+              type=\"submit\"\r\n+              className=\"bg-green-500 text-white font-bold py-2 px-4 rounded\"\r\n+            >\r\n+              Finalizar\r\n+            </button>\r\n+          )}\r\n+        </div>\r\n+      </form>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default Form;\r\n"
                },
                {
                    "date": 1730826916168,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -126,379 +126,29 @@\n     { label: 'Cetogénica', value: 'keto' },\r\n     { label: 'Sin preferencias dietéticas', value: 'no_dietary_preference' }, // Nueva opción\r\n \r\n   ];\r\n-\r\n-  const equipmentOptions = [\r\n-    { label: 'Peso corporal', value: 'body weight' },\r\n-    { label: 'Mancuernas', value: 'dumbbells' },\r\n-    { label: 'Bandas de resistencia', value: 'resistance band' },\r\n-    { label: 'Barra', value: 'barbell' },\r\n-    { label: 'Máquinas de gimnasio', value: 'machine' },\r\n-  ];\r\n-\r\n-  return (\r\n-    <div className=\"flex flex-col items-center min-h-screen bg-white font-['Noto_Sans', 'Work_Sans', sans-serif]\">\r\n-      <form onSubmit={handleSubmit} className=\"w-[512px] max-w-full p-8 bg-white rounded-lg shadow-md\">\r\n-        {/* Paso 0: Datos Personales */}\r\n-        {step === 0 && (\r\n-          <div>\r\n-            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Datos Personales</h3>\r\n-            {/* Peso */}\r\n-            <div className=\"px-4 py-3\">\r\n-              <label className=\"block pb-2\">\r\n-                <span className=\"text-base font-medium text-[#111418]\">Peso (kg)</span>\r\n-                <input\r\n-                  type=\"number\"\r\n-                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n-                  value={weight}\r\n-                  onChange={(e) => setWeight(e.target.value)}\r\n-                  required\r\n-                />\r\n-                {errors.weight && <p style={{ color: 'red' }}>{errors.weight}</p>}\r\n-              </label>\r\n-            </div>\r\n-            {/* Altura */}\r\n-            <div className=\"px-4 py-3\">\r\n-              <label className=\"block pb-2\">\r\n-                <span className=\"text-base font-medium text-[#111418]\">Altura (cm)</span>\r\n-                <input\r\n-                  type=\"number\"\r\n-                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n-                  value={height}\r\n-                  onChange={(e) => setHeight(e.target.value)}\r\n-                  required\r\n-                />\r\n-                {errors.height && <p style={{ color: 'red' }}>{errors.height}</p>}\r\n-              </label>\r\n-            </div>\r\n-            {/* Edad */}\r\n-            <div className=\"px-4 py-3\">\r\n-              <label className=\"block pb-2\">\r\n-                <span className=\"text-base font-medium text-[#111418]\">Edad</span>\r\n-                <input\r\n-                  type=\"number\"\r\n-                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n-                  value={age}\r\n-                  onChange={(e) => setAge(e.target.value)}\r\n-                  required\r\n-                />\r\n-                {errors.age && <p style={{ color: 'red' }}>{errors.age}</p>}\r\n-              </label>\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-\r\n-        {/* Paso 1: Información adicional */}\r\n-        {step === 1 && (\r\n-          <div>\r\n-            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Información adicional</h3>\r\n-            {/* Género */}\r\n-            <div className=\"px-4 py-3\">\r\n-              <label className=\"block pb-2\">\r\n-                <span className=\"text-base font-medium text-[#111418]\">Género</span>\r\n-                <select\r\n-                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n-                  value={gender}\r\n-                  onChange={(e) => setGender(e.target.value)}\r\n-                  required\r\n-                >\r\n-                  <option value=\"\">Seleccionar</option>\r\n-                  <option value=\"male\">Hombre</option>\r\n-                  <option value=\"female\">Mujer</option>\r\n-                </select>\r\n-                {errors.gender && <p style={{ color: 'red' }}>{errors.gender}</p>}\r\n-              </label>\r\n-            </div>\r\n-            {/* Nivel de actividad */}\r\n-            <div className=\"px-4 py-3\">\r\n-              <label className=\"block pb-2\">\r\n-                <span className=\"text-base font-medium text-[#111418]\">Nivel de actividad</span>\r\n-                <select\r\n-                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n-                  value={activityLevel}\r\n-                  onChange={(e) => setActivityLevel(e.target.value)}\r\n-                  required\r\n-                >\r\n-                  <option value=\"\">Seleccionar</option>\r\n-                  {activityLevelOptions.map((option) => (\r\n-                    <option key={option.value} value={option.value}>\r\n-                      {option.label}\r\n-                    </option>\r\n-                  ))}\r\n-                </select>\r\n-                {errors.activityLevel && <p style={{ color: 'red' }}>{errors.activityLevel}</p>}\r\n-              </label>\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-\r\n-        {/* Paso 2: Preferencias alimenticias */}\r\n-        {step === 2 && (\r\n-          <div>\r\n-            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Preferencias alimenticias</h3>\r\n-            {/* Preferencias dietéticas */}\r\n-            <div className=\"flex gap-3 p-3 flex-wrap\">\r\n-              {dietaryOptions.map((option) => (\r\n-                <div\r\n-                  key={option.value}\r\n-                  onClick={() => handleCheckboxChange(setDietaryPreferences, option.value, dietaryPreferences)}\r\n-                  className={`cursor-pointer flex h-8 items-center justify-center gap-x-2 rounded-xl px-4 ${\r\n-                    dietaryPreferences.includes(option.value) ? 'bg-[#1980e6] text-white' : 'bg-[#f0f2f4] text-[#111418]'\r\n-                  }`}\r\n-                >\r\n-                  <p className=\"text-sm font-medium\">{option.label}</p>\r\n-                </div>\r\n-              ))}\r\n-            </div>\r\n-            {/* Número de comidas por día */}\r\n-            <div className=\"px-4 py-3 mt-4\">\r\n-              <label className=\"block pb-2\">\r\n-                <span className=\"text-base font-medium text-[#111418]\">Número de comidas por día</span>\r\n-                <input\r\n-                  type=\"number\"\r\n-                  min=\"1\"\r\n-                  max=\"6\"\r\n-                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n-                  value={mealsPerDay}\r\n-                  onChange={(e) => setMealsPerDay(e.target.value)}\r\n-                  required\r\n-                />\r\n-                {errors.mealsPerDay && <p style={{ color: 'red' }}>{errors.mealsPerDay}</p>}\r\n-              </label>\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-\r\n-        {/* Paso 3: Equipamiento disponible */}\r\n-        {step === 3 && (\r\n-          <div>\r\n-            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Equipamiento Disponible</h3>\r\n-            <div className=\"flex gap-3 p-3 flex-wrap\">\r\n-              {equipmentOptions.map((option) => (\r\n-                <div\r\n-                  key={option.value}\r\n-                  onClick={() => handleCheckboxChange(setEquipmentAvailable, option.value, equipmentAvailable)}\r\n-                  className={`cursor-pointer flex h-8 items-center justify-center gap-x-2 rounded-xl px-4 ${\r\n-                    equipmentAvailable.includes(option.value) ? 'bg-[#1980e6] text-white' : 'bg-[#f0f2f4] text-[#111418]'\r\n-                  }`}\r\n-                >\r\n-                  <p className=\"text-sm font-medium\">{option.label}</p>\r\n-                </div>\r\n-              ))}\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-\r\n-        {/* Paso 4: Preferencia de rutina y objetivo de fitness */}\r\n-        {step === 4 && (\r\n-          <div>\r\n-            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Preferencias de Ejercicio y Objetivos</h3>\r\n-            {/* Preferencia de rutina */}\r\n-            <div className=\"px-4 py-3\">\r\n-              <label className=\"block pb-2\">\r\n-                <span className=\"text-base font-medium text-[#111418]\">Preferencia de rutina de ejercicio</span>\r\n-                <select\r\n-                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n-                  value={routinePreference}\r\n-                  onChange={(e) => setRoutinePreference(e.target.value)}\r\n-                  required\r\n-                >\r\n-                  <option value=\"\">Seleccionar</option>\r\n-                  {routinePreferenceOptions.map((option) => (\r\n-                    <option key={option.value} value={option.value}>\r\n-                      {option.label}\r\n-                    </option>\r\n-                  ))}\r\n-                </select>\r\n-                {errors.routinePreference && <p style={{ color: 'red' }}>{errors.routinePreference}</p>}\r\n-              </label>\r\n-            </div>\r\n-            {/* Objetivo de fitness */}\r\n-            <div className=\"px-4 py-3\">\r\n-              <label className=\"block pb-2\">\r\n-                <span className=\"text-base font-medium text-[#111418]\">Objetivo de Fitness</span>\r\n-                <select\r\n-                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n-                  value={fitnessGoal}\r\n-                  onChange={(e) => setFitnessGoal(e.target.value)}\r\n-                  required\r\n-                >\r\n-                  <option value=\"\">Seleccionar</option>\r\n-                  {fitnessGoalOptions.map((option) => (\r\n-                    <option key={option.value} value={option.value}>\r\n-                      {option.label}\r\n-                    </option>\r\n-                  ))}\r\n-                </select>\r\n-                {errors.fitnessGoal && <p style={{ color: 'red' }}>{errors.fitnessGoal}</p>}\r\n-              </label>\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-\r\n-        {/* Botones de navegación */}\r\n-        <div className=\"flex justify-between mt-6\">\r\n-          {step > 0 && (\r\n-            <button\r\n-              type=\"button\"\r\n-              className=\"bg-gray-300 text-gray-800 font-bold py-2 px-4 rounded\"\r\n-              onClick={prevStep}\r\n-            >\r\n-              Anterior\r\n-            </button>\r\n-          )}\r\n-          {step < 4 ? (\r\n-            <button\r\n-              type=\"button\"\r\n-              className=\"bg-blue-500 text-white font-bold py-2 px-4 rounded\"\r\n-              onClick={nextStep}\r\n-            >\r\n-              Siguiente\r\n-            </button>\r\n-          ) : (\r\n-            <button\r\n-              type=\"submit\"\r\n-              className=\"bg-green-500 text-white font-bold py-2 px-4 rounded\"\r\n-            >\r\n-              Finalizar\r\n-            </button>\r\n-          )}\r\n-        </div>\r\n-      </form>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default Form;\r\n-// frontend/src/components/Form.js\r\n-import React, { useState } from 'react';\r\n-import axios from 'axios';\r\n-\r\n-const Form = ({ setPlan }) => {\r\n-  // Estados para todos los campos del formulario\r\n-  const [weight, setWeight] = useState('');\r\n-  const [height, setHeight] = useState('');\r\n-  const [age, setAge] = useState('');\r\n-  const [gender, setGender] = useState('');\r\n-  const [activityLevel, setActivityLevel] = useState('');\r\n-  const [fitnessGoal, setFitnessGoal] = useState('');\r\n-  const [routinePreference, setRoutinePreference] = useState('');\r\n-  const [dietaryPreferences, setDietaryPreferences] = useState([]);\r\n-  const [equipmentAvailable, setEquipmentAvailable] = useState([]);\r\n-  const [mealsPerDay, setMealsPerDay] = useState(3);\r\n-\r\n-  const [step, setStep] = useState(0);\r\n-  const [errors, setErrors] = useState({}); // Estado de errores\r\n-\r\n-  // Validación del formulario\r\n-  const validateForm = () => {\r\n-    const newErrors = {};\r\n-\r\n-    // Validaciones para los campos requeridos\r\n-    if (!weight || isNaN(weight) || weight < 20 || weight > 500) {\r\n-      newErrors.weight = 'El peso debe estar entre 20 kg y 500 kg';\r\n-    }\r\n-    if (!height || isNaN(height) || height < 50 || height > 300) {\r\n-      newErrors.height = 'La altura debe estar entre 50 cm y 300 cm';\r\n-    }\r\n-    if (!age || isNaN(age) || age < 10 || age > 120) {\r\n-      newErrors.age = 'La edad debe estar entre 10 y 120 años';\r\n-    }\r\n-    if (!gender) {\r\n-      newErrors.gender = 'Selecciona un género';\r\n-    }\r\n-    if (!activityLevel) {\r\n-      newErrors.activityLevel = 'Selecciona un nivel de actividad';\r\n-    }\r\n-    if (!fitnessGoal) {\r\n-      newErrors.fitnessGoal = 'Selecciona un objetivo de fitness';\r\n-    }\r\n-    if (!routinePreference) {\r\n-      newErrors.routinePreference = 'Selecciona una preferencia de rutina de ejercicio';\r\n-    }\r\n-    if (isNaN(mealsPerDay) || mealsPerDay < 1 || mealsPerDay > 6) {\r\n-      newErrors.mealsPerDay = 'El número de comidas por día debe estar entre 1 y 6';\r\n-    }\r\n-\r\n-    setErrors(newErrors);\r\n-    return Object.keys(newErrors).length === 0;\r\n-  };\r\n-\r\n-  // Manejar el envío del formulario\r\n-  const handleSubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    if (validateForm()) {\r\n-      const userData = {\r\n-        weight: parseFloat(weight),\r\n-        height: parseFloat(height),\r\n-        age: parseInt(age),\r\n-        gender,\r\n-        activity_level: activityLevel,\r\n-        fitness_goal: fitnessGoal,\r\n-        routine_preference: routinePreference,\r\n-        dietary_preferences: dietaryPreferences,\r\n-        equipment_available: equipmentAvailable,\r\n-        meals_per_day: parseInt(mealsPerDay),\r\n-      };\r\n-\r\n-      try {\r\n-        const token = localStorage.getItem('token');\r\n-        const response = await axios.post('http://localhost:8000/generate_plan/', userData, {\r\n-          headers: {\r\n-            Authorization: `Bearer ${token}`,\r\n-          },\r\n-        });\r\n-        setPlan(response.data);\r\n-      } catch (error) {\r\n-        console.error('Error al obtener el plan:', error);\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  // Manejar cambios en los checkboxes\r\n-  const handleCheckboxChange = (setState, value, state) => {\r\n-    if (state.includes(value)) {\r\n-      setState(state.filter((item) => item !== value));\r\n+  const handleDietaryPreferenceChange = (value) => {\r\n+    if (value === 'no_dietary_preference') {\r\n+      // Si selecciona \"Sin preferencias dietéticas\", desmarcamos todas las demás opciones\r\n+      setDietaryPreferences(\r\n+        dietaryPreferences.includes('no_dietary_preference') \r\n+          ? [] // Si estaba seleccionada, la quitamos\r\n+          : ['no_dietary_preference'] // Si no estaba seleccionada, la agregamos y quitamos otras\r\n+      );\r\n     } else {\r\n-      setState([...state, value]);\r\n+      // Si selecciona alguna otra opción, eliminamos \"Sin preferencias dietéticas\" y alternamos la opción seleccionada\r\n+      setDietaryPreferences((prevPreferences) => {\r\n+        const updatedPreferences = prevPreferences.filter(\r\n+          (pref) => pref !== 'no_dietary_preference' // Removemos \"Sin preferencias dietéticas\"\r\n+        );\r\n+        return updatedPreferences.includes(value)\r\n+          ? updatedPreferences.filter((pref) => pref !== value) // Quitamos la opción si ya está seleccionada\r\n+          : [...updatedPreferences, value]; // Agregamos la opción si no está seleccionada\r\n+      });\r\n     }\r\n   };\r\n \r\n-  const nextStep = () => setStep((prevStep) => Math.min(prevStep + 1, 4));\r\n-  const prevStep = () => setStep((prevStep) => Math.max(prevStep - 1, 0));\r\n-\r\n-  // Opciones para los select y checkboxes\r\n-  const activityLevelOptions = [\r\n-    { label: 'Sedentario', value: 'sedentary' },\r\n-    { label: 'Ligeramente activo', value: 'lightly_active' },\r\n-    { label: 'Moderadamente activo', value: 'moderately_active' },\r\n-    { label: 'Muy activo', value: 'very_active' },\r\n-    { label: 'Súper activo', value: 'super_active' },\r\n-  ];\r\n-\r\n-  const fitnessGoalOptions = [\r\n-    { label: 'Perder peso', value: 'lose_weight' },\r\n-    { label: 'Ganar masa muscular', value: 'gain_muscle' },\r\n-    { label: 'Mantener peso', value: 'maintain' },\r\n-  ];\r\n-\r\n-  const routinePreferenceOptions = [\r\n-    { label: 'Ejercicio en casa', value: 'home' },\r\n-    { label: 'Ejercicio al aire libre', value: 'outdoor' },\r\n-    { label: 'Ejercicio en el gimnasio', value: 'gym' },\r\n-    { label: 'No estoy seguro', value: 'unsure' },\r\n-  ];\r\n-\r\n-  const dietaryOptions = [\r\n-    { label: 'Vegetariano', value: 'vegetarian' },\r\n-    { label: 'Vegano', value: 'vegan' },\r\n-    { label: 'Sin gluten', value: 'gluten_free' },\r\n-    { label: 'Sin lactosa', value: 'lactose_free' },\r\n-    { label: 'Paleo', value: 'paleo' },\r\n-    { label: 'Cetogénica', value: 'keto' },\r\n-  ];\r\n-\r\n   const equipmentOptions = [\r\n     { label: 'Peso corporal', value: 'body weight' },\r\n     { label: 'Mancuernas', value: 'dumbbells' },\r\n     { label: 'Bandas de resistencia', value: 'resistance band' },\r\n@@ -739,2613 +389,4 @@\n   );\r\n };\r\n \r\n export default Form;\r\n-// frontend/src/Form.js\r\n-import React, { useState } from 'react';\r\n-import axios from 'axios';\r\n-\r\n-const Form = ({ setPlan, setHasPlan }) => {\r\n-  // Estados para todos los campos del formulario\r\n-  const [weight, setWeight] = useState('');\r\n-  const [height, setHeight] = useState('');\r\n-  const [age, setAge] = useState('');\r\n-  const [gender, setGender] = useState('');\r\n-  const [activityLevel, setActivityLevel] = useState('');\r\n-  const [fitnessGoal, setFitnessGoal] = useState('');\r\n-  const [routinePreference, setRoutinePreference] = useState('');\r\n-  const [dietaryPreferences, setDietaryPreferences] = useState([]);\r\n-  const [equipmentAvailable, setEquipmentAvailable] = useState([]);\r\n-  const [mealsPerDay, setMealsPerDay] = useState(3);\r\n-\r\n-  const [step, setStep] = useState(0);\r\n-  const [errors, setErrors] = useState({}); // Estado de errores\r\n-\r\n-  // Validación del formulario\r\n-  const validateForm = () => {\r\n-    const newErrors = {};\r\n-\r\n-    // Validaciones para los campos requeridos\r\n-    if (!weight || isNaN(weight) || weight < 20 || weight > 500) {\r\n-      newErrors.weight = 'El peso debe estar entre 20 kg y 500 kg';\r\n-    }\r\n-    if (!height || isNaN(height) || height < 50 || height > 300) {\r\n-      newErrors.height = 'La altura debe estar entre 50 cm y 300 cm';\r\n-    }\r\n-    if (!age || isNaN(age) || age < 10 || age > 120) {\r\n-      newErrors.age = 'La edad debe estar entre 10 y 120 años';\r\n-    }\r\n-    if (!gender) {\r\n-      newErrors.gender = 'Selecciona un género';\r\n-    }\r\n-    if (!activityLevel) {\r\n-      newErrors.activityLevel = 'Selecciona un nivel de actividad';\r\n-    }\r\n-    if (!fitnessGoal) {\r\n-      newErrors.fitnessGoal = 'Selecciona un objetivo de fitness';\r\n-    }\r\n-    if (!routinePreference) {\r\n-      newErrors.routinePreference = 'Selecciona una preferencia de rutina de ejercicio';\r\n-    }\r\n-    if (isNaN(mealsPerDay) || mealsPerDay < 1 || mealsPerDay > 6) {\r\n-      newErrors.mealsPerDay = 'El número de comidas por día debe estar entre 1 y 6';\r\n-    }\r\n-\r\n-    setErrors(newErrors);\r\n-    return Object.keys(newErrors).length === 0;\r\n-  };\r\n-\r\n-  // Manejar el envío del formulario\r\n-  const handleSubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    if (validateForm()) {\r\n-      const userData = {\r\n-        weight: parseFloat(weight),\r\n-        height: parseFloat(height),\r\n-        age: parseInt(age),\r\n-        gender,\r\n-        activity_level: activityLevel,\r\n-        fitness_goal: fitnessGoal,\r\n-        routine_preference: routinePreference,\r\n-        dietary_preferences: dietaryPreferences,\r\n-        equipment_available: equipmentAvailable,\r\n-        meals_per_day: parseInt(mealsPerDay),\r\n-      };\r\n-\r\n-      try {\r\n-        const response = await axios.post('http://localhost:8000/generate_plan/', userData);\r\n-        setPlan(response.data);\r\n-        setHasPlan(true);\r\n-      } catch (error) {\r\n-        console.error('Error al obtener el plan:', error);\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  // Manejar cambios en los checkboxes\r\n-  const handleCheckboxChange = (setState, value, state) => {\r\n-    if (state.includes(value)) {\r\n-      setState(state.filter((item) => item !== value));\r\n-    } else {\r\n-      setState([...state, value]);\r\n-    }\r\n-  };\r\n-\r\n-  const nextStep = () => setStep((prevStep) => Math.min(prevStep + 1, 5));\r\n-  const prevStep = () => setStep((prevStep) => Math.max(prevStep - 1, 0));\r\n-\r\n-  // Opciones para los select y checkboxes\r\n-  const activityLevelOptions = [\r\n-    { label: 'Sedentario', value: 'sedentary' },\r\n-    { label: 'Ligeramente activo', value: 'lightly_active' },\r\n-    { label: 'Moderadamente activo', value: 'moderately_active' },\r\n-    { label: 'Muy activo', value: 'very_active' },\r\n-    { label: 'Súper activo', value: 'super_active' },\r\n-  ];\r\n-\r\n-  const fitnessGoalOptions = [\r\n-    { label: 'Perder peso', value: 'lose_weight' },\r\n-    { label: 'Ganar masa muscular', value: 'gain_muscle' },\r\n-    { label: 'Mantener peso', value: 'maintain' },\r\n-  ];\r\n-\r\n-  const routinePreferenceOptions = [\r\n-    { label: 'Ejercicio en casa', value: 'home' },\r\n-    { label: 'Ejercicio al aire libre', value: 'outdoor' },\r\n-    { label: 'Ejercicio en el gimnasio', value: 'gym' },\r\n-    { label: 'No estoy seguro', value: 'unsure' },\r\n-  ];\r\n-\r\n-  const dietaryOptions = [\r\n-    { label: 'Vegetariano', value: 'vegetarian' },\r\n-    { label: 'Vegano', value: 'vegan' },\r\n-    { label: 'Sin gluten', value: 'gluten_free' },\r\n-    { label: 'Sin lactosa', value: 'lactose_free' },\r\n-    { label: 'Paleo', value: 'paleo' },\r\n-    { label: 'Cetogénica', value: 'keto' },\r\n-  ];\r\n-\r\n-  const equipmentOptions = [\r\n-    { label: 'Peso corporal', value: 'body weight' },\r\n-    { label: 'Mancuernas', value: 'dumbbells' },\r\n-    { label: 'Bandas de resistencia', value: 'resistance band' },\r\n-    { label: 'Barra', value: 'barbell' },\r\n-    { label: 'Máquinas de gimnasio', value: 'machine' },\r\n-  ];\r\n-\r\n-  return (\r\n-    <div className=\"flex flex-col items-center min-h-screen bg-white font-['Noto_Sans', 'Work_Sans', sans-serif]\">\r\n-      <form onSubmit={handleSubmit} className=\"w-[512px] max-w-full p-8 bg-white rounded-lg shadow-md\">\r\n-        {/* Paso 0: Datos Personales */}\r\n-        {step === 0 && (\r\n-          <div>\r\n-            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Datos Personales</h3>\r\n-            {/* Peso */}\r\n-            <div className=\"px-4 py-3\">\r\n-              <label className=\"block pb-2\">\r\n-                <span className=\"text-base font-medium text-[#111418]\">Peso (kg)</span>\r\n-                <input\r\n-                  type=\"number\"\r\n-                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n-                  value={weight}\r\n-                  onChange={(e) => setWeight(e.target.value)}\r\n-                  required\r\n-                />\r\n-                {errors.weight && <p style={{ color: 'red' }}>{errors.weight}</p>}\r\n-              </label>\r\n-            </div>\r\n-            {/* Altura */}\r\n-            <div className=\"px-4 py-3\">\r\n-              <label className=\"block pb-2\">\r\n-                <span className=\"text-base font-medium text-[#111418]\">Altura (cm)</span>\r\n-                <input\r\n-                  type=\"number\"\r\n-                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n-                  value={height}\r\n-                  onChange={(e) => setHeight(e.target.value)}\r\n-                  required\r\n-                />\r\n-                {errors.height && <p style={{ color: 'red' }}>{errors.height}</p>}\r\n-              </label>\r\n-            </div>\r\n-            {/* Edad */}\r\n-            <div className=\"px-4 py-3\">\r\n-              <label className=\"block pb-2\">\r\n-                <span className=\"text-base font-medium text-[#111418]\">Edad</span>\r\n-                <input\r\n-                  type=\"number\"\r\n-                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n-                  value={age}\r\n-                  onChange={(e) => setAge(e.target.value)}\r\n-                  required\r\n-                />\r\n-                {errors.age && <p style={{ color: 'red' }}>{errors.age}</p>}\r\n-              </label>\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-\r\n-        {/* Paso 1: Información adicional */}\r\n-        {step === 1 && (\r\n-          <div>\r\n-            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Información adicional</h3>\r\n-            {/* Género */}\r\n-            <div className=\"px-4 py-3\">\r\n-              <label className=\"block pb-2\">\r\n-                <span className=\"text-base font-medium text-[#111418]\">Género</span>\r\n-                <select\r\n-                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n-                  value={gender}\r\n-                  onChange={(e) => setGender(e.target.value)}\r\n-                  required\r\n-                >\r\n-                  <option value=\"\">Seleccionar</option>\r\n-                  <option value=\"male\">Hombre</option>\r\n-                  <option value=\"female\">Mujer</option>\r\n-                </select>\r\n-                {errors.gender && <p style={{ color: 'red' }}>{errors.gender}</p>}\r\n-              </label>\r\n-            </div>\r\n-            {/* Nivel de actividad */}\r\n-            <div className=\"px-4 py-3\">\r\n-              <label className=\"block pb-2\">\r\n-                <span className=\"text-base font-medium text-[#111418]\">Nivel de actividad</span>\r\n-                <select\r\n-                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n-                  value={activityLevel}\r\n-                  onChange={(e) => setActivityLevel(e.target.value)}\r\n-                  required\r\n-                >\r\n-                  <option value=\"\">Seleccionar</option>\r\n-                  {activityLevelOptions.map((option) => (\r\n-                    <option key={option.value} value={option.value}>\r\n-                      {option.label}\r\n-                    </option>\r\n-                  ))}\r\n-                </select>\r\n-                {errors.activityLevel && <p style={{ color: 'red' }}>{errors.activityLevel}</p>}\r\n-              </label>\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-\r\n-        {/* Paso 2: Preferencias alimenticias */}\r\n-        {step === 2 && (\r\n-          <div>\r\n-            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Preferencias alimenticias</h3>\r\n-            {/* Preferencias dietéticas */}\r\n-            <div className=\"flex gap-3 p-3 flex-wrap\">\r\n-              {dietaryOptions.map((option) => (\r\n-                <div\r\n-                  key={option.value}\r\n-                  onClick={() => handleCheckboxChange(setDietaryPreferences, option.value, dietaryPreferences)}\r\n-                  className={`cursor-pointer flex h-8 items-center justify-center gap-x-2 rounded-xl px-4 ${\r\n-                    dietaryPreferences.includes(option.value) ? 'bg-[#1980e6] text-white' : 'bg-[#f0f2f4] text-[#111418]'\r\n-                  }`}\r\n-                >\r\n-                  <p className=\"text-sm font-medium\">{option.label}</p>\r\n-                </div>\r\n-              ))}\r\n-            </div>\r\n-            {/* Número de comidas por día */}\r\n-            <div className=\"px-4 py-3 mt-4\">\r\n-              <label className=\"block pb-2\">\r\n-                <span className=\"text-base font-medium text-[#111418]\">Número de comidas por día</span>\r\n-                <input\r\n-                  type=\"number\"\r\n-                  min=\"1\"\r\n-                  max=\"6\"\r\n-                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n-                  value={mealsPerDay}\r\n-                  onChange={(e) => setMealsPerDay(e.target.value)}\r\n-                  required\r\n-                />\r\n-                {errors.mealsPerDay && <p style={{ color: 'red' }}>{errors.mealsPerDay}</p>}\r\n-              </label>\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-\r\n-        {/* Paso 3: Equipamiento disponible */}\r\n-        {step === 3 && (\r\n-          <div>\r\n-            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Equipamiento Disponible</h3>\r\n-            <div className=\"flex gap-3 p-3 flex-wrap\">\r\n-              {equipmentOptions.map((option) => (\r\n-                <div\r\n-                  key={option.value}\r\n-                  onClick={() => handleCheckboxChange(setEquipmentAvailable, option.value, equipmentAvailable)}\r\n-                  className={`cursor-pointer flex h-8 items-center justify-center gap-x-2 rounded-xl px-4 ${\r\n-                    equipmentAvailable.includes(option.value) ? 'bg-[#1980e6] text-white' : 'bg-[#f0f2f4] text-[#111418]'\r\n-                  }`}\r\n-                >\r\n-                  <p className=\"text-sm font-medium\">{option.label}</p>\r\n-                </div>\r\n-              ))}\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-\r\n-        {/* Paso 4: Preferencia de rutina y objetivo de fitness */}\r\n-        {step === 4 && (\r\n-          <div>\r\n-            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Preferencias de Ejercicio y Objetivos</h3>\r\n-            {/* Preferencia de rutina */}\r\n-            <div className=\"px-4 py-3\">\r\n-              <label className=\"block pb-2\">\r\n-                <span className=\"text-base font-medium text-[#111418]\">Preferencia de rutina de ejercicio</span>\r\n-                <select\r\n-                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n-                  value={routinePreference}\r\n-                  onChange={(e) => setRoutinePreference(e.target.value)}\r\n-                  required\r\n-                >\r\n-                  <option value=\"\">Seleccionar</option>\r\n-                  {routinePreferenceOptions.map((option) => (\r\n-                    <option key={option.value} value={option.value}>\r\n-                      {option.label}\r\n-                    </option>\r\n-                  ))}\r\n-                </select>\r\n-                {errors.routinePreference && <p style={{ color: 'red' }}>{errors.routinePreference}</p>}\r\n-              </label>\r\n-            </div>\r\n-            {/* Objetivo de fitness */}\r\n-            <div className=\"px-4 py-3\">\r\n-              <label className=\"block pb-2\">\r\n-                <span className=\"text-base font-medium text-[#111418]\">Objetivo de Fitness</span>\r\n-                <select\r\n-                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n-                  value={fitnessGoal}\r\n-                  onChange={(e) => setFitnessGoal(e.target.value)}\r\n-                  required\r\n-                >\r\n-                  <option value=\"\">Seleccionar</option>\r\n-                  {fitnessGoalOptions.map((option) => (\r\n-                    <option key={option.value} value={option.value}>\r\n-                      {option.label}\r\n-                    </option>\r\n-                  ))}\r\n-                </select>\r\n-                {errors.fitnessGoal && <p style={{ color: 'red' }}>{errors.fitnessGoal}</p>}\r\n-              </label>\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-\r\n-        {/* Botones de navegación */}\r\n-        <div className=\"flex justify-between mt-6\">\r\n-          {step > 0 && (\r\n-            <button\r\n-              type=\"button\"\r\n-              className=\"bg-gray-300 text-gray-800 font-bold py-2 px-4 rounded\"\r\n-              onClick={prevStep}\r\n-            >\r\n-              Anterior\r\n-            </button>\r\n-          )}\r\n-          {step < 4 ? (\r\n-            <button\r\n-              type=\"button\"\r\n-              className=\"bg-blue-500 text-white font-bold py-2 px-4 rounded\"\r\n-              onClick={nextStep}\r\n-            >\r\n-              Siguiente\r\n-            </button>\r\n-          ) : (\r\n-            <button\r\n-              type=\"submit\"\r\n-              className=\"bg-green-500 text-white font-bold py-2 px-4 rounded\"\r\n-            >\r\n-              Finalizar\r\n-            </button>\r\n-          )}\r\n-        </div>\r\n-      </form>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default Form;\r\n-import React, { useState } from 'react';\r\n-import axios from 'axios';\r\n-\r\n-const Form = ({ setPlan }) => {\r\n-  // Estados para todos los campos del formulario básico\r\n-  const [weight, setWeight] = useState('');\r\n-  const [height, setHeight] = useState('');\r\n-  const [age, setAge] = useState('');\r\n-  const [gender, setGender] = useState('');\r\n-  const [activityLevel, setActivityLevel] = useState('');\r\n-  const [dietaryRestrictions, setDietaryRestrictions] = useState([]);\r\n-  const [dislikedFoods, setDislikedFoods] = useState('');\r\n-  const [trainingPreference, setTrainingPreference] = useState([]);\r\n-  const [fitnessGoals, setFitnessGoals] = useState([]);\r\n-\r\n-  // Estados para datos avanzados y dispositivos inteligentes\r\n-  const [advanced, setAdvanced] = useState(false);\r\n-  const [bodyFat, setBodyFat] = useState('');\r\n-  const [muscleMass, setMuscleMass] = useState('');\r\n-  const [heartRate, setHeartRate] = useState('');\r\n-  const [steps, setSteps] = useState('');\r\n-  const [smartDevice, setSmartDevice] = useState(false);\r\n-\r\n-  const [step, setStep] = useState(0);\r\n-  const [errors, setErrors] = useState({}); // Estado de errores\r\n-\r\n-  const validateForm = () => {\r\n-    const newErrors = {};\r\n-  \r\n-    // Validación para el peso\r\n-    if (!weight || isNaN(weight) || weight < 20 || weight > 500) {\r\n-      newErrors.weight = 'El peso debe estar entre 20 kg y 500 kg';\r\n-    }\r\n-  \r\n-    // Validación para la altura\r\n-    if (!height || isNaN(height) || height < 50 || height > 300) {\r\n-      newErrors.height = 'La altura debe estar entre 50 cm y 300 cm';\r\n-    }\r\n-  \r\n-    // Validación para la edad\r\n-    if (!age || isNaN(age) || age < 10 || age > 120) {\r\n-      newErrors.age = 'La edad debe estar entre 10 y 120 años';\r\n-    }\r\n-  \r\n-    // Validación para el género\r\n-    if (!gender) {\r\n-      newErrors.gender = 'Selecciona un género';\r\n-    }\r\n-  \r\n-    // Validación para el nivel de actividad\r\n-    if (!activityLevel) {\r\n-      newErrors.activityLevel = 'Selecciona un nivel de actividad';\r\n-    }\r\n-  \r\n-    // Validación para los objetivos de fitness\r\n-    if (fitnessGoals.length === 0) {\r\n-      newErrors.fitnessGoals = 'Selecciona al menos un objetivo de fitness';\r\n-    }\r\n-  \r\n-    setErrors(newErrors);\r\n-    return Object.keys(newErrors).length === 0;\r\n-  };\r\n-  \r\n-\r\n-  const handleSubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    if (validateForm()) {\r\n-        const userData = {\r\n-        weight: parseFloat(weight),\r\n-        height: parseFloat(height),\r\n-        age: parseInt(age),\r\n-        gender,\r\n-        activity_level: activityLevel,\r\n-        goals: fitnessGoals,\r\n-        routine_preference: trainingPreference.join(', ') || 'Ninguno',\r\n-        dietary_restrictions: dietaryRestrictions,\r\n-        disliked_foods: dislikedFoods,\r\n-        ...(advanced && { body_fat: parseFloat(bodyFat), muscle_mass: parseFloat(muscleMass) }),\r\n-        ...(smartDevice && { heart_rate: parseFloat(heartRate), steps: parseInt(steps) })\r\n-      };\r\n-\r\n-      try {\r\n-        const response = await axios.post('http://localhost:8000/generate_plan/', userData);\r\n-        setPlan(response.data);\r\n-        setHasPlan(true); // Actualiza hasPlan a true\r\n-    } catch (error) {\r\n-        console.error('Error al obtener el plan:', error);\r\n-    }\r\n-}\r\n-};\r\n-\r\n-  const handleCheckboxChange = (setState, value, state) => {\r\n-    if (state.includes(value)) {\r\n-      setState(state.filter((item) => item !== value));\r\n-    } else {\r\n-      setState([...state, value]);\r\n-    }\r\n-  };\r\n-\r\n-  const nextStep = () => setStep((prevStep) => Math.min(prevStep + 1, 5));\r\n-  const prevStep = () => setStep((prevStep) => Math.max(prevStep - 1, 0));\r\n-\r\n-  return (\r\n-    <div className=\"flex flex-col items-center min-h-screen bg-white font-['Noto_Sans', 'Work_Sans', sans-serif]\">\r\n-      <form onSubmit={handleSubmit} className=\"w-[512px] max-w-full p-8 bg-white rounded-lg shadow-md\">\r\n-\r\n-        {/* Paso 0: Datos Personales */}\r\n-        {step === 0 && (\r\n-          <div>\r\n-            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Datos Personales</h3>\r\n-            <div className=\"px-4 py-3\">\r\n-              <label className=\"block pb-2\">\r\n-                <span className=\"text-base font-medium text-[#111418]\">Peso (kg)</span>\r\n-                <input\r\n-                  type=\"number\"\r\n-                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n-                  value={weight}\r\n-                  onChange={(e) => setWeight(e.target.value)}\r\n-                  required\r\n-                />\r\n-                {errors.weight && <p style={{ color: 'red' }}>{errors.weight}</p>}\r\n-              </label>\r\n-            </div>\r\n-            <div className=\"px-4 py-3\">\r\n-              <label className=\"block pb-2\">\r\n-                <span className=\"text-base font-medium text-[#111418]\">Altura (cm)</span>\r\n-                <input\r\n-                  type=\"number\"\r\n-                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n-                  value={height}\r\n-                  onChange={(e) => setHeight(e.target.value)}\r\n-                  required\r\n-                />\r\n-                {errors.height && <p style={{ color: 'red' }}>{errors.height}</p>}\r\n-              </label>\r\n-            </div>\r\n-            <div className=\"px-4 py-3\">\r\n-              <label className=\"block pb-2\">\r\n-                <span className=\"text-base font-medium text-[#111418]\">Edad</span>\r\n-                <input\r\n-                  type=\"number\"\r\n-                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n-                  value={age}\r\n-                  onChange={(e) => setAge(e.target.value)}\r\n-                  required\r\n-                />\r\n-                {errors.age && <p style={{ color: 'red' }}>{errors.age}</p>}\r\n-              </label>\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-\r\n-        {/* Paso 1: Información adicional */}\r\n-        {step === 1 && (\r\n-          <div>\r\n-            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Información adicional</h3>\r\n-            <div className=\"px-4 py-3\">\r\n-              <label className=\"block pb-2\">\r\n-                <span className=\"text-base font-medium text-[#111418]\">Sexo</span>\r\n-                <select\r\n-                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n-                  value={gender}\r\n-                  onChange={(e) => setGender(e.target.value)}\r\n-                  required\r\n-                >\r\n-                  <option value=\"\">Seleccionar</option>\r\n-                  <option value=\"male\">Hombre</option>\r\n-                  <option value=\"female\">Mujer</option>\r\n-                </select>\r\n-                {errors.gender && <p style={{ color: 'red' }}>{errors.gender}</p>}\r\n-              </label>\r\n-            </div>\r\n-            <div className=\"px-4 py-3\">\r\n-              <label className=\"block pb-2\">\r\n-                <span className=\"text-base font-medium text-[#111418]\">Nivel de actividad</span>\r\n-                <select\r\n-                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n-                  value={activityLevel}\r\n-                  onChange={(e) => setActivityLevel(e.target.value)}\r\n-                  required\r\n-                >\r\n-                  <option value=\"\">Seleccionar</option>\r\n-                  <option value=\"sedentary\">Sedentario</option>\r\n-                  <option value=\"lightly_active\">Ligeramente activo</option>\r\n-                  <option value=\"moderately_active\">Moderadamente activo</option>\r\n-                  <option value=\"very_active\">Muy activo</option>\r\n-                  <option value=\"super_active\">Súper activo</option>\r\n-                </select>\r\n-                {errors.activityLevel && <p style={{ color: 'red' }}>{errors.activityLevel}</p>}\r\n-              </label>\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-\r\n-        {/* Paso 2: Datos avanzados y dispositivos */}\r\n-        {step === 2 && (\r\n-          <div>\r\n-            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Datos avanzados y dispositivos</h3>\r\n-            <label className=\"block pb-2\">\r\n-              <input type=\"checkbox\" checked={advanced} onChange={(e) => setAdvanced(e.target.checked)} />\r\n-              <span className=\"ml-2\">Proveer datos avanzados</span>\r\n-            </label>\r\n-\r\n-            {advanced && (\r\n-              <div>\r\n-                <div className=\"px-4 py-3\">\r\n-                  <label className=\"block pb-2\">\r\n-                    <span className=\"text-base font-medium text-[#111418]\">Porcentaje de grasa corporal (%)</span>\r\n-                    <input\r\n-                      type=\"number\"\r\n-                      className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n-                      value={bodyFat}\r\n-                      onChange={(e) => setBodyFat(e.target.value)}\r\n-                    />\r\n-                  </label>\r\n-                </div>\r\n-                <div className=\"px-4 py-3\">\r\n-                  <label className=\"block pb-2\">\r\n-                    <span className=\"text-base font-medium text-[#111418]\">Masa muscular (kg)</span>\r\n-                    <input\r\n-                      type=\"number\"\r\n-                      className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n-                      value={muscleMass}\r\n-                      onChange={(e) => setMuscleMass(e.target.value)}\r\n-                    />\r\n-                  </label>\r\n-                </div>\r\n-              </div>\r\n-            )}\r\n-\r\n-            <label className=\"block mt-4\">\r\n-              <input\r\n-                type=\"checkbox\"\r\n-                checked={smartDevice}\r\n-                onChange={(e) => setSmartDevice(e.target.checked)}\r\n-              />\r\n-              <span className=\"ml-2\">Sincronizar con un dispositivo inteligente</span>\r\n-            </label>\r\n-\r\n-            {smartDevice && (\r\n-              <div className=\"mt-4\">\r\n-                <div className=\"px-4 py-3\">\r\n-                  <label className=\"block pb-2\">\r\n-                    <span className=\"text-base font-medium text-[#111418]\">Frecuencia cardíaca en reposo (BPM)</span>\r\n-                    <input\r\n-                      type=\"number\"\r\n-                      className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n-                      value={heartRate}\r\n-                      onChange={(e) => setHeartRate(e.target.value)}\r\n-                    />\r\n-                  </label>\r\n-                </div>\r\n-                <div className=\"px-4 py-3\">\r\n-                  <label className=\"block pb-2\">\r\n-                    <span className=\"text-base font-medium text-[#111418]\">Pasos diarios</span>\r\n-                    <input\r\n-                      type=\"number\"\r\n-                      className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n-                      value={steps}\r\n-                      onChange={(e) => setSteps(e.target.value)}\r\n-                    />\r\n-                  </label>\r\n-                </div>\r\n-              </div>\r\n-            )}\r\n-          </div>\r\n-        )}\r\n-\r\n-        {/* Paso 3: Preferencias alimenticias */}\r\n-        {step === 3 && (\r\n-          <div>\r\n-            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Preferencias alimenticias</h3>\r\n-            <div className=\"flex gap-3 p-3 flex-wrap\">\r\n-              {['Sin restricciones', 'Vegetariano', 'Vegano', 'Sin gluten', 'Sin lactosa', 'Sin nueces', 'Dieta cetogénica'].map((preference) => (\r\n-                <div\r\n-                  key={preference}\r\n-                  onClick={() => handleCheckboxChange(setDietaryRestrictions, preference, dietaryRestrictions)}\r\n-                  className={`cursor-pointer flex h-8 items-center justify-center gap-x-2 rounded-xl px-4 ${\r\n-                    dietaryRestrictions.includes(preference) ? 'bg-[#1980e6] text-white' : 'bg-[#f0f2f4] text-[#111418]'\r\n-                  }`}\r\n-                >\r\n-                  <p className=\"text-sm font-medium\">{preference}</p>\r\n-                </div>\r\n-              ))}\r\n-            </div>\r\n-            <div className=\"px-4 py-3 mt-4\">\r\n-              <label className=\"block pb-2\">\r\n-                <span className=\"text-base font-medium text-[#111418]\">Alimentos que prefieres evitar</span>\r\n-                <input\r\n-                  type=\"text\"\r\n-                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n-                  placeholder=\"Ej. Brócoli, pescado\"\r\n-                  value={dislikedFoods}\r\n-                  onChange={(e) => setDislikedFoods(e.target.value)}\r\n-                />\r\n-              </label>\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-\r\n-        {/* Paso 4: Tipo de entrenamiento */}\r\n-        {step === 4 && (\r\n-          <div>\r\n-            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Tipo de entrenamiento</h3>\r\n-            <div className=\"flex gap-3 p-3 flex-wrap\">\r\n-              {['Ejercicio en casa', 'Ejercicio al aire libre', 'Ejercicio en el gimnasio', 'Ninguno', 'No estoy seguro'].map((preference) => (\r\n-                <div\r\n-                  key={preference}\r\n-                  onClick={() => handleCheckboxChange(setTrainingPreference, preference, trainingPreference)}\r\n-                  className={`cursor-pointer flex h-8 items-center justify-center gap-x-2 rounded-xl px-4 ${\r\n-                    trainingPreference.includes(preference) ? 'bg-[#1980e6] text-white' : 'bg-[#f0f2f4] text-[#111418]'\r\n-                  }`}\r\n-                >\r\n-                  <p className=\"text-sm font-medium\">{preference}</p>\r\n-                </div>\r\n-              ))}\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-\r\n-        {/* Paso 5: Objetivos de Fitness */}\r\n-        {step === 5 && (\r\n-          <div>\r\n-            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Objetivos de Fitness</h3>\r\n-            <div className=\"flex gap-3 p-3 flex-wrap\">\r\n-              {['Perder peso', 'Ganar masa muscular', 'Mejorar la salud', 'Mejorar el rendimiento'].map((goal) => (\r\n-                <div\r\n-                  key={goal}\r\n-                  onClick={() => handleCheckboxChange(setFitnessGoals, goal, fitnessGoals)}\r\n-                  className={`cursor-pointer flex h-8 items-center justify-center gap-x-2 rounded-xl px-4 ${\r\n-                    fitnessGoals.includes(goal) ? 'bg-[#1980e6] text-white' : 'bg-[#f0f2f4] text-[#111418]'\r\n-                  }`}\r\n-                >\r\n-                  <p className=\"text-sm font-medium\">{goal}</p>\r\n-                </div>\r\n-              ))}\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-\r\n-        {/* Botones de navegación */}\r\n-        <div className=\"flex justify-between mt-6\">\r\n-          {step > 0 && (\r\n-            <button\r\n-              type=\"button\"\r\n-              className=\"bg-gray-300 text-gray-800 font-bold py-2 px-4 rounded\"\r\n-              onClick={prevStep}\r\n-            >\r\n-              Anterior\r\n-            </button>\r\n-          )}\r\n-          {step < 5 ? (\r\n-            <button\r\n-              type=\"button\"\r\n-              className=\"bg-blue-500 text-white font-bold py-2 px-4 rounded\"\r\n-              onClick={nextStep}\r\n-            >\r\n-              Siguiente\r\n-            </button>\r\n-          ) : (\r\n-            <button\r\n-              type=\"submit\"\r\n-              className=\"bg-green-500 text-white font-bold py-2 px-4 rounded\"\r\n-            >\r\n-              Finalizar\r\n-            </button>\r\n-          )}\r\n-        </div>\r\n-      </form>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default Form;\r\n-import React, { useState } from 'react';\r\n-import axios from 'axios';\r\n-\r\n-const Form = ({ setPlan }) => {\r\n-  // Estados para todos los campos del formulario básico\r\n-  const [weight, setWeight] = useState('');\r\n-  const [height, setHeight] = useState('');\r\n-  const [age, setAge] = useState('');\r\n-  const [gender, setGender] = useState('');\r\n-  const [activityLevel, setActivityLevel] = useState('');\r\n-  const [dietaryRestrictions, setDietaryRestrictions] = useState([]);\r\n-  const [dislikedFoods, setDislikedFoods] = useState('');\r\n-  const [trainingPreference, setTrainingPreference] = useState([]);\r\n-  const [fitnessGoals, setFitnessGoals] = useState([]);\r\n-\r\n-  // Estados para datos avanzados y dispositivos inteligentes\r\n-  const [advanced, setAdvanced] = useState(false);\r\n-  const [bodyFat, setBodyFat] = useState('');\r\n-  const [muscleMass, setMuscleMass] = useState('');\r\n-  const [heartRate, setHeartRate] = useState('');\r\n-  const [steps, setSteps] = useState('');\r\n-  const [smartDevice, setSmartDevice] = useState(false);\r\n-\r\n-  const [step, setStep] = useState(0);\r\n-  const [errors, setErrors] = useState({}); // Estado de errores\r\n-\r\n-  const validateForm = () => {\r\n-    const newErrors = {};\r\n-  \r\n-    // Validación para el peso\r\n-    if (!weight || isNaN(weight) || weight < 20 || weight > 500) {\r\n-      newErrors.weight = 'El peso debe estar entre 20 kg y 500 kg';\r\n-    }\r\n-  \r\n-    // Validación para la altura\r\n-    if (!height || isNaN(height) || height < 50 || height > 300) {\r\n-      newErrors.height = 'La altura debe estar entre 50 cm y 300 cm';\r\n-    }\r\n-  \r\n-    // Validación para la edad\r\n-    if (!age || isNaN(age) || age < 10 || age > 120) {\r\n-      newErrors.age = 'La edad debe estar entre 10 y 120 años';\r\n-    }\r\n-  \r\n-    // Validación para el género\r\n-    if (!gender) {\r\n-      newErrors.gender = 'Selecciona un género';\r\n-    }\r\n-  \r\n-    // Validación para el nivel de actividad\r\n-    if (!activityLevel) {\r\n-      newErrors.activityLevel = 'Selecciona un nivel de actividad';\r\n-    }\r\n-  \r\n-    // Validación para los objetivos de fitness\r\n-    if (fitnessGoals.length === 0) {\r\n-      newErrors.fitnessGoals = 'Selecciona al menos un objetivo de fitness';\r\n-    }\r\n-  \r\n-    setErrors(newErrors);\r\n-    return Object.keys(newErrors).length === 0;\r\n-  };\r\n-  \r\n-\r\n-  const handleSubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    if (validateForm()) {\r\n-        const userData = {\r\n-        weight: parseFloat(weight),\r\n-        height: parseFloat(height),\r\n-        age: parseInt(age),\r\n-        gender,\r\n-        activity_level: activityLevel,\r\n-        goals: fitnessGoals,\r\n-        routine_preference: trainingPreference.join(', ') || 'Ninguno',\r\n-        dietary_restrictions: dietaryRestrictions,\r\n-        disliked_foods: dislikedFoods,\r\n-        ...(advanced && { body_fat: parseFloat(bodyFat), muscle_mass: parseFloat(muscleMass) }),\r\n-        ...(smartDevice && { heart_rate: parseFloat(heartRate), steps: parseInt(steps) })\r\n-      };\r\n-\r\n-      try {\r\n-        const response = await axios.post('http://localhost:8000/generate_plan/', userData);\r\n-        setPlan(response.data);\r\n-        setHasPlan(true); // Actualiza hasPlan a true\r\n-    } catch (error) {\r\n-        console.error('Error al obtener el plan:', error);\r\n-    }\r\n-}\r\n-};\r\n-\r\n-  const handleCheckboxChange = (setState, value, state) => {\r\n-    if (state.includes(value)) {\r\n-      setState(state.filter((item) => item !== value));\r\n-    } else {\r\n-      setState([...state, value]);\r\n-    }\r\n-  };\r\n-\r\n-  const nextStep = () => setStep((prevStep) => Math.min(prevStep + 1, 5));\r\n-  const prevStep = () => setStep((prevStep) => Math.max(prevStep - 1, 0));\r\n-\r\n-  return (\r\n-    <div className=\"flex flex-col items-center min-h-screen bg-white font-['Noto_Sans', 'Work_Sans', sans-serif]\">\r\n-      <form onSubmit={handleSubmit} className=\"w-[512px] max-w-full p-8 bg-white rounded-lg shadow-md\">\r\n-\r\n-        {/* Paso 0: Datos Personales */}\r\n-        {step === 0 && (\r\n-          <div>\r\n-            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Datos Personales</h3>\r\n-            <div className=\"px-4 py-3\">\r\n-              <label className=\"block pb-2\">\r\n-                <span className=\"text-base font-medium text-[#111418]\">Peso (kg)</span>\r\n-                <input\r\n-                  type=\"number\"\r\n-                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n-                  value={weight}\r\n-                  onChange={(e) => setWeight(e.target.value)}\r\n-                  required\r\n-                />\r\n-                {errors.weight && <p style={{ color: 'red' }}>{errors.weight}</p>}\r\n-              </label>\r\n-            </div>\r\n-            <div className=\"px-4 py-3\">\r\n-              <label className=\"block pb-2\">\r\n-                <span className=\"text-base font-medium text-[#111418]\">Altura (cm)</span>\r\n-                <input\r\n-                  type=\"number\"\r\n-                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n-                  value={height}\r\n-                  onChange={(e) => setHeight(e.target.value)}\r\n-                  required\r\n-                />\r\n-                {errors.height && <p style={{ color: 'red' }}>{errors.height}</p>}\r\n-              </label>\r\n-            </div>\r\n-            <div className=\"px-4 py-3\">\r\n-              <label className=\"block pb-2\">\r\n-                <span className=\"text-base font-medium text-[#111418]\">Edad</span>\r\n-                <input\r\n-                  type=\"number\"\r\n-                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n-                  value={age}\r\n-                  onChange={(e) => setAge(e.target.value)}\r\n-                  required\r\n-                />\r\n-                {errors.age && <p style={{ color: 'red' }}>{errors.age}</p>}\r\n-              </label>\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-\r\n-        {/* Paso 1: Información adicional */}\r\n-        {step === 1 && (\r\n-          <div>\r\n-            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Información adicional</h3>\r\n-            <div className=\"px-4 py-3\">\r\n-              <label className=\"block pb-2\">\r\n-                <span className=\"text-base font-medium text-[#111418]\">Sexo</span>\r\n-                <select\r\n-                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n-                  value={gender}\r\n-                  onChange={(e) => setGender(e.target.value)}\r\n-                  required\r\n-                >\r\n-                  <option value=\"\">Seleccionar</option>\r\n-                  <option value=\"male\">Hombre</option>\r\n-                  <option value=\"female\">Mujer</option>\r\n-                </select>\r\n-                {errors.gender && <p style={{ color: 'red' }}>{errors.gender}</p>}\r\n-              </label>\r\n-            </div>\r\n-            <div className=\"px-4 py-3\">\r\n-              <label className=\"block pb-2\">\r\n-                <span className=\"text-base font-medium text-[#111418]\">Nivel de actividad</span>\r\n-                <select\r\n-                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n-                  value={activityLevel}\r\n-                  onChange={(e) => setActivityLevel(e.target.value)}\r\n-                  required\r\n-                >\r\n-                  <option value=\"\">Seleccionar</option>\r\n-                  <option value=\"sedentary\">Sedentario</option>\r\n-                  <option value=\"lightly_active\">Ligeramente activo</option>\r\n-                  <option value=\"moderately_active\">Moderadamente activo</option>\r\n-                  <option value=\"very_active\">Muy activo</option>\r\n-                  <option value=\"super_active\">Súper activo</option>\r\n-                </select>\r\n-                {errors.activityLevel && <p style={{ color: 'red' }}>{errors.activityLevel}</p>}\r\n-              </label>\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-\r\n-        {/* Paso 2: Datos avanzados y dispositivos */}\r\n-        {step === 2 && (\r\n-          <div>\r\n-            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Datos avanzados y dispositivos</h3>\r\n-            <label className=\"block pb-2\">\r\n-              <input type=\"checkbox\" checked={advanced} onChange={(e) => setAdvanced(e.target.checked)} />\r\n-              <span className=\"ml-2\">Proveer datos avanzados</span>\r\n-            </label>\r\n-\r\n-            {advanced && (\r\n-              <div>\r\n-                <div className=\"px-4 py-3\">\r\n-                  <label className=\"block pb-2\">\r\n-                    <span className=\"text-base font-medium text-[#111418]\">Porcentaje de grasa corporal (%)</span>\r\n-                    <input\r\n-                      type=\"number\"\r\n-                      className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n-                      value={bodyFat}\r\n-                      onChange={(e) => setBodyFat(e.target.value)}\r\n-                    />\r\n-                  </label>\r\n-                </div>\r\n-                <div className=\"px-4 py-3\">\r\n-                  <label className=\"block pb-2\">\r\n-                    <span className=\"text-base font-medium text-[#111418]\">Masa muscular (kg)</span>\r\n-                    <input\r\n-                      type=\"number\"\r\n-                      className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n-                      value={muscleMass}\r\n-                      onChange={(e) => setMuscleMass(e.target.value)}\r\n-                    />\r\n-                  </label>\r\n-                </div>\r\n-              </div>\r\n-            )}\r\n-\r\n-            <label className=\"block mt-4\">\r\n-              <input\r\n-                type=\"checkbox\"\r\n-                checked={smartDevice}\r\n-                onChange={(e) => setSmartDevice(e.target.checked)}\r\n-              />\r\n-              <span className=\"ml-2\">Sincronizar con un dispositivo inteligente</span>\r\n-            </label>\r\n-\r\n-            {smartDevice && (\r\n-              <div className=\"mt-4\">\r\n-                <div className=\"px-4 py-3\">\r\n-                  <label className=\"block pb-2\">\r\n-                    <span className=\"text-base font-medium text-[#111418]\">Frecuencia cardíaca en reposo (BPM)</span>\r\n-                    <input\r\n-                      type=\"number\"\r\n-                      className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n-                      value={heartRate}\r\n-                      onChange={(e) => setHeartRate(e.target.value)}\r\n-                    />\r\n-                  </label>\r\n-                </div>\r\n-                <div className=\"px-4 py-3\">\r\n-                  <label className=\"block pb-2\">\r\n-                    <span className=\"text-base font-medium text-[#111418]\">Pasos diarios</span>\r\n-                    <input\r\n-                      type=\"number\"\r\n-                      className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n-                      value={steps}\r\n-                      onChange={(e) => setSteps(e.target.value)}\r\n-                    />\r\n-                  </label>\r\n-                </div>\r\n-              </div>\r\n-            )}\r\n-          </div>\r\n-        )}\r\n-\r\n-        {/* Paso 3: Preferencias alimenticias */}\r\n-        {step === 3 && (\r\n-          <div>\r\n-            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Preferencias alimenticias</h3>\r\n-            <div className=\"flex gap-3 p-3 flex-wrap\">\r\n-              {['Sin restricciones', 'Vegetariano', 'Vegano', 'Sin gluten', 'Sin lactosa', 'Sin nueces', 'Dieta cetogénica'].map((preference) => (\r\n-                <div\r\n-                  key={preference}\r\n-                  onClick={() => handleCheckboxChange(setDietaryRestrictions, preference, dietaryRestrictions)}\r\n-                  className={`cursor-pointer flex h-8 items-center justify-center gap-x-2 rounded-xl px-4 ${\r\n-                    dietaryRestrictions.includes(preference) ? 'bg-[#1980e6] text-white' : 'bg-[#f0f2f4] text-[#111418]'\r\n-                  }`}\r\n-                >\r\n-                  <p className=\"text-sm font-medium\">{preference}</p>\r\n-                </div>\r\n-              ))}\r\n-            </div>\r\n-            <div className=\"px-4 py-3 mt-4\">\r\n-              <label className=\"block pb-2\">\r\n-                <span className=\"text-base font-medium text-[#111418]\">Alimentos que prefieres evitar</span>\r\n-                <input\r\n-                  type=\"text\"\r\n-                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n-                  placeholder=\"Ej. Brócoli, pescado\"\r\n-                  value={dislikedFoods}\r\n-                  onChange={(e) => setDislikedFoods(e.target.value)}\r\n-                />\r\n-              </label>\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-\r\n-        {/* Paso 4: Tipo de entrenamiento */}\r\n-        {step === 4 && (\r\n-          <div>\r\n-            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Tipo de entrenamiento</h3>\r\n-            <div className=\"flex gap-3 p-3 flex-wrap\">\r\n-              {['Ejercicio en casa', 'Ejercicio al aire libre', 'Ejercicio en el gimnasio', 'Ninguno', 'No estoy seguro'].map((preference) => (\r\n-                <div\r\n-                  key={preference}\r\n-                  onClick={() => handleCheckboxChange(setTrainingPreference, preference, trainingPreference)}\r\n-                  className={`cursor-pointer flex h-8 items-center justify-center gap-x-2 rounded-xl px-4 ${\r\n-                    trainingPreference.includes(preference) ? 'bg-[#1980e6] text-white' : 'bg-[#f0f2f4] text-[#111418]'\r\n-                  }`}\r\n-                >\r\n-                  <p className=\"text-sm font-medium\">{preference}</p>\r\n-                </div>\r\n-              ))}\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-\r\n-        {/* Paso 5: Objetivos de Fitness */}\r\n-        {step === 5 && (\r\n-          <div>\r\n-            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Objetivos de Fitness</h3>\r\n-            <div className=\"flex gap-3 p-3 flex-wrap\">\r\n-              {['Perder peso', 'Ganar masa muscular', 'Mejorar la salud', 'Mejorar el rendimiento'].map((goal) => (\r\n-                <div\r\n-                  key={goal}\r\n-                  onClick={() => handleCheckboxChange(setFitnessGoals, goal, fitnessGoals)}\r\n-                  className={`cursor-pointer flex h-8 items-center justify-center gap-x-2 rounded-xl px-4 ${\r\n-                    fitnessGoals.includes(goal) ? 'bg-[#1980e6] text-white' : 'bg-[#f0f2f4] text-[#111418]'\r\n-                  }`}\r\n-                >\r\n-                  <p className=\"text-sm font-medium\">{goal}</p>\r\n-                </div>\r\n-              ))}\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-\r\n-        {/* Botones de navegación */}\r\n-        <div className=\"flex justify-between mt-6\">\r\n-          {step > 0 && (\r\n-            <button\r\n-              type=\"button\"\r\n-              className=\"bg-gray-300 text-gray-800 font-bold py-2 px-4 rounded\"\r\n-              onClick={prevStep}\r\n-            >\r\n-              Anterior\r\n-            </button>\r\n-          )}\r\n-          {step < 5 ? (\r\n-            <button\r\n-              type=\"button\"\r\n-              className=\"bg-blue-500 text-white font-bold py-2 px-4 rounded\"\r\n-              onClick={nextStep}\r\n-            >\r\n-              Siguiente\r\n-            </button>\r\n-          ) : (\r\n-            <button\r\n-              type=\"submit\"\r\n-              className=\"bg-green-500 text-white font-bold py-2 px-4 rounded\"\r\n-            >\r\n-              Finalizar\r\n-            </button>\r\n-          )}\r\n-        </div>\r\n-      </form>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default Form;\r\n-import React, { useState } from 'react';\r\n-import axios from 'axios';\r\n-\r\n-const Form = ({ setPlan }) => {\r\n-  // Estados para todos los campos del formulario básico\r\n-  const [weight, setWeight] = useState('');\r\n-  const [height, setHeight] = useState('');\r\n-  const [age, setAge] = useState('');\r\n-  const [gender, setGender] = useState('');\r\n-  const [activityLevel, setActivityLevel] = useState('');\r\n-  const [dietaryRestrictions, setDietaryRestrictions] = useState([]);\r\n-  const [dislikedFoods, setDislikedFoods] = useState('');\r\n-  const [trainingPreference, setTrainingPreference] = useState([]);\r\n-  const [fitnessGoals, setFitnessGoals] = useState([]);\r\n-\r\n-  // Estados para datos avanzados y dispositivos inteligentes\r\n-  const [advanced, setAdvanced] = useState(false);\r\n-  const [bodyFat, setBodyFat] = useState('');\r\n-  const [muscleMass, setMuscleMass] = useState('');\r\n-  const [heartRate, setHeartRate] = useState('');\r\n-  const [steps, setSteps] = useState('');\r\n-  const [smartDevice, setSmartDevice] = useState(false);\r\n-\r\n-  const [step, setStep] = useState(0);\r\n-  const [errors, setErrors] = useState({}); // Estado de errores\r\n-\r\n-  const validateForm = () => {\r\n-    const newErrors = {};\r\n-  \r\n-    // Validación para el peso\r\n-    if (!weight || isNaN(weight) || weight < 20 || weight > 500) {\r\n-      newErrors.weight = 'El peso debe estar entre 20 kg y 500 kg';\r\n-    }\r\n-  \r\n-    // Validación para la altura\r\n-    if (!height || isNaN(height) || height < 50 || height > 300) {\r\n-      newErrors.height = 'La altura debe estar entre 50 cm y 300 cm';\r\n-    }\r\n-  \r\n-    // Validación para la edad\r\n-    if (!age || isNaN(age) || age < 10 || age > 120) {\r\n-      newErrors.age = 'La edad debe estar entre 10 y 120 años';\r\n-    }\r\n-  \r\n-    // Validación para el género\r\n-    if (!gender) {\r\n-      newErrors.gender = 'Selecciona un género';\r\n-    }\r\n-  \r\n-    // Validación para el nivel de actividad\r\n-    if (!activityLevel) {\r\n-      newErrors.activityLevel = 'Selecciona un nivel de actividad';\r\n-    }\r\n-  \r\n-    // Validación para los objetivos de fitness\r\n-    if (fitnessGoals.length === 0) {\r\n-      newErrors.fitnessGoals = 'Selecciona al menos un objetivo de fitness';\r\n-    }\r\n-  \r\n-    setErrors(newErrors);\r\n-    return Object.keys(newErrors).length === 0;\r\n-  };\r\n-  \r\n-\r\n-  const handleSubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    if (validateForm()) {\r\n-      const userData = {\r\n-        weight: parseFloat(weight),\r\n-        height: parseFloat(height),\r\n-        age: parseInt(age),\r\n-        gender,\r\n-        activity_level: activityLevel,\r\n-        goals: fitnessGoals,\r\n-        routine_preference: trainingPreference.join(', ') || 'Ninguno',\r\n-        dietary_restrictions: dietaryRestrictions,\r\n-        disliked_foods: dislikedFoods,\r\n-        ...(advanced && { body_fat: parseFloat(bodyFat), muscle_mass: parseFloat(muscleMass) }),\r\n-        ...(smartDevice && { heart_rate: parseFloat(heartRate), steps: parseInt(steps) })\r\n-      };\r\n-\r\n-      try {\r\n-        const response = await axios.post('http://localhost:8000/generate_plan/', userData);\r\n-        setPlan(response.data);\r\n-        setHasPlan(true); // Actualiza hasPlan a true\r\n-    } catch (error) {\r\n-        console.error('Error al obtener el plan:', error);\r\n-    }\r\n-}\r\n-};\r\n-\r\n-  const handleCheckboxChange = (setState, value, state) => {\r\n-    if (state.includes(value)) {\r\n-      setState(state.filter((item) => item !== value));\r\n-    } else {\r\n-      setState([...state, value]);\r\n-    }\r\n-  };\r\n-\r\n-  const nextStep = () => setStep((prevStep) => Math.min(prevStep + 1, 5));\r\n-  const prevStep = () => setStep((prevStep) => Math.max(prevStep - 1, 0));\r\n-\r\n-  return (\r\n-    <div className=\"flex flex-col items-center min-h-screen bg-white font-['Noto_Sans', 'Work_Sans', sans-serif]\">\r\n-      <form onSubmit={handleSubmit} className=\"w-[512px] max-w-full p-8 bg-white rounded-lg shadow-md\">\r\n-\r\n-        {/* Paso 0: Datos Personales */}\r\n-        {step === 0 && (\r\n-          <div>\r\n-            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Datos Personales</h3>\r\n-            <div className=\"px-4 py-3\">\r\n-              <label className=\"block pb-2\">\r\n-                <span className=\"text-base font-medium text-[#111418]\">Peso (kg)</span>\r\n-                <input\r\n-                  type=\"number\"\r\n-                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n-                  value={weight}\r\n-                  onChange={(e) => setWeight(e.target.value)}\r\n-                  required\r\n-                />\r\n-                {errors.weight && <p style={{ color: 'red' }}>{errors.weight}</p>}\r\n-              </label>\r\n-            </div>\r\n-            <div className=\"px-4 py-3\">\r\n-              <label className=\"block pb-2\">\r\n-                <span className=\"text-base font-medium text-[#111418]\">Altura (cm)</span>\r\n-                <input\r\n-                  type=\"number\"\r\n-                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n-                  value={height}\r\n-                  onChange={(e) => setHeight(e.target.value)}\r\n-                  required\r\n-                />\r\n-                {errors.height && <p style={{ color: 'red' }}>{errors.height}</p>}\r\n-              </label>\r\n-            </div>\r\n-            <div className=\"px-4 py-3\">\r\n-              <label className=\"block pb-2\">\r\n-                <span className=\"text-base font-medium text-[#111418]\">Edad</span>\r\n-                <input\r\n-                  type=\"number\"\r\n-                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n-                  value={age}\r\n-                  onChange={(e) => setAge(e.target.value)}\r\n-                  required\r\n-                />\r\n-                {errors.age && <p style={{ color: 'red' }}>{errors.age}</p>}\r\n-              </label>\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-\r\n-        {/* Paso 1: Información adicional */}\r\n-        {step === 1 && (\r\n-          <div>\r\n-            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Información adicional</h3>\r\n-            <div className=\"px-4 py-3\">\r\n-              <label className=\"block pb-2\">\r\n-                <span className=\"text-base font-medium text-[#111418]\">Sexo</span>\r\n-                <select\r\n-                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n-                  value={gender}\r\n-                  onChange={(e) => setGender(e.target.value)}\r\n-                  required\r\n-                >\r\n-                  <option value=\"\">Seleccionar</option>\r\n-                  <option value=\"male\">Hombre</option>\r\n-                  <option value=\"female\">Mujer</option>\r\n-                </select>\r\n-                {errors.gender && <p style={{ color: 'red' }}>{errors.gender}</p>}\r\n-              </label>\r\n-            </div>\r\n-            <div className=\"px-4 py-3\">\r\n-              <label className=\"block pb-2\">\r\n-                <span className=\"text-base font-medium text-[#111418]\">Nivel de actividad</span>\r\n-                <select\r\n-                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n-                  value={activityLevel}\r\n-                  onChange={(e) => setActivityLevel(e.target.value)}\r\n-                  required\r\n-                >\r\n-                  <option value=\"\">Seleccionar</option>\r\n-                  <option value=\"sedentary\">Sedentario</option>\r\n-                  <option value=\"lightly_active\">Ligeramente activo</option>\r\n-                  <option value=\"moderately_active\">Moderadamente activo</option>\r\n-                  <option value=\"very_active\">Muy activo</option>\r\n-                  <option value=\"super_active\">Súper activo</option>\r\n-                </select>\r\n-                {errors.activityLevel && <p style={{ color: 'red' }}>{errors.activityLevel}</p>}\r\n-              </label>\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-\r\n-        {/* Paso 2: Datos avanzados y dispositivos */}\r\n-        {step === 2 && (\r\n-          <div>\r\n-            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Datos avanzados y dispositivos</h3>\r\n-            <label className=\"block pb-2\">\r\n-              <input type=\"checkbox\" checked={advanced} onChange={(e) => setAdvanced(e.target.checked)} />\r\n-              <span className=\"ml-2\">Proveer datos avanzados</span>\r\n-            </label>\r\n-\r\n-            {advanced && (\r\n-              <div>\r\n-                <div className=\"px-4 py-3\">\r\n-                  <label className=\"block pb-2\">\r\n-                    <span className=\"text-base font-medium text-[#111418]\">Porcentaje de grasa corporal (%)</span>\r\n-                    <input\r\n-                      type=\"number\"\r\n-                      className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n-                      value={bodyFat}\r\n-                      onChange={(e) => setBodyFat(e.target.value)}\r\n-                    />\r\n-                  </label>\r\n-                </div>\r\n-                <div className=\"px-4 py-3\">\r\n-                  <label className=\"block pb-2\">\r\n-                    <span className=\"text-base font-medium text-[#111418]\">Masa muscular (kg)</span>\r\n-                    <input\r\n-                      type=\"number\"\r\n-                      className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n-                      value={muscleMass}\r\n-                      onChange={(e) => setMuscleMass(e.target.value)}\r\n-                    />\r\n-                  </label>\r\n-                </div>\r\n-              </div>\r\n-            )}\r\n-\r\n-            <label className=\"block mt-4\">\r\n-              <input\r\n-                type=\"checkbox\"\r\n-                checked={smartDevice}\r\n-                onChange={(e) => setSmartDevice(e.target.checked)}\r\n-              />\r\n-              <span className=\"ml-2\">Sincronizar con un dispositivo inteligente</span>\r\n-            </label>\r\n-\r\n-            {smartDevice && (\r\n-              <div className=\"mt-4\">\r\n-                <div className=\"px-4 py-3\">\r\n-                  <label className=\"block pb-2\">\r\n-                    <span className=\"text-base font-medium text-[#111418]\">Frecuencia cardíaca en reposo (BPM)</span>\r\n-                    <input\r\n-                      type=\"number\"\r\n-                      className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n-                      value={heartRate}\r\n-                      onChange={(e) => setHeartRate(e.target.value)}\r\n-                    />\r\n-                  </label>\r\n-                </div>\r\n-                <div className=\"px-4 py-3\">\r\n-                  <label className=\"block pb-2\">\r\n-                    <span className=\"text-base font-medium text-[#111418]\">Pasos diarios</span>\r\n-                    <input\r\n-                      type=\"number\"\r\n-                      className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n-                      value={steps}\r\n-                      onChange={(e) => setSteps(e.target.value)}\r\n-                    />\r\n-                  </label>\r\n-                </div>\r\n-              </div>\r\n-            )}\r\n-          </div>\r\n-        )}\r\n-\r\n-        {/* Paso 3: Preferencias alimenticias */}\r\n-        {step === 3 && (\r\n-          <div>\r\n-            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Preferencias alimenticias</h3>\r\n-            <div className=\"flex gap-3 p-3 flex-wrap\">\r\n-              {['Sin restricciones', 'Vegetariano', 'Vegano', 'Sin gluten', 'Sin lactosa', 'Sin nueces', 'Dieta cetogénica'].map((preference) => (\r\n-                <div\r\n-                  key={preference}\r\n-                  onClick={() => handleCheckboxChange(setDietaryRestrictions, preference, dietaryRestrictions)}\r\n-                  className={`cursor-pointer flex h-8 items-center justify-center gap-x-2 rounded-xl px-4 ${\r\n-                    dietaryRestrictions.includes(preference) ? 'bg-[#1980e6] text-white' : 'bg-[#f0f2f4] text-[#111418]'\r\n-                  }`}\r\n-                >\r\n-                  <p className=\"text-sm font-medium\">{preference}</p>\r\n-                </div>\r\n-              ))}\r\n-            </div>\r\n-            <div className=\"px-4 py-3 mt-4\">\r\n-              <label className=\"block pb-2\">\r\n-                <span className=\"text-base font-medium text-[#111418]\">Alimentos que prefieres evitar</span>\r\n-                <input\r\n-                  type=\"text\"\r\n-                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n-                  placeholder=\"Ej. Brócoli, pescado\"\r\n-                  value={dislikedFoods}\r\n-                  onChange={(e) => setDislikedFoods(e.target.value)}\r\n-                />\r\n-              </label>\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-\r\n-        {/* Paso 4: Tipo de entrenamiento */}\r\n-        {step === 4 && (\r\n-          <div>\r\n-            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Tipo de entrenamiento</h3>\r\n-            <div className=\"flex gap-3 p-3 flex-wrap\">\r\n-              {['Ejercicio en casa', 'Ejercicio al aire libre', 'Ejercicio en el gimnasio', 'Ninguno', 'No estoy seguro'].map((preference) => (\r\n-                <div\r\n-                  key={preference}\r\n-                  onClick={() => handleCheckboxChange(setTrainingPreference, preference, trainingPreference)}\r\n-                  className={`cursor-pointer flex h-8 items-center justify-center gap-x-2 rounded-xl px-4 ${\r\n-                    trainingPreference.includes(preference) ? 'bg-[#1980e6] text-white' : 'bg-[#f0f2f4] text-[#111418]'\r\n-                  }`}\r\n-                >\r\n-                  <p className=\"text-sm font-medium\">{preference}</p>\r\n-                </div>\r\n-              ))}\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-\r\n-        {/* Paso 5: Objetivos de Fitness */}\r\n-        {step === 5 && (\r\n-          <div>\r\n-            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Objetivos de Fitness</h3>\r\n-            <div className=\"flex gap-3 p-3 flex-wrap\">\r\n-              {['Perder peso', 'Ganar masa muscular', 'Mejorar la salud', 'Mejorar el rendimiento'].map((goal) => (\r\n-                <div\r\n-                  key={goal}\r\n-                  onClick={() => handleCheckboxChange(setFitnessGoals, goal, fitnessGoals)}\r\n-                  className={`cursor-pointer flex h-8 items-center justify-center gap-x-2 rounded-xl px-4 ${\r\n-                    fitnessGoals.includes(goal) ? 'bg-[#1980e6] text-white' : 'bg-[#f0f2f4] text-[#111418]'\r\n-                  }`}\r\n-                >\r\n-                  <p className=\"text-sm font-medium\">{goal}</p>\r\n-                </div>\r\n-              ))}\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-\r\n-        {/* Botones de navegación */}\r\n-        <div className=\"flex justify-between mt-6\">\r\n-          {step > 0 && (\r\n-            <button\r\n-              type=\"button\"\r\n-              className=\"bg-gray-300 text-gray-800 font-bold py-2 px-4 rounded\"\r\n-              onClick={prevStep}\r\n-            >\r\n-              Anterior\r\n-            </button>\r\n-          )}\r\n-          {step < 5 ? (\r\n-            <button\r\n-              type=\"button\"\r\n-              className=\"bg-blue-500 text-white font-bold py-2 px-4 rounded\"\r\n-              onClick={nextStep}\r\n-            >\r\n-              Siguiente\r\n-            </button>\r\n-          ) : (\r\n-            <button\r\n-              type=\"submit\"\r\n-              className=\"bg-green-500 text-white font-bold py-2 px-4 rounded\"\r\n-            >\r\n-              Finalizar\r\n-            </button>\r\n-          )}\r\n-        </div>\r\n-      </form>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default Form;\r\n-import React, { useState } from 'react';\r\n-import axios from 'axios';\r\n-\r\n-const Form = ({ setPlan }) => {\r\n-  // Estados para todos los campos del formulario básico\r\n-  const [weight, setWeight] = useState('');\r\n-  const [height, setHeight] = useState('');\r\n-  const [age, setAge] = useState('');\r\n-  const [gender, setGender] = useState('');\r\n-  const [activityLevel, setActivityLevel] = useState('');\r\n-  const [dietaryRestrictions, setDietaryRestrictions] = useState([]);\r\n-  const [dislikedFoods, setDislikedFoods] = useState('');\r\n-  const [trainingPreference, setTrainingPreference] = useState([]);\r\n-  const [fitnessGoals, setFitnessGoals] = useState([]);\r\n-\r\n-  // Estados para datos avanzados y dispositivos inteligentes\r\n-  const [advanced, setAdvanced] = useState(false);\r\n-  const [bodyFat, setBodyFat] = useState('');\r\n-  const [muscleMass, setMuscleMass] = useState('');\r\n-  const [heartRate, setHeartRate] = useState('');\r\n-  const [steps, setSteps] = useState('');\r\n-  const [smartDevice, setSmartDevice] = useState(false);\r\n-\r\n-  const [step, setStep] = useState(0);\r\n-  const [errors, setErrors] = useState({}); // Estado de errores\r\n-\r\n-  const validateForm = () => {\r\n-    const newErrors = {};\r\n-  \r\n-    // Validación para el peso\r\n-    if (!weight || isNaN(weight) || weight < 20 || weight > 500) {\r\n-      newErrors.weight = 'El peso debe estar entre 20 kg y 500 kg';\r\n-    }\r\n-  \r\n-    // Validación para la altura\r\n-    if (!height || isNaN(height) || height < 50 || height > 300) {\r\n-      newErrors.height = 'La altura debe estar entre 50 cm y 300 cm';\r\n-    }\r\n-  \r\n-    // Validación para la edad\r\n-    if (!age || isNaN(age) || age < 10 || age > 120) {\r\n-      newErrors.age = 'La edad debe estar entre 10 y 120 años';\r\n-    }\r\n-  \r\n-    // Validación para el género\r\n-    if (!gender) {\r\n-      newErrors.gender = 'Selecciona un género';\r\n-    }\r\n-  \r\n-    // Validación para el nivel de actividad\r\n-    if (!activityLevel) {\r\n-      newErrors.activityLevel = 'Selecciona un nivel de actividad';\r\n-    }\r\n-  \r\n-    // Validación para los objetivos de fitness\r\n-    if (fitnessGoals.length === 0) {\r\n-      newErrors.fitnessGoals = 'Selecciona al menos un objetivo de fitness';\r\n-    }\r\n-  \r\n-    setErrors(newErrors);\r\n-    return Object.keys(newErrors).length === 0;\r\n-  };\r\n-  \r\n-\r\n-  const handleSubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    if (validateForm()) {\r\n-      const userData = {\r\n-        weight: parseFloat(weight),\r\n-        height: parseFloat(height),\r\n-        age: parseInt(age),\r\n-        gender,\r\n-        activity_level: activityLevel,\r\n-        goals: fitnessGoals,\r\n-        routine_preference: trainingPreference.join(', ') || 'Ninguno',\r\n-        dietary_restrictions: dietaryRestrictions,\r\n-        disliked_foods: dislikedFoods,\r\n-        ...(advanced && { body_fat: parseFloat(bodyFat), muscle_mass: parseFloat(muscleMass) }),\r\n-        ...(smartDevice && { heart_rate: parseFloat(heartRate), steps: parseInt(steps) })\r\n-      };\r\n-\r\n-      try {\r\n-        const response = await axios.post('http://localhost:8000/generate_plan/', userData);\r\n-        setPlan(response.data);\r\n-      } catch (error) {\r\n-        console.error('Error al obtener el plan:', error);\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  const handleCheckboxChange = (setState, value, state) => {\r\n-    if (state.includes(value)) {\r\n-      setState(state.filter((item) => item !== value));\r\n-    } else {\r\n-      setState([...state, value]);\r\n-    }\r\n-  };\r\n-\r\n-  const nextStep = () => setStep((prevStep) => Math.min(prevStep + 1, 5));\r\n-  const prevStep = () => setStep((prevStep) => Math.max(prevStep - 1, 0));\r\n-\r\n-  return (\r\n-    <div className=\"flex flex-col items-center min-h-screen bg-white font-['Noto_Sans', 'Work_Sans', sans-serif]\">\r\n-      <form onSubmit={handleSubmit} className=\"w-[512px] max-w-full p-8 bg-white rounded-lg shadow-md\">\r\n-\r\n-        {/* Paso 0: Datos Personales */}\r\n-        {step === 0 && (\r\n-          <div>\r\n-            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Datos Personales</h3>\r\n-            <div className=\"px-4 py-3\">\r\n-              <label className=\"block pb-2\">\r\n-                <span className=\"text-base font-medium text-[#111418]\">Peso (kg)</span>\r\n-                <input\r\n-                  type=\"number\"\r\n-                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n-                  value={weight}\r\n-                  onChange={(e) => setWeight(e.target.value)}\r\n-                  required\r\n-                />\r\n-                {errors.weight && <p style={{ color: 'red' }}>{errors.weight}</p>}\r\n-              </label>\r\n-            </div>\r\n-            <div className=\"px-4 py-3\">\r\n-              <label className=\"block pb-2\">\r\n-                <span className=\"text-base font-medium text-[#111418]\">Altura (cm)</span>\r\n-                <input\r\n-                  type=\"number\"\r\n-                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n-                  value={height}\r\n-                  onChange={(e) => setHeight(e.target.value)}\r\n-                  required\r\n-                />\r\n-                {errors.height && <p style={{ color: 'red' }}>{errors.height}</p>}\r\n-              </label>\r\n-            </div>\r\n-            <div className=\"px-4 py-3\">\r\n-              <label className=\"block pb-2\">\r\n-                <span className=\"text-base font-medium text-[#111418]\">Edad</span>\r\n-                <input\r\n-                  type=\"number\"\r\n-                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n-                  value={age}\r\n-                  onChange={(e) => setAge(e.target.value)}\r\n-                  required\r\n-                />\r\n-                {errors.age && <p style={{ color: 'red' }}>{errors.age}</p>}\r\n-              </label>\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-\r\n-        {/* Paso 1: Información adicional */}\r\n-        {step === 1 && (\r\n-          <div>\r\n-            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Información adicional</h3>\r\n-            <div className=\"px-4 py-3\">\r\n-              <label className=\"block pb-2\">\r\n-                <span className=\"text-base font-medium text-[#111418]\">Sexo</span>\r\n-                <select\r\n-                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n-                  value={gender}\r\n-                  onChange={(e) => setGender(e.target.value)}\r\n-                  required\r\n-                >\r\n-                  <option value=\"\">Seleccionar</option>\r\n-                  <option value=\"male\">Hombre</option>\r\n-                  <option value=\"female\">Mujer</option>\r\n-                </select>\r\n-                {errors.gender && <p style={{ color: 'red' }}>{errors.gender}</p>}\r\n-              </label>\r\n-            </div>\r\n-            <div className=\"px-4 py-3\">\r\n-              <label className=\"block pb-2\">\r\n-                <span className=\"text-base font-medium text-[#111418]\">Nivel de actividad</span>\r\n-                <select\r\n-                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n-                  value={activityLevel}\r\n-                  onChange={(e) => setActivityLevel(e.target.value)}\r\n-                  required\r\n-                >\r\n-                  <option value=\"\">Seleccionar</option>\r\n-                  <option value=\"sedentary\">Sedentario</option>\r\n-                  <option value=\"lightly_active\">Ligeramente activo</option>\r\n-                  <option value=\"moderately_active\">Moderadamente activo</option>\r\n-                  <option value=\"very_active\">Muy activo</option>\r\n-                  <option value=\"super_active\">Súper activo</option>\r\n-                </select>\r\n-                {errors.activityLevel && <p style={{ color: 'red' }}>{errors.activityLevel}</p>}\r\n-              </label>\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-\r\n-        {/* Paso 2: Datos avanzados y dispositivos */}\r\n-        {step === 2 && (\r\n-          <div>\r\n-            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Datos avanzados y dispositivos</h3>\r\n-            <label className=\"block pb-2\">\r\n-              <input type=\"checkbox\" checked={advanced} onChange={(e) => setAdvanced(e.target.checked)} />\r\n-              <span className=\"ml-2\">Proveer datos avanzados</span>\r\n-            </label>\r\n-\r\n-            {advanced && (\r\n-              <div>\r\n-                <div className=\"px-4 py-3\">\r\n-                  <label className=\"block pb-2\">\r\n-                    <span className=\"text-base font-medium text-[#111418]\">Porcentaje de grasa corporal (%)</span>\r\n-                    <input\r\n-                      type=\"number\"\r\n-                      className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n-                      value={bodyFat}\r\n-                      onChange={(e) => setBodyFat(e.target.value)}\r\n-                    />\r\n-                  </label>\r\n-                </div>\r\n-                <div className=\"px-4 py-3\">\r\n-                  <label className=\"block pb-2\">\r\n-                    <span className=\"text-base font-medium text-[#111418]\">Masa muscular (kg)</span>\r\n-                    <input\r\n-                      type=\"number\"\r\n-                      className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n-                      value={muscleMass}\r\n-                      onChange={(e) => setMuscleMass(e.target.value)}\r\n-                    />\r\n-                  </label>\r\n-                </div>\r\n-              </div>\r\n-            )}\r\n-\r\n-            <label className=\"block mt-4\">\r\n-              <input\r\n-                type=\"checkbox\"\r\n-                checked={smartDevice}\r\n-                onChange={(e) => setSmartDevice(e.target.checked)}\r\n-              />\r\n-              <span className=\"ml-2\">Sincronizar con un dispositivo inteligente</span>\r\n-            </label>\r\n-\r\n-            {smartDevice && (\r\n-              <div className=\"mt-4\">\r\n-                <div className=\"px-4 py-3\">\r\n-                  <label className=\"block pb-2\">\r\n-                    <span className=\"text-base font-medium text-[#111418]\">Frecuencia cardíaca en reposo (BPM)</span>\r\n-                    <input\r\n-                      type=\"number\"\r\n-                      className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n-                      value={heartRate}\r\n-                      onChange={(e) => setHeartRate(e.target.value)}\r\n-                    />\r\n-                  </label>\r\n-                </div>\r\n-                <div className=\"px-4 py-3\">\r\n-                  <label className=\"block pb-2\">\r\n-                    <span className=\"text-base font-medium text-[#111418]\">Pasos diarios</span>\r\n-                    <input\r\n-                      type=\"number\"\r\n-                      className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n-                      value={steps}\r\n-                      onChange={(e) => setSteps(e.target.value)}\r\n-                    />\r\n-                  </label>\r\n-                </div>\r\n-              </div>\r\n-            )}\r\n-          </div>\r\n-        )}\r\n-\r\n-        {/* Paso 3: Preferencias alimenticias */}\r\n-        {step === 3 && (\r\n-          <div>\r\n-            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Preferencias alimenticias</h3>\r\n-            <div className=\"flex gap-3 p-3 flex-wrap\">\r\n-              {['Sin restricciones', 'Vegetariano', 'Vegano', 'Sin gluten', 'Sin lactosa', 'Sin nueces', 'Dieta cetogénica'].map((preference) => (\r\n-                <div\r\n-                  key={preference}\r\n-                  onClick={() => handleCheckboxChange(setDietaryRestrictions, preference, dietaryRestrictions)}\r\n-                  className={`cursor-pointer flex h-8 items-center justify-center gap-x-2 rounded-xl px-4 ${\r\n-                    dietaryRestrictions.includes(preference) ? 'bg-[#1980e6] text-white' : 'bg-[#f0f2f4] text-[#111418]'\r\n-                  }`}\r\n-                >\r\n-                  <p className=\"text-sm font-medium\">{preference}</p>\r\n-                </div>\r\n-              ))}\r\n-            </div>\r\n-            <div className=\"px-4 py-3 mt-4\">\r\n-              <label className=\"block pb-2\">\r\n-                <span className=\"text-base font-medium text-[#111418]\">Alimentos que prefieres evitar</span>\r\n-                <input\r\n-                  type=\"text\"\r\n-                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n-                  placeholder=\"Ej. Brócoli, pescado\"\r\n-                  value={dislikedFoods}\r\n-                  onChange={(e) => setDislikedFoods(e.target.value)}\r\n-                />\r\n-              </label>\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-\r\n-        {/* Paso 4: Tipo de entrenamiento */}\r\n-        {step === 4 && (\r\n-          <div>\r\n-            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Tipo de entrenamiento</h3>\r\n-            <div className=\"flex gap-3 p-3 flex-wrap\">\r\n-              {['Ejercicio en casa', 'Ejercicio al aire libre', 'Ejercicio en el gimnasio', 'Ninguno', 'No estoy seguro'].map((preference) => (\r\n-                <div\r\n-                  key={preference}\r\n-                  onClick={() => handleCheckboxChange(setTrainingPreference, preference, trainingPreference)}\r\n-                  className={`cursor-pointer flex h-8 items-center justify-center gap-x-2 rounded-xl px-4 ${\r\n-                    trainingPreference.includes(preference) ? 'bg-[#1980e6] text-white' : 'bg-[#f0f2f4] text-[#111418]'\r\n-                  }`}\r\n-                >\r\n-                  <p className=\"text-sm font-medium\">{preference}</p>\r\n-                </div>\r\n-              ))}\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-\r\n-        {/* Paso 5: Objetivos de Fitness */}\r\n-        {step === 5 && (\r\n-          <div>\r\n-            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Objetivos de Fitness</h3>\r\n-            <div className=\"flex gap-3 p-3 flex-wrap\">\r\n-              {['Perder peso', 'Ganar masa muscular', 'Mejorar la salud', 'Mejorar el rendimiento'].map((goal) => (\r\n-                <div\r\n-                  key={goal}\r\n-                  onClick={() => handleCheckboxChange(setFitnessGoals, goal, fitnessGoals)}\r\n-                  className={`cursor-pointer flex h-8 items-center justify-center gap-x-2 rounded-xl px-4 ${\r\n-                    fitnessGoals.includes(goal) ? 'bg-[#1980e6] text-white' : 'bg-[#f0f2f4] text-[#111418]'\r\n-                  }`}\r\n-                >\r\n-                  <p className=\"text-sm font-medium\">{goal}</p>\r\n-                </div>\r\n-              ))}\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-\r\n-        {/* Botones de navegación */}\r\n-        <div className=\"flex justify-between mt-6\">\r\n-          {step > 0 && (\r\n-            <button\r\n-              type=\"button\"\r\n-              className=\"bg-gray-300 text-gray-800 font-bold py-2 px-4 rounded\"\r\n-              onClick={prevStep}\r\n-            >\r\n-              Anterior\r\n-            </button>\r\n-          )}\r\n-          {step < 5 ? (\r\n-            <button\r\n-              type=\"button\"\r\n-              className=\"bg-blue-500 text-white font-bold py-2 px-4 rounded\"\r\n-              onClick={nextStep}\r\n-            >\r\n-              Siguiente\r\n-            </button>\r\n-          ) : (\r\n-            <button\r\n-              type=\"submit\"\r\n-              className=\"bg-green-500 text-white font-bold py-2 px-4 rounded\"\r\n-            >\r\n-              Finalizar\r\n-            </button>\r\n-          )}\r\n-        </div>\r\n-      </form>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default Form;\r\n-import React, { useState } from 'react';\r\n-import axios from 'axios';\r\n-\r\n-const Form = ({ setPlan }) => {\r\n-  // Estados para todos los campos del formulario básico\r\n-  const [weight, setWeight] = useState('');\r\n-  const [height, setHeight] = useState('');\r\n-  const [age, setAge] = useState('');\r\n-  const [gender, setGender] = useState('');\r\n-  const [activityLevel, setActivityLevel] = useState('');\r\n-  const [dietaryRestrictions, setDietaryRestrictions] = useState([]);\r\n-  const [dislikedFoods, setDislikedFoods] = useState('');\r\n-  const [trainingPreference, setTrainingPreference] = useState([]);\r\n-  const [fitnessGoals, setFitnessGoals] = useState([]);\r\n-\r\n-  // Estados para datos avanzados y dispositivos inteligentes\r\n-  const [advanced, setAdvanced] = useState(false);\r\n-  const [bodyFat, setBodyFat] = useState('');\r\n-  const [muscleMass, setMuscleMass] = useState('');\r\n-  const [heartRate, setHeartRate] = useState('');\r\n-  const [steps, setSteps] = useState('');\r\n-  const [smartDevice, setSmartDevice] = useState(false);\r\n-\r\n-  const [step, setStep] = useState(0);\r\n-  const [errors, setErrors] = useState({}); // Estado de errores\r\n-\r\n-  const validateForm = () => {\r\n-    const newErrors = {};\r\n-  \r\n-    // Validación para el peso\r\n-    if (!weight || isNaN(weight) || weight < 20 || weight > 500) {\r\n-      newErrors.weight = 'El peso debe estar entre 20 kg y 500 kg';\r\n-    }\r\n-  \r\n-    // Validación para la altura\r\n-    if (!height || isNaN(height) || height < 50 || height > 300) {\r\n-      newErrors.height = 'La altura debe estar entre 50 cm y 300 cm';\r\n-    }\r\n-  \r\n-    // Validación para la edad\r\n-    if (!age || isNaN(age) || age < 10 || age > 120) {\r\n-      newErrors.age = 'La edad debe estar entre 10 y 120 años';\r\n-    }\r\n-  \r\n-    // Validación para el género\r\n-    if (!gender) {\r\n-      newErrors.gender = 'Selecciona un género';\r\n-    }\r\n-  \r\n-    // Validación para el nivel de actividad\r\n-    if (!activityLevel) {\r\n-      newErrors.activityLevel = 'Selecciona un nivel de actividad';\r\n-    }\r\n-  \r\n-    // Validación para los objetivos de fitness\r\n-    if (fitnessGoals.length === 0) {\r\n-      newErrors.fitnessGoals = 'Selecciona al menos un objetivo de fitness';\r\n-    }\r\n-  \r\n-    setErrors(newErrors);\r\n-    return Object.keys(newErrors).length === 0;\r\n-  };\r\n-  \r\n-\r\n-  const handleSubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    if (validateForm()) {\r\n-      const userData = {\r\n-        weight: parseFloat(weight),\r\n-        height: parseFloat(height),\r\n-        age: parseInt(age),\r\n-        gender,\r\n-        activity_level: activityLevel,\r\n-        goals: fitnessGoals,\r\n-        routine_preference: trainingPreference.join(', ') || 'Ninguno',\r\n-        dietary_restrictions: dietaryRestrictions,\r\n-        disliked_foods: dislikedFoods,\r\n-        ...(advanced && { body_fat: parseFloat(bodyFat), muscle_mass: parseFloat(muscleMass) }),\r\n-        ...(smartDevice && { heart_rate: parseFloat(heartRate), steps: parseInt(steps) })\r\n-      };\r\n-\r\n-    try {\r\n-            const response = await axios.post('http://localhost:8000/generate_plan/', userData);\r\n-            setPlan(response.data);\r\n-            setHasPlan(true); // Actualiza hasPlan a true\r\n-        } catch (error) {\r\n-            console.error('Error al obtener el plan:', error);\r\n-        }\r\n-    }\r\n-};\r\n-\r\n-  const handleCheckboxChange = (setState, value, state) => {\r\n-    if (state.includes(value)) {\r\n-      setState(state.filter((item) => item !== value));\r\n-    } else {\r\n-      setState([...state, value]);\r\n-    }\r\n-  };\r\n-\r\n-  const nextStep = () => setStep((prevStep) => Math.min(prevStep + 1, 5));\r\n-  const prevStep = () => setStep((prevStep) => Math.max(prevStep - 1, 0));\r\n-\r\n-  return (\r\n-    <div className=\"flex flex-col items-center min-h-screen bg-white font-['Noto_Sans', 'Work_Sans', sans-serif]\">\r\n-      <form onSubmit={handleSubmit} className=\"w-[512px] max-w-full p-8 bg-white rounded-lg shadow-md\">\r\n-\r\n-        {/* Paso 0: Datos Personales */}\r\n-        {step === 0 && (\r\n-          <div>\r\n-            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Datos Personales</h3>\r\n-            <div className=\"px-4 py-3\">\r\n-              <label className=\"block pb-2\">\r\n-                <span className=\"text-base font-medium text-[#111418]\">Peso (kg)</span>\r\n-                <input\r\n-                  type=\"number\"\r\n-                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n-                  value={weight}\r\n-                  onChange={(e) => setWeight(e.target.value)}\r\n-                  required\r\n-                />\r\n-                {errors.weight && <p style={{ color: 'red' }}>{errors.weight}</p>}\r\n-              </label>\r\n-            </div>\r\n-            <div className=\"px-4 py-3\">\r\n-              <label className=\"block pb-2\">\r\n-                <span className=\"text-base font-medium text-[#111418]\">Altura (cm)</span>\r\n-                <input\r\n-                  type=\"number\"\r\n-                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n-                  value={height}\r\n-                  onChange={(e) => setHeight(e.target.value)}\r\n-                  required\r\n-                />\r\n-                {errors.height && <p style={{ color: 'red' }}>{errors.height}</p>}\r\n-              </label>\r\n-            </div>\r\n-            <div className=\"px-4 py-3\">\r\n-              <label className=\"block pb-2\">\r\n-                <span className=\"text-base font-medium text-[#111418]\">Edad</span>\r\n-                <input\r\n-                  type=\"number\"\r\n-                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n-                  value={age}\r\n-                  onChange={(e) => setAge(e.target.value)}\r\n-                  required\r\n-                />\r\n-                {errors.age && <p style={{ color: 'red' }}>{errors.age}</p>}\r\n-              </label>\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-\r\n-        {/* Paso 1: Información adicional */}\r\n-        {step === 1 && (\r\n-          <div>\r\n-            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Información adicional</h3>\r\n-            <div className=\"px-4 py-3\">\r\n-              <label className=\"block pb-2\">\r\n-                <span className=\"text-base font-medium text-[#111418]\">Sexo</span>\r\n-                <select\r\n-                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n-                  value={gender}\r\n-                  onChange={(e) => setGender(e.target.value)}\r\n-                  required\r\n-                >\r\n-                  <option value=\"\">Seleccionar</option>\r\n-                  <option value=\"male\">Hombre</option>\r\n-                  <option value=\"female\">Mujer</option>\r\n-                </select>\r\n-                {errors.gender && <p style={{ color: 'red' }}>{errors.gender}</p>}\r\n-              </label>\r\n-            </div>\r\n-            <div className=\"px-4 py-3\">\r\n-              <label className=\"block pb-2\">\r\n-                <span className=\"text-base font-medium text-[#111418]\">Nivel de actividad</span>\r\n-                <select\r\n-                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n-                  value={activityLevel}\r\n-                  onChange={(e) => setActivityLevel(e.target.value)}\r\n-                  required\r\n-                >\r\n-                  <option value=\"\">Seleccionar</option>\r\n-                  <option value=\"sedentary\">Sedentario</option>\r\n-                  <option value=\"lightly_active\">Ligeramente activo</option>\r\n-                  <option value=\"moderately_active\">Moderadamente activo</option>\r\n-                  <option value=\"very_active\">Muy activo</option>\r\n-                  <option value=\"super_active\">Súper activo</option>\r\n-                </select>\r\n-                {errors.activityLevel && <p style={{ color: 'red' }}>{errors.activityLevel}</p>}\r\n-              </label>\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-\r\n-        {/* Paso 2: Datos avanzados y dispositivos */}\r\n-        {step === 2 && (\r\n-          <div>\r\n-            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Datos avanzados y dispositivos</h3>\r\n-            <label className=\"block pb-2\">\r\n-              <input type=\"checkbox\" checked={advanced} onChange={(e) => setAdvanced(e.target.checked)} />\r\n-              <span className=\"ml-2\">Proveer datos avanzados</span>\r\n-            </label>\r\n-\r\n-            {advanced && (\r\n-              <div>\r\n-                <div className=\"px-4 py-3\">\r\n-                  <label className=\"block pb-2\">\r\n-                    <span className=\"text-base font-medium text-[#111418]\">Porcentaje de grasa corporal (%)</span>\r\n-                    <input\r\n-                      type=\"number\"\r\n-                      className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n-                      value={bodyFat}\r\n-                      onChange={(e) => setBodyFat(e.target.value)}\r\n-                    />\r\n-                  </label>\r\n-                </div>\r\n-                <div className=\"px-4 py-3\">\r\n-                  <label className=\"block pb-2\">\r\n-                    <span className=\"text-base font-medium text-[#111418]\">Masa muscular (kg)</span>\r\n-                    <input\r\n-                      type=\"number\"\r\n-                      className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n-                      value={muscleMass}\r\n-                      onChange={(e) => setMuscleMass(e.target.value)}\r\n-                    />\r\n-                  </label>\r\n-                </div>\r\n-              </div>\r\n-            )}\r\n-\r\n-            <label className=\"block mt-4\">\r\n-              <input\r\n-                type=\"checkbox\"\r\n-                checked={smartDevice}\r\n-                onChange={(e) => setSmartDevice(e.target.checked)}\r\n-              />\r\n-              <span className=\"ml-2\">Sincronizar con un dispositivo inteligente</span>\r\n-            </label>\r\n-\r\n-            {smartDevice && (\r\n-              <div className=\"mt-4\">\r\n-                <div className=\"px-4 py-3\">\r\n-                  <label className=\"block pb-2\">\r\n-                    <span className=\"text-base font-medium text-[#111418]\">Frecuencia cardíaca en reposo (BPM)</span>\r\n-                    <input\r\n-                      type=\"number\"\r\n-                      className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n-                      value={heartRate}\r\n-                      onChange={(e) => setHeartRate(e.target.value)}\r\n-                    />\r\n-                  </label>\r\n-                </div>\r\n-                <div className=\"px-4 py-3\">\r\n-                  <label className=\"block pb-2\">\r\n-                    <span className=\"text-base font-medium text-[#111418]\">Pasos diarios</span>\r\n-                    <input\r\n-                      type=\"number\"\r\n-                      className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n-                      value={steps}\r\n-                      onChange={(e) => setSteps(e.target.value)}\r\n-                    />\r\n-                  </label>\r\n-                </div>\r\n-              </div>\r\n-            )}\r\n-          </div>\r\n-        )}\r\n-\r\n-        {/* Paso 3: Preferencias alimenticias */}\r\n-        {step === 3 && (\r\n-          <div>\r\n-            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Preferencias alimenticias</h3>\r\n-            <div className=\"flex gap-3 p-3 flex-wrap\">\r\n-              {['Sin restricciones', 'Vegetariano', 'Vegano', 'Sin gluten', 'Sin lactosa', 'Sin nueces', 'Dieta cetogénica'].map((preference) => (\r\n-                <div\r\n-                  key={preference}\r\n-                  onClick={() => handleCheckboxChange(setDietaryRestrictions, preference, dietaryRestrictions)}\r\n-                  className={`cursor-pointer flex h-8 items-center justify-center gap-x-2 rounded-xl px-4 ${\r\n-                    dietaryRestrictions.includes(preference) ? 'bg-[#1980e6] text-white' : 'bg-[#f0f2f4] text-[#111418]'\r\n-                  }`}\r\n-                >\r\n-                  <p className=\"text-sm font-medium\">{preference}</p>\r\n-                </div>\r\n-              ))}\r\n-            </div>\r\n-            <div className=\"px-4 py-3 mt-4\">\r\n-              <label className=\"block pb-2\">\r\n-                <span className=\"text-base font-medium text-[#111418]\">Alimentos que prefieres evitar</span>\r\n-                <input\r\n-                  type=\"text\"\r\n-                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n-                  placeholder=\"Ej. Brócoli, pescado\"\r\n-                  value={dislikedFoods}\r\n-                  onChange={(e) => setDislikedFoods(e.target.value)}\r\n-                />\r\n-              </label>\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-\r\n-        {/* Paso 4: Tipo de entrenamiento */}\r\n-        {step === 4 && (\r\n-          <div>\r\n-            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Tipo de entrenamiento</h3>\r\n-            <div className=\"flex gap-3 p-3 flex-wrap\">\r\n-              {['Ejercicio en casa', 'Ejercicio al aire libre', 'Ejercicio en el gimnasio', 'Ninguno', 'No estoy seguro'].map((preference) => (\r\n-                <div\r\n-                  key={preference}\r\n-                  onClick={() => handleCheckboxChange(setTrainingPreference, preference, trainingPreference)}\r\n-                  className={`cursor-pointer flex h-8 items-center justify-center gap-x-2 rounded-xl px-4 ${\r\n-                    trainingPreference.includes(preference) ? 'bg-[#1980e6] text-white' : 'bg-[#f0f2f4] text-[#111418]'\r\n-                  }`}\r\n-                >\r\n-                  <p className=\"text-sm font-medium\">{preference}</p>\r\n-                </div>\r\n-              ))}\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-\r\n-        {/* Paso 5: Objetivos de Fitness */}\r\n-        {step === 5 && (\r\n-          <div>\r\n-            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Objetivos de Fitness</h3>\r\n-            <div className=\"flex gap-3 p-3 flex-wrap\">\r\n-              {['Perder peso', 'Ganar masa muscular', 'Mejorar la salud', 'Mejorar el rendimiento'].map((goal) => (\r\n-                <div\r\n-                  key={goal}\r\n-                  onClick={() => handleCheckboxChange(setFitnessGoals, goal, fitnessGoals)}\r\n-                  className={`cursor-pointer flex h-8 items-center justify-center gap-x-2 rounded-xl px-4 ${\r\n-                    fitnessGoals.includes(goal) ? 'bg-[#1980e6] text-white' : 'bg-[#f0f2f4] text-[#111418]'\r\n-                  }`}\r\n-                >\r\n-                  <p className=\"text-sm font-medium\">{goal}</p>\r\n-                </div>\r\n-              ))}\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-\r\n-        {/* Botones de navegación */}\r\n-        <div className=\"flex justify-between mt-6\">\r\n-          {step > 0 && (\r\n-            <button\r\n-              type=\"button\"\r\n-              className=\"bg-gray-300 text-gray-800 font-bold py-2 px-4 rounded\"\r\n-              onClick={prevStep}\r\n-            >\r\n-              Anterior\r\n-            </button>\r\n-          )}\r\n-          {step < 5 ? (\r\n-            <button\r\n-              type=\"button\"\r\n-              className=\"bg-blue-500 text-white font-bold py-2 px-4 rounded\"\r\n-              onClick={nextStep}\r\n-            >\r\n-              Siguiente\r\n-            </button>\r\n-          ) : (\r\n-            <button\r\n-              type=\"submit\"\r\n-              className=\"bg-green-500 text-white font-bold py-2 px-4 rounded\"\r\n-            >\r\n-              Finalizar\r\n-            </button>\r\n-          )}\r\n-        </div>\r\n-      </form>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default Form;\r\n-import React, { useState } from 'react';\r\n-import axios from 'axios';\r\n-\r\n-const Form = ({ setPlan }) => {\r\n-  // Estados para todos los campos del formulario básico\r\n-  const [weight, setWeight] = useState('');\r\n-  const [height, setHeight] = useState('');\r\n-  const [age, setAge] = useState('');\r\n-  const [gender, setGender] = useState('');\r\n-  const [activityLevel, setActivityLevel] = useState('');\r\n-  const [dietaryRestrictions, setDietaryRestrictions] = useState([]);\r\n-  const [dislikedFoods, setDislikedFoods] = useState('');\r\n-  const [trainingPreference, setTrainingPreference] = useState([]);\r\n-  const [fitnessGoals, setFitnessGoals] = useState([]);\r\n-\r\n-  // Estados para datos avanzados y dispositivos inteligentes\r\n-  const [advanced, setAdvanced] = useState(false);\r\n-  const [bodyFat, setBodyFat] = useState('');\r\n-  const [muscleMass, setMuscleMass] = useState('');\r\n-  const [heartRate, setHeartRate] = useState('');\r\n-  const [steps, setSteps] = useState('');\r\n-  const [smartDevice, setSmartDevice] = useState(false);\r\n-\r\n-  const [step, setStep] = useState(0);\r\n-  const [errors, setErrors] = useState({}); // Estado de errores\r\n-\r\n-  const validateForm = () => {\r\n-    const newErrors = {};\r\n-  \r\n-    // Validación para el peso\r\n-    if (!weight || isNaN(weight) || weight < 20 || weight > 500) {\r\n-      newErrors.weight = 'El peso debe estar entre 20 kg y 500 kg';\r\n-    }\r\n-  \r\n-    // Validación para la altura\r\n-    if (!height || isNaN(height) || height < 50 || height > 300) {\r\n-      newErrors.height = 'La altura debe estar entre 50 cm y 300 cm';\r\n-    }\r\n-  \r\n-    // Validación para la edad\r\n-    if (!age || isNaN(age) || age < 10 || age > 120) {\r\n-      newErrors.age = 'La edad debe estar entre 10 y 120 años';\r\n-    }\r\n-  \r\n-    // Validación para el género\r\n-    if (!gender) {\r\n-      newErrors.gender = 'Selecciona un género';\r\n-    }\r\n-  \r\n-    // Validación para el nivel de actividad\r\n-    if (!activityLevel) {\r\n-      newErrors.activityLevel = 'Selecciona un nivel de actividad';\r\n-    }\r\n-  \r\n-    // Validación para los objetivos de fitness\r\n-    if (fitnessGoals.length === 0) {\r\n-      newErrors.fitnessGoals = 'Selecciona al menos un objetivo de fitness';\r\n-    }\r\n-  \r\n-    setErrors(newErrors);\r\n-    return Object.keys(newErrors).length === 0;\r\n-  };\r\n-  \r\n-\r\n-  const handleSubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    if (validateForm()) {\r\n-      const userData = {\r\n-        weight: parseFloat(weight),\r\n-        height: parseFloat(height),\r\n-        age: parseInt(age),\r\n-        gender,\r\n-        activity_level: activityLevel,\r\n-        goals: fitnessGoals,\r\n-        routine_preference: trainingPreference.join(', ') || 'Ninguno',\r\n-        dietary_restrictions: dietaryRestrictions,\r\n-        disliked_foods: dislikedFoods,\r\n-        ...(advanced && { body_fat: parseFloat(bodyFat), muscle_mass: parseFloat(muscleMass) }),\r\n-        ...(smartDevice && { heart_rate: parseFloat(heartRate), steps: parseInt(steps) })\r\n-      };\r\n-\r\n-      try {\r\n-        const response = await axios.post('http://localhost:8000/generate_plan/', userData);\r\n-        setPlan(response.data);\r\n-        setHasPlan(true); // Actualiza hasPlan a true\r\n-    } catch (error) {\r\n-        console.error('Error al obtener el plan:', error);\r\n-    }\r\n-}\r\n-};\r\n-\r\n-  const handleCheckboxChange = (setState, value, state) => {\r\n-    if (state.includes(value)) {\r\n-      setState(state.filter((item) => item !== value));\r\n-    } else {\r\n-      setState([...state, value]);\r\n-    }\r\n-  };\r\n-\r\n-  const nextStep = () => setStep((prevStep) => Math.min(prevStep + 1, 5));\r\n-  const prevStep = () => setStep((prevStep) => Math.max(prevStep - 1, 0));\r\n-\r\n-  return (\r\n-    <div className=\"flex flex-col items-center min-h-screen bg-white font-['Noto_Sans', 'Work_Sans', sans-serif]\">\r\n-      <form onSubmit={handleSubmit} className=\"w-[512px] max-w-full p-8 bg-white rounded-lg shadow-md\">\r\n-\r\n-        {/* Paso 0: Datos Personales */}\r\n-        {step === 0 && (\r\n-          <div>\r\n-            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Datos Personales</h3>\r\n-            <div className=\"px-4 py-3\">\r\n-              <label className=\"block pb-2\">\r\n-                <span className=\"text-base font-medium text-[#111418]\">Peso (kg)</span>\r\n-                <input\r\n-                  type=\"number\"\r\n-                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n-                  value={weight}\r\n-                  onChange={(e) => setWeight(e.target.value)}\r\n-                  required\r\n-                />\r\n-                {errors.weight && <p style={{ color: 'red' }}>{errors.weight}</p>}\r\n-              </label>\r\n-            </div>\r\n-            <div className=\"px-4 py-3\">\r\n-              <label className=\"block pb-2\">\r\n-                <span className=\"text-base font-medium text-[#111418]\">Altura (cm)</span>\r\n-                <input\r\n-                  type=\"number\"\r\n-                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n-                  value={height}\r\n-                  onChange={(e) => setHeight(e.target.value)}\r\n-                  required\r\n-                />\r\n-                {errors.height && <p style={{ color: 'red' }}>{errors.height}</p>}\r\n-              </label>\r\n-            </div>\r\n-            <div className=\"px-4 py-3\">\r\n-              <label className=\"block pb-2\">\r\n-                <span className=\"text-base font-medium text-[#111418]\">Edad</span>\r\n-                <input\r\n-                  type=\"number\"\r\n-                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n-                  value={age}\r\n-                  onChange={(e) => setAge(e.target.value)}\r\n-                  required\r\n-                />\r\n-                {errors.age && <p style={{ color: 'red' }}>{errors.age}</p>}\r\n-              </label>\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-\r\n-        {/* Paso 1: Información adicional */}\r\n-        {step === 1 && (\r\n-          <div>\r\n-            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Información adicional</h3>\r\n-            <div className=\"px-4 py-3\">\r\n-              <label className=\"block pb-2\">\r\n-                <span className=\"text-base font-medium text-[#111418]\">Sexo</span>\r\n-                <select\r\n-                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n-                  value={gender}\r\n-                  onChange={(e) => setGender(e.target.value)}\r\n-                  required\r\n-                >\r\n-                  <option value=\"\">Seleccionar</option>\r\n-                  <option value=\"male\">Hombre</option>\r\n-                  <option value=\"female\">Mujer</option>\r\n-                </select>\r\n-                {errors.gender && <p style={{ color: 'red' }}>{errors.gender}</p>}\r\n-              </label>\r\n-            </div>\r\n-            <div className=\"px-4 py-3\">\r\n-              <label className=\"block pb-2\">\r\n-                <span className=\"text-base font-medium text-[#111418]\">Nivel de actividad</span>\r\n-                <select\r\n-                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n-                  value={activityLevel}\r\n-                  onChange={(e) => setActivityLevel(e.target.value)}\r\n-                  required\r\n-                >\r\n-                  <option value=\"\">Seleccionar</option>\r\n-                  <option value=\"sedentary\">Sedentario</option>\r\n-                  <option value=\"lightly_active\">Ligeramente activo</option>\r\n-                  <option value=\"moderately_active\">Moderadamente activo</option>\r\n-                  <option value=\"very_active\">Muy activo</option>\r\n-                  <option value=\"super_active\">Súper activo</option>\r\n-                </select>\r\n-                {errors.activityLevel && <p style={{ color: 'red' }}>{errors.activityLevel}</p>}\r\n-              </label>\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-\r\n-        {/* Paso 2: Datos avanzados y dispositivos */}\r\n-        {step === 2 && (\r\n-          <div>\r\n-            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Datos avanzados y dispositivos</h3>\r\n-            <label className=\"block pb-2\">\r\n-              <input type=\"checkbox\" checked={advanced} onChange={(e) => setAdvanced(e.target.checked)} />\r\n-              <span className=\"ml-2\">Proveer datos avanzados</span>\r\n-            </label>\r\n-\r\n-            {advanced && (\r\n-              <div>\r\n-                <div className=\"px-4 py-3\">\r\n-                  <label className=\"block pb-2\">\r\n-                    <span className=\"text-base font-medium text-[#111418]\">Porcentaje de grasa corporal (%)</span>\r\n-                    <input\r\n-                      type=\"number\"\r\n-                      className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n-                      value={bodyFat}\r\n-                      onChange={(e) => setBodyFat(e.target.value)}\r\n-                    />\r\n-                  </label>\r\n-                </div>\r\n-                <div className=\"px-4 py-3\">\r\n-                  <label className=\"block pb-2\">\r\n-                    <span className=\"text-base font-medium text-[#111418]\">Masa muscular (kg)</span>\r\n-                    <input\r\n-                      type=\"number\"\r\n-                      className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n-                      value={muscleMass}\r\n-                      onChange={(e) => setMuscleMass(e.target.value)}\r\n-                    />\r\n-                  </label>\r\n-                </div>\r\n-              </div>\r\n-            )}\r\n-\r\n-            <label className=\"block mt-4\">\r\n-              <input\r\n-                type=\"checkbox\"\r\n-                checked={smartDevice}\r\n-                onChange={(e) => setSmartDevice(e.target.checked)}\r\n-              />\r\n-              <span className=\"ml-2\">Sincronizar con un dispositivo inteligente</span>\r\n-            </label>\r\n-\r\n-            {smartDevice && (\r\n-              <div className=\"mt-4\">\r\n-                <div className=\"px-4 py-3\">\r\n-                  <label className=\"block pb-2\">\r\n-                    <span className=\"text-base font-medium text-[#111418]\">Frecuencia cardíaca en reposo (BPM)</span>\r\n-                    <input\r\n-                      type=\"number\"\r\n-                      className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n-                      value={heartRate}\r\n-                      onChange={(e) => setHeartRate(e.target.value)}\r\n-                    />\r\n-                  </label>\r\n-                </div>\r\n-                <div className=\"px-4 py-3\">\r\n-                  <label className=\"block pb-2\">\r\n-                    <span className=\"text-base font-medium text-[#111418]\">Pasos diarios</span>\r\n-                    <input\r\n-                      type=\"number\"\r\n-                      className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n-                      value={steps}\r\n-                      onChange={(e) => setSteps(e.target.value)}\r\n-                    />\r\n-                  </label>\r\n-                </div>\r\n-              </div>\r\n-            )}\r\n-          </div>\r\n-        )}\r\n-\r\n-        {/* Paso 3: Preferencias alimenticias */}\r\n-        {step === 3 && (\r\n-          <div>\r\n-            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Preferencias alimenticias</h3>\r\n-            <div className=\"flex gap-3 p-3 flex-wrap\">\r\n-              {['Sin restricciones', 'Vegetariano', 'Vegano', 'Sin gluten', 'Sin lactosa', 'Sin nueces', 'Dieta cetogénica'].map((preference) => (\r\n-                <div\r\n-                  key={preference}\r\n-                  onClick={() => handleCheckboxChange(setDietaryRestrictions, preference, dietaryRestrictions)}\r\n-                  className={`cursor-pointer flex h-8 items-center justify-center gap-x-2 rounded-xl px-4 ${\r\n-                    dietaryRestrictions.includes(preference) ? 'bg-[#1980e6] text-white' : 'bg-[#f0f2f4] text-[#111418]'\r\n-                  }`}\r\n-                >\r\n-                  <p className=\"text-sm font-medium\">{preference}</p>\r\n-                </div>\r\n-              ))}\r\n-            </div>\r\n-            <div className=\"px-4 py-3 mt-4\">\r\n-              <label className=\"block pb-2\">\r\n-                <span className=\"text-base font-medium text-[#111418]\">Alimentos que prefieres evitar</span>\r\n-                <input\r\n-                  type=\"text\"\r\n-                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n-                  placeholder=\"Ej. Brócoli, pescado\"\r\n-                  value={dislikedFoods}\r\n-                  onChange={(e) => setDislikedFoods(e.target.value)}\r\n-                />\r\n-              </label>\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-\r\n-        {/* Paso 4: Tipo de entrenamiento */}\r\n-        {step === 4 && (\r\n-          <div>\r\n-            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Tipo de entrenamiento</h3>\r\n-            <div className=\"flex gap-3 p-3 flex-wrap\">\r\n-              {['Ejercicio en casa', 'Ejercicio al aire libre', 'Ejercicio en el gimnasio', 'Ninguno', 'No estoy seguro'].map((preference) => (\r\n-                <div\r\n-                  key={preference}\r\n-                  onClick={() => handleCheckboxChange(setTrainingPreference, preference, trainingPreference)}\r\n-                  className={`cursor-pointer flex h-8 items-center justify-center gap-x-2 rounded-xl px-4 ${\r\n-                    trainingPreference.includes(preference) ? 'bg-[#1980e6] text-white' : 'bg-[#f0f2f4] text-[#111418]'\r\n-                  }`}\r\n-                >\r\n-                  <p className=\"text-sm font-medium\">{preference}</p>\r\n-                </div>\r\n-              ))}\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-\r\n-        {/* Paso 5: Objetivos de Fitness */}\r\n-        {step === 5 && (\r\n-          <div>\r\n-            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Objetivos de Fitness</h3>\r\n-            <div className=\"flex gap-3 p-3 flex-wrap\">\r\n-              {['Perder peso', 'Ganar masa muscular', 'Mejorar la salud', 'Mejorar el rendimiento'].map((goal) => (\r\n-                <div\r\n-                  key={goal}\r\n-                  onClick={() => handleCheckboxChange(setFitnessGoals, goal, fitnessGoals)}\r\n-                  className={`cursor-pointer flex h-8 items-center justify-center gap-x-2 rounded-xl px-4 ${\r\n-                    fitnessGoals.includes(goal) ? 'bg-[#1980e6] text-white' : 'bg-[#f0f2f4] text-[#111418]'\r\n-                  }`}\r\n-                >\r\n-                  <p className=\"text-sm font-medium\">{goal}</p>\r\n-                </div>\r\n-              ))}\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-\r\n-        {/* Botones de navegación */}\r\n-        <div className=\"flex justify-between mt-6\">\r\n-          {step > 0 && (\r\n-            <button\r\n-              type=\"button\"\r\n-              className=\"bg-gray-300 text-gray-800 font-bold py-2 px-4 rounded\"\r\n-              onClick={prevStep}\r\n-            >\r\n-              Anterior\r\n-            </button>\r\n-          )}\r\n-          {step < 5 ? (\r\n-            <button\r\n-              type=\"button\"\r\n-              className=\"bg-blue-500 text-white font-bold py-2 px-4 rounded\"\r\n-              onClick={nextStep}\r\n-            >\r\n-              Siguiente\r\n-            </button>\r\n-          ) : (\r\n-            <button\r\n-              type=\"submit\"\r\n-              className=\"bg-green-500 text-white font-bold py-2 px-4 rounded\"\r\n-            >\r\n-              Finalizar\r\n-            </button>\r\n-          )}\r\n-        </div>\r\n-      </form>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default Form;\r\n"
                },
                {
                    "date": 1730827120344,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,251 @@\n+// frontend/src/components/Form.js\r\n+import React, { useState } from 'react';\r\n+import axios from 'axios';\r\n+\r\n+const Form = ({ setPlan }) => {\r\n+  // Estados para todos los campos del formulario\r\n+  const [weight, setWeight] = useState('');\r\n+  const [height, setHeight] = useState('');\r\n+  const [age, setAge] = useState('');\r\n+  const [gender, setGender] = useState('');\r\n+  const [activityLevel, setActivityLevel] = useState('');\r\n+  const [fitnessGoal, setFitnessGoal] = useState('');\r\n+  const [routinePreference, setRoutinePreference] = useState('');\r\n+  const [dietaryPreferences, setDietaryPreferences] = useState([]);\r\n+  const [equipmentAvailable, setEquipmentAvailable] = useState([]);\r\n+  const [mealsPerDay, setMealsPerDay] = useState(3);\r\n+\r\n+  const [step, setStep] = useState(0);\r\n+  const [errors, setErrors] = useState({}); // Estado de errores\r\n+\r\n+  // Validación del formulario\r\n+  const validateForm = () => {\r\n+    const newErrors = {};\r\n+\r\n+    // Validaciones para los campos requeridos\r\n+    if (!weight || isNaN(weight) || weight < 20 || weight > 500) {\r\n+      newErrors.weight = 'El peso debe estar entre 20 kg y 500 kg';\r\n+    }\r\n+    if (!height || isNaN(height) || height < 50 || height > 300) {\r\n+      newErrors.height = 'La altura debe estar entre 50 cm y 300 cm';\r\n+    }\r\n+    if (!age || isNaN(age) || age < 10 || age > 120) {\r\n+      newErrors.age = 'La edad debe estar entre 10 y 120 años';\r\n+    }\r\n+    if (!gender) {\r\n+      newErrors.gender = 'Selecciona un género';\r\n+    }\r\n+    if (!activityLevel) {\r\n+      newErrors.activityLevel = 'Selecciona un nivel de actividad';\r\n+    }\r\n+    if (!fitnessGoal) {\r\n+      newErrors.fitnessGoal = 'Selecciona un objetivo de fitness';\r\n+    }\r\n+    if (!routinePreference) {\r\n+      newErrors.routinePreference = 'Selecciona una preferencia de rutina de ejercicio';\r\n+    }\r\n+    if (isNaN(mealsPerDay) || mealsPerDay < 1 || mealsPerDay > 6) {\r\n+      newErrors.mealsPerDay = 'El número de comidas por día debe estar entre 1 y 6';\r\n+    }\r\n+\r\n+    setErrors(newErrors);\r\n+    return Object.keys(newErrors).length === 0;\r\n+  };\r\n+\r\n+  // Manejar el envío del formulario\r\n+  const handleSubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    if (validateForm()) {\r\n+      const userData = {\r\n+        weight: parseFloat(weight),\r\n+        height: parseFloat(height),\r\n+        age: parseInt(age),\r\n+        gender,\r\n+        activity_level: activityLevel,\r\n+        fitness_goal: fitnessGoal,\r\n+        routine_preference: routinePreference,\r\n+        dietary_preferences: dietaryPreferences.includes('no_dietary_preference') \r\n+          ? [] \r\n+          : dietaryPreferences, // Enviar array vacío si \"Sin preferencias dietéticas\" está seleccionado\r\n+        equipment_available: equipmentAvailable,\r\n+        meals_per_day: parseInt(mealsPerDay),\r\n+      };\r\n+\r\n+      try {\r\n+        const token = localStorage.getItem('token');\r\n+        const response = await axios.post('http://localhost:8000/generate_plan/', userData, {\r\n+          headers: {\r\n+            Authorization: `Bearer ${token}`,\r\n+          },\r\n+        });\r\n+        setPlan(response.data);\r\n+      } catch (error) {\r\n+        console.error('Error al obtener el plan:', error);\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  // Manejar cambios en las preferencias dietéticas\r\n+  const handleDietaryPreferenceChange = (value) => {\r\n+    if (value === 'no_dietary_preference') {\r\n+      // Si selecciona \"Sin preferencias dietéticas\", desmarcamos todas las demás opciones\r\n+      setDietaryPreferences(\r\n+        dietaryPreferences.includes('no_dietary_preference') \r\n+          ? [] // Si estaba seleccionada, la quitamos\r\n+          : ['no_dietary_preference'] // Si no estaba seleccionada, la agregamos y quitamos otras\r\n+      );\r\n+    } else {\r\n+      // Si selecciona alguna otra opción, eliminamos \"Sin preferencias dietéticas\" y alternamos la opción seleccionada\r\n+      setDietaryPreferences((prevPreferences) => {\r\n+        const updatedPreferences = prevPreferences.filter(\r\n+          (pref) => pref !== 'no_dietary_preference' // Removemos \"Sin preferencias dietéticas\"\r\n+        );\r\n+        return updatedPreferences.includes(value)\r\n+          ? updatedPreferences.filter((pref) => pref !== value) // Quitamos la opción si ya está seleccionada\r\n+          : [...updatedPreferences, value]; // Agregamos la opción si no está seleccionada\r\n+      });\r\n+    }\r\n+  };\r\n+\r\n+  const handleCheckboxChange = (setState, value, state) => {\r\n+    if (state.includes(value)) {\r\n+      setState(state.filter((item) => item !== value));\r\n+    } else {\r\n+      setState([...state, value]);\r\n+    }\r\n+  };\r\n+\r\n+  const nextStep = () => setStep((prevStep) => Math.min(prevStep + 1, 4));\r\n+  const prevStep = () => setStep((prevStep) => Math.max(prevStep - 1, 0));\r\n+\r\n+  // Opciones para select y checkboxes\r\n+  const activityLevelOptions = [\r\n+    { label: 'Sedentario', value: 'sedentary' },\r\n+    { label: 'Ligeramente activo', value: 'lightly_active' },\r\n+    { label: 'Moderadamente activo', value: 'moderately_active' },\r\n+    { label: 'Muy activo', value: 'very_active' },\r\n+    { label: 'Súper activo', value: 'super_active' },\r\n+  ];\r\n+\r\n+  const fitnessGoalOptions = [\r\n+    { label: 'Perder peso', value: 'lose_weight' },\r\n+    { label: 'Ganar masa muscular', value: 'gain_muscle' },\r\n+    { label: 'Mantener peso', value: 'maintain' },\r\n+  ];\r\n+\r\n+  const routinePreferenceOptions = [\r\n+    { label: 'Ejercicio en casa', value: 'home' },\r\n+    { label: 'Ejercicio al aire libre', value: 'outdoor' },\r\n+    { label: 'Ejercicio en el gimnasio', value: 'gym' },\r\n+    { label: 'No estoy seguro', value: 'unsure' },\r\n+  ];\r\n+\r\n+  const dietaryOptions = [\r\n+    { label: 'Vegetariano', value: 'vegetarian' },\r\n+    { label: 'Vegano', value: 'vegan' },\r\n+    { label: 'Sin gluten', value: 'gluten_free' },\r\n+    { label: 'Sin lactosa', value: 'lactose_free' },\r\n+    { label: 'Paleo', value: 'paleo' },\r\n+    { label: 'Cetogénica', value: 'keto' },\r\n+    { label: 'Sin preferencias dietéticas', value: 'no_dietary_preference' }, // Nueva opción\r\n+  ];\r\n+\r\n+  const equipmentOptions = [\r\n+    { label: 'Peso corporal', value: 'body weight' },\r\n+    { label: 'Mancuernas', value: 'dumbbells' },\r\n+    { label: 'Bandas de resistencia', value: 'resistance band' },\r\n+    { label: 'Barra', value: 'barbell' },\r\n+    { label: 'Máquinas de gimnasio', value: 'machine' },\r\n+  ];\r\n+\r\n+  return (\r\n+    <div className=\"flex flex-col items-center min-h-screen bg-white font-['Noto_Sans', 'Work_Sans', sans-serif]\">\r\n+      <form onSubmit={handleSubmit} className=\"w-[512px] max-w-full p-8 bg-white rounded-lg shadow-md\">\r\n+        {/* Renderiza el paso correspondiente */}\r\n+        {step === 0 && (\r\n+          <div>\r\n+            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Datos Personales</h3>\r\n+            {/* Peso */}\r\n+            <div className=\"px-4 py-3\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Peso (kg)</span>\r\n+                <input\r\n+                  type=\"number\"\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n+                  value={weight}\r\n+                  onChange={(e) => setWeight(e.target.value)}\r\n+                  required\r\n+                />\r\n+                {errors.weight && <p style={{ color: 'red' }}>{errors.weight}</p>}\r\n+              </label>\r\n+            </div>\r\n+            {/* Altura */}\r\n+            <div className=\"px-4 py-3\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Altura (cm)</span>\r\n+                <input\r\n+                  type=\"number\"\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n+                  value={height}\r\n+                  onChange={(e) => setHeight(e.target.value)}\r\n+                  required\r\n+                />\r\n+                {errors.height && <p style={{ color: 'red' }}>{errors.height}</p>}\r\n+              </label>\r\n+            </div>\r\n+            {/* Edad */}\r\n+            <div className=\"px-4 py-3\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Edad</span>\r\n+                <input\r\n+                  type=\"number\"\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n+                  value={age}\r\n+                  onChange={(e) => setAge(e.target.value)}\r\n+                  required\r\n+                />\r\n+                {errors.age && <p style={{ color: 'red' }}>{errors.age}</p>}\r\n+              </label>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+        \r\n+        {/* Paso 1: Información adicional */}\r\n+        {step === 1 && (\r\n+          // Similar a los otros pasos\r\n+        )}\r\n+\r\n+        {/* Botones de navegación */}\r\n+        <div className=\"flex justify-between mt-6\">\r\n+          {step > 0 && (\r\n+            <button\r\n+              type=\"button\"\r\n+              className=\"bg-gray-300 text-gray-800 font-bold py-2 px-4 rounded\"\r\n+              onClick={prevStep}\r\n+            >\r\n+              Anterior\r\n+            </button>\r\n+          )}\r\n+          {step < 4 ? (\r\n+            <button\r\n+              type=\"button\"\r\n+              className=\"bg-blue-500 text-white font-bold py-2 px-4 rounded\"\r\n+              onClick={nextStep}\r\n+            >\r\n+              Siguiente\r\n+            </button>\r\n+          ) : (\r\n+            <button\r\n+              type=\"submit\"\r\n+              className=\"bg-green-500 text-white font-bold py-2 px-4 rounded\"\r\n+            >\r\n+              Finalizar\r\n+            </button>\r\n+          )}\r\n+        </div>\r\n+      </form>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default Form;\r\n"
                },
                {
                    "date": 1730827137425,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,392 @@\n+// frontend/src/components/Form.js\r\n+import React, { useState } from 'react';\r\n+import axios from 'axios';\r\n+\r\n+const Form = ({ setPlan }) => {\r\n+  // Estados para todos los campos del formulario\r\n+  const [weight, setWeight] = useState('');\r\n+  const [height, setHeight] = useState('');\r\n+  const [age, setAge] = useState('');\r\n+  const [gender, setGender] = useState('');\r\n+  const [activityLevel, setActivityLevel] = useState('');\r\n+  const [fitnessGoal, setFitnessGoal] = useState('');\r\n+  const [routinePreference, setRoutinePreference] = useState('');\r\n+  const [dietaryPreferences, setDietaryPreferences] = useState([]);\r\n+  const [equipmentAvailable, setEquipmentAvailable] = useState([]);\r\n+  const [mealsPerDay, setMealsPerDay] = useState(3);\r\n+\r\n+  const [step, setStep] = useState(0);\r\n+  const [errors, setErrors] = useState({}); // Estado de errores\r\n+\r\n+  // Validación del formulario\r\n+  const validateForm = () => {\r\n+    const newErrors = {};\r\n+\r\n+    // Validaciones para los campos requeridos\r\n+    if (!weight || isNaN(weight) || weight < 20 || weight > 500) {\r\n+      newErrors.weight = 'El peso debe estar entre 20 kg y 500 kg';\r\n+    }\r\n+    if (!height || isNaN(height) || height < 50 || height > 300) {\r\n+      newErrors.height = 'La altura debe estar entre 50 cm y 300 cm';\r\n+    }\r\n+    if (!age || isNaN(age) || age < 10 || age > 120) {\r\n+      newErrors.age = 'La edad debe estar entre 10 y 120 años';\r\n+    }\r\n+    if (!gender) {\r\n+      newErrors.gender = 'Selecciona un género';\r\n+    }\r\n+    if (!activityLevel) {\r\n+      newErrors.activityLevel = 'Selecciona un nivel de actividad';\r\n+    }\r\n+    if (!fitnessGoal) {\r\n+      newErrors.fitnessGoal = 'Selecciona un objetivo de fitness';\r\n+    }\r\n+    if (!routinePreference) {\r\n+      newErrors.routinePreference = 'Selecciona una preferencia de rutina de ejercicio';\r\n+    }\r\n+    if (isNaN(mealsPerDay) || mealsPerDay < 1 || mealsPerDay > 6) {\r\n+      newErrors.mealsPerDay = 'El número de comidas por día debe estar entre 1 y 6';\r\n+    }\r\n+\r\n+    setErrors(newErrors);\r\n+    return Object.keys(newErrors).length === 0;\r\n+  };\r\n+\r\n+  // Manejar el envío del formulario\r\n+  const handleSubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    if (validateForm()) {\r\n+      const userData = {\r\n+        weight: parseFloat(weight),\r\n+        height: parseFloat(height),\r\n+        age: parseInt(age),\r\n+        gender,\r\n+        activity_level: activityLevel,\r\n+        fitness_goal: fitnessGoal,\r\n+        routine_preference: routinePreference,\r\n+        dietary_preferences: dietaryPreferences,\r\n+        equipment_available: equipmentAvailable,\r\n+        meals_per_day: parseInt(mealsPerDay),\r\n+      };\r\n+\r\n+      try {\r\n+        const token = localStorage.getItem('token');\r\n+        const response = await axios.post('http://localhost:8000/generate_plan/', userData, {\r\n+          headers: {\r\n+            Authorization: `Bearer ${token}`,\r\n+          },\r\n+        });\r\n+        setPlan(response.data);\r\n+      } catch (error) {\r\n+        console.error('Error al obtener el plan:', error);\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  // Manejar cambios en los checkboxes\r\n+  const handleCheckboxChange = (setState, value, state) => {\r\n+    if (state.includes(value)) {\r\n+      setState(state.filter((item) => item !== value));\r\n+    } else {\r\n+      setState([...state, value]);\r\n+    }\r\n+  };\r\n+\r\n+  const nextStep = () => setStep((prevStep) => Math.min(prevStep + 1, 4));\r\n+  const prevStep = () => setStep((prevStep) => Math.max(prevStep - 1, 0));\r\n+\r\n+  // Opciones para los select y checkboxes\r\n+  const activityLevelOptions = [\r\n+    { label: 'Sedentario', value: 'sedentary' },\r\n+    { label: 'Ligeramente activo', value: 'lightly_active' },\r\n+    { label: 'Moderadamente activo', value: 'moderately_active' },\r\n+    { label: 'Muy activo', value: 'very_active' },\r\n+    { label: 'Súper activo', value: 'super_active' },\r\n+  ];\r\n+\r\n+  const fitnessGoalOptions = [\r\n+    { label: 'Perder peso', value: 'lose_weight' },\r\n+    { label: 'Ganar masa muscular', value: 'gain_muscle' },\r\n+    { label: 'Mantener peso', value: 'maintain' },\r\n+  ];\r\n+\r\n+  const routinePreferenceOptions = [\r\n+    { label: 'Ejercicio en casa', value: 'home' },\r\n+    { label: 'Ejercicio al aire libre', value: 'outdoor' },\r\n+    { label: 'Ejercicio en el gimnasio', value: 'gym' },\r\n+    { label: 'No estoy seguro', value: 'unsure' },\r\n+  ];\r\n+\r\n+  const dietaryOptions = [\r\n+    { label: 'Vegetariano', value: 'vegetarian' },\r\n+    { label: 'Vegano', value: 'vegan' },\r\n+    { label: 'Sin gluten', value: 'gluten_free' },\r\n+    { label: 'Sin lactosa', value: 'lactose_free' },\r\n+    { label: 'Paleo', value: 'paleo' },\r\n+    { label: 'Cetogénica', value: 'keto' },\r\n+    { label: 'Sin preferencias dietéticas', value: 'no_dietary_preference' }, // Nueva opción\r\n+\r\n+  ];\r\n+  const handleDietaryPreferenceChange = (value) => {\r\n+    if (value === 'no_dietary_preference') {\r\n+      // Si selecciona \"Sin preferencias dietéticas\", desmarcamos todas las demás opciones\r\n+      setDietaryPreferences(\r\n+        dietaryPreferences.includes('no_dietary_preference') \r\n+          ? [] // Si estaba seleccionada, la quitamos\r\n+          : ['no_dietary_preference'] // Si no estaba seleccionada, la agregamos y quitamos otras\r\n+      );\r\n+    } else {\r\n+      // Si selecciona alguna otra opción, eliminamos \"Sin preferencias dietéticas\" y alternamos la opción seleccionada\r\n+      setDietaryPreferences((prevPreferences) => {\r\n+        const updatedPreferences = prevPreferences.filter(\r\n+          (pref) => pref !== 'no_dietary_preference' // Removemos \"Sin preferencias dietéticas\"\r\n+        );\r\n+        return updatedPreferences.includes(value)\r\n+          ? updatedPreferences.filter((pref) => pref !== value) // Quitamos la opción si ya está seleccionada\r\n+          : [...updatedPreferences, value]; // Agregamos la opción si no está seleccionada\r\n+      });\r\n+    }\r\n+  };\r\n+\r\n+  const equipmentOptions = [\r\n+    { label: 'Peso corporal', value: 'body weight' },\r\n+    { label: 'Mancuernas', value: 'dumbbells' },\r\n+    { label: 'Bandas de resistencia', value: 'resistance band' },\r\n+    { label: 'Barra', value: 'barbell' },\r\n+    { label: 'Máquinas de gimnasio', value: 'machine' },\r\n+  ];\r\n+\r\n+  return (\r\n+    <div className=\"flex flex-col items-center min-h-screen bg-white font-['Noto_Sans', 'Work_Sans', sans-serif]\">\r\n+      <form onSubmit={handleSubmit} className=\"w-[512px] max-w-full p-8 bg-white rounded-lg shadow-md\">\r\n+        {/* Paso 0: Datos Personales */}\r\n+        {step === 0 && (\r\n+          <div>\r\n+            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Datos Personales</h3>\r\n+            {/* Peso */}\r\n+            <div className=\"px-4 py-3\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Peso (kg)</span>\r\n+                <input\r\n+                  type=\"number\"\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n+                  value={weight}\r\n+                  onChange={(e) => setWeight(e.target.value)}\r\n+                  required\r\n+                />\r\n+                {errors.weight && <p style={{ color: 'red' }}>{errors.weight}</p>}\r\n+              </label>\r\n+            </div>\r\n+            {/* Altura */}\r\n+            <div className=\"px-4 py-3\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Altura (cm)</span>\r\n+                <input\r\n+                  type=\"number\"\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n+                  value={height}\r\n+                  onChange={(e) => setHeight(e.target.value)}\r\n+                  required\r\n+                />\r\n+                {errors.height && <p style={{ color: 'red' }}>{errors.height}</p>}\r\n+              </label>\r\n+            </div>\r\n+            {/* Edad */}\r\n+            <div className=\"px-4 py-3\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Edad</span>\r\n+                <input\r\n+                  type=\"number\"\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n+                  value={age}\r\n+                  onChange={(e) => setAge(e.target.value)}\r\n+                  required\r\n+                />\r\n+                {errors.age && <p style={{ color: 'red' }}>{errors.age}</p>}\r\n+              </label>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* Paso 1: Información adicional */}\r\n+        {step === 1 && (\r\n+          <div>\r\n+            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Información adicional</h3>\r\n+            {/* Género */}\r\n+            <div className=\"px-4 py-3\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Género</span>\r\n+                <select\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n+                  value={gender}\r\n+                  onChange={(e) => setGender(e.target.value)}\r\n+                  required\r\n+                >\r\n+                  <option value=\"\">Seleccionar</option>\r\n+                  <option value=\"male\">Hombre</option>\r\n+                  <option value=\"female\">Mujer</option>\r\n+                </select>\r\n+                {errors.gender && <p style={{ color: 'red' }}>{errors.gender}</p>}\r\n+              </label>\r\n+            </div>\r\n+            {/* Nivel de actividad */}\r\n+            <div className=\"px-4 py-3\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Nivel de actividad</span>\r\n+                <select\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n+                  value={activityLevel}\r\n+                  onChange={(e) => setActivityLevel(e.target.value)}\r\n+                  required\r\n+                >\r\n+                  <option value=\"\">Seleccionar</option>\r\n+                  {activityLevelOptions.map((option) => (\r\n+                    <option key={option.value} value={option.value}>\r\n+                      {option.label}\r\n+                    </option>\r\n+                  ))}\r\n+                </select>\r\n+                {errors.activityLevel && <p style={{ color: 'red' }}>{errors.activityLevel}</p>}\r\n+              </label>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* Paso 2: Preferencias alimenticias */}\r\n+        {step === 2 && (\r\n+          <div>\r\n+            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Preferencias alimenticias</h3>\r\n+            {/* Preferencias dietéticas */}\r\n+            <div className=\"flex gap-3 p-3 flex-wrap\">\r\n+              {dietaryOptions.map((option) => (\r\n+                <div\r\n+                  key={option.value}\r\n+                  onClick={() => handleCheckboxChange(setDietaryPreferences, option.value, dietaryPreferences)}\r\n+                  className={`cursor-pointer flex h-8 items-center justify-center gap-x-2 rounded-xl px-4 ${\r\n+                    dietaryPreferences.includes(option.value) ? 'bg-[#1980e6] text-white' : 'bg-[#f0f2f4] text-[#111418]'\r\n+                  }`}\r\n+                >\r\n+                  <p className=\"text-sm font-medium\">{option.label}</p>\r\n+                </div>\r\n+              ))}\r\n+            </div>\r\n+            {/* Número de comidas por día */}\r\n+            <div className=\"px-4 py-3 mt-4\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Número de comidas por día</span>\r\n+                <input\r\n+                  type=\"number\"\r\n+                  min=\"1\"\r\n+                  max=\"6\"\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n+                  value={mealsPerDay}\r\n+                  onChange={(e) => setMealsPerDay(e.target.value)}\r\n+                  required\r\n+                />\r\n+                {errors.mealsPerDay && <p style={{ color: 'red' }}>{errors.mealsPerDay}</p>}\r\n+              </label>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* Paso 3: Equipamiento disponible */}\r\n+        {step === 3 && (\r\n+          <div>\r\n+            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Equipamiento Disponible</h3>\r\n+            <div className=\"flex gap-3 p-3 flex-wrap\">\r\n+              {equipmentOptions.map((option) => (\r\n+                <div\r\n+                  key={option.value}\r\n+                  onClick={() => handleCheckboxChange(setEquipmentAvailable, option.value, equipmentAvailable)}\r\n+                  className={`cursor-pointer flex h-8 items-center justify-center gap-x-2 rounded-xl px-4 ${\r\n+                    equipmentAvailable.includes(option.value) ? 'bg-[#1980e6] text-white' : 'bg-[#f0f2f4] text-[#111418]'\r\n+                  }`}\r\n+                >\r\n+                  <p className=\"text-sm font-medium\">{option.label}</p>\r\n+                </div>\r\n+              ))}\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* Paso 4: Preferencia de rutina y objetivo de fitness */}\r\n+        {step === 4 && (\r\n+          <div>\r\n+            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Preferencias de Ejercicio y Objetivos</h3>\r\n+            {/* Preferencia de rutina */}\r\n+            <div className=\"px-4 py-3\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Preferencia de rutina de ejercicio</span>\r\n+                <select\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n+                  value={routinePreference}\r\n+                  onChange={(e) => setRoutinePreference(e.target.value)}\r\n+                  required\r\n+                >\r\n+                  <option value=\"\">Seleccionar</option>\r\n+                  {routinePreferenceOptions.map((option) => (\r\n+                    <option key={option.value} value={option.value}>\r\n+                      {option.label}\r\n+                    </option>\r\n+                  ))}\r\n+                </select>\r\n+                {errors.routinePreference && <p style={{ color: 'red' }}>{errors.routinePreference}</p>}\r\n+              </label>\r\n+            </div>\r\n+            {/* Objetivo de fitness */}\r\n+            <div className=\"px-4 py-3\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Objetivo de Fitness</span>\r\n+                <select\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n+                  value={fitnessGoal}\r\n+                  onChange={(e) => setFitnessGoal(e.target.value)}\r\n+                  required\r\n+                >\r\n+                  <option value=\"\">Seleccionar</option>\r\n+                  {fitnessGoalOptions.map((option) => (\r\n+                    <option key={option.value} value={option.value}>\r\n+                      {option.label}\r\n+                    </option>\r\n+                  ))}\r\n+                </select>\r\n+                {errors.fitnessGoal && <p style={{ color: 'red' }}>{errors.fitnessGoal}</p>}\r\n+              </label>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* Botones de navegación */}\r\n+        <div className=\"flex justify-between mt-6\">\r\n+          {step > 0 && (\r\n+            <button\r\n+              type=\"button\"\r\n+              className=\"bg-gray-300 text-gray-800 font-bold py-2 px-4 rounded\"\r\n+              onClick={prevStep}\r\n+            >\r\n+              Anterior\r\n+            </button>\r\n+          )}\r\n+          {step < 4 ? (\r\n+            <button\r\n+              type=\"button\"\r\n+              className=\"bg-blue-500 text-white font-bold py-2 px-4 rounded\"\r\n+              onClick={nextStep}\r\n+            >\r\n+              Siguiente\r\n+            </button>\r\n+          ) : (\r\n+            <button\r\n+              type=\"submit\"\r\n+              className=\"bg-green-500 text-white font-bold py-2 px-4 rounded\"\r\n+            >\r\n+              Finalizar\r\n+            </button>\r\n+          )}\r\n+        </div>\r\n+      </form>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default Form;\r\n"
                },
                {
                    "date": 1730827325603,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,393 @@\n+// frontend/src/components/Form.js\r\n+import React, { useState } from 'react';\r\n+import axios from 'axios';\r\n+\r\n+const Form = ({ setPlan }) => {\r\n+  // Estados para todos los campos del formulario\r\n+  const [weight, setWeight] = useState('');\r\n+  const [height, setHeight] = useState('');\r\n+  const [age, setAge] = useState('');\r\n+  const [gender, setGender] = useState('');\r\n+  const [activityLevel, setActivityLevel] = useState('');\r\n+  const [fitnessGoal, setFitnessGoal] = useState('');\r\n+  const [routinePreference, setRoutinePreference] = useState('');\r\n+  const [dietaryPreferences, setDietaryPreferences] = useState([]);\r\n+  const [equipmentAvailable, setEquipmentAvailable] = useState([]);\r\n+  const [mealsPerDay, setMealsPerDay] = useState(3);\r\n+\r\n+  const [step, setStep] = useState(0);\r\n+  const [errors, setErrors] = useState({}); // Estado de errores\r\n+\r\n+  // Validación del formulario\r\n+  const validateForm = () => {\r\n+    const newErrors = {};\r\n+\r\n+    // Validaciones para los campos requeridos\r\n+    if (!weight || isNaN(weight) || weight < 20 || weight > 500) {\r\n+      newErrors.weight = 'El peso debe estar entre 20 kg y 500 kg';\r\n+    }\r\n+    if (!height || isNaN(height) || height < 50 || height > 300) {\r\n+      newErrors.height = 'La altura debe estar entre 50 cm y 300 cm';\r\n+    }\r\n+    if (!age || isNaN(age) || age < 10 || age > 120) {\r\n+      newErrors.age = 'La edad debe estar entre 10 y 120 años';\r\n+    }\r\n+    if (!gender) {\r\n+      newErrors.gender = 'Selecciona un género';\r\n+    }\r\n+    if (!activityLevel) {\r\n+      newErrors.activityLevel = 'Selecciona un nivel de actividad';\r\n+    }\r\n+    if (!fitnessGoal) {\r\n+      newErrors.fitnessGoal = 'Selecciona un objetivo de fitness';\r\n+    }\r\n+    if (!routinePreference) {\r\n+      newErrors.routinePreference = 'Selecciona una preferencia de rutina de ejercicio';\r\n+    }\r\n+    if (isNaN(mealsPerDay) || mealsPerDay < 1 || mealsPerDay > 6) {\r\n+      newErrors.mealsPerDay = 'El número de comidas por día debe estar entre 1 y 6';\r\n+    }\r\n+\r\n+    setErrors(newErrors);\r\n+    return Object.keys(newErrors).length === 0;\r\n+  };\r\n+\r\n+  // Manejar el envío del formulario\r\n+  const handleSubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    if (validateForm()) {\r\n+      const userData = {\r\n+        weight: parseFloat(weight),\r\n+        height: parseFloat(height),\r\n+        age: parseInt(age),\r\n+        gender,\r\n+        activity_level: activityLevel,\r\n+        fitness_goal: fitnessGoal,\r\n+        routine_preference: routinePreference,\r\n+        dietary_preferences: dietaryPreferences,\r\n+        equipment_available: equipmentAvailable,\r\n+        meals_per_day: parseInt(mealsPerDay),\r\n+      };\r\n+\r\n+      try {\r\n+        const token = localStorage.getItem('token');\r\n+        const response = await axios.post('http://localhost:8000/generate_plan/', userData, {\r\n+          headers: {\r\n+            Authorization: `Bearer ${token}`,\r\n+          },\r\n+        });\r\n+        setPlan(response.data);\r\n+      } catch (error) {\r\n+        console.error('Error al obtener el plan:', error);\r\n+      }\r\n+    }\r\n+  };\r\n+  // Manejar cambios en las preferencias dietéticas\r\n+  const handleDietaryPreferenceChange = (value) => {\r\n+    if (value === 'no_dietary_preference') {\r\n+      // Si selecciona \"Sin preferencias dietéticas\", desmarcamos todas las demás opciones\r\n+      setDietaryPreferences(\r\n+        dietaryPreferences.includes('no_dietary_preference') \r\n+          ? [] // Si estaba seleccionada, la quitamos\r\n+          : ['no_dietary_preference'] // Si no estaba seleccionada, la agregamos y quitamos otras\r\n+      );\r\n+    } else {\r\n+      // Si selecciona alguna otra opción, eliminamos \"Sin preferencias dietéticas\" y alternamos la opción seleccionada\r\n+      setDietaryPreferences((prevPreferences) => {\r\n+        const updatedPreferences = prevPreferences.filter(\r\n+          (pref) => pref !== 'no_dietary_preference' // Removemos \"Sin preferencias dietéticas\"\r\n+        );\r\n+        return updatedPreferences.includes(value)\r\n+          ? updatedPreferences.filter((pref) => pref !== value) // Quitamos la opción si ya está seleccionada\r\n+          : [...updatedPreferences, value]; // Agregamos la opción si no está seleccionada\r\n+      });\r\n+    }\r\n+  };\r\n+  // Manejar cambios en los checkboxes\r\n+  const handleCheckboxChange = (setState, value, state) => {\r\n+    if (state.includes(value)) {\r\n+      setState(state.filter((item) => item !== value));\r\n+    } else {\r\n+      setState([...state, value]);\r\n+    }\r\n+  };\r\n+\r\n+  const nextStep = () => setStep((prevStep) => Math.min(prevStep + 1, 4));\r\n+  const prevStep = () => setStep((prevStep) => Math.max(prevStep - 1, 0));\r\n+\r\n+  // Opciones para los select y checkboxes\r\n+  const activityLevelOptions = [\r\n+    { label: 'Sedentario', value: 'sedentary' },\r\n+    { label: 'Ligeramente activo', value: 'lightly_active' },\r\n+    { label: 'Moderadamente activo', value: 'moderately_active' },\r\n+    { label: 'Muy activo', value: 'very_active' },\r\n+    { label: 'Súper activo', value: 'super_active' },\r\n+  ];\r\n+\r\n+  const fitnessGoalOptions = [\r\n+    { label: 'Perder peso', value: 'lose_weight' },\r\n+    { label: 'Ganar masa muscular', value: 'gain_muscle' },\r\n+    { label: 'Mantener peso', value: 'maintain' },\r\n+  ];\r\n+\r\n+  const routinePreferenceOptions = [\r\n+    { label: 'Ejercicio en casa', value: 'home' },\r\n+    { label: 'Ejercicio al aire libre', value: 'outdoor' },\r\n+    { label: 'Ejercicio en el gimnasio', value: 'gym' },\r\n+    { label: 'No estoy seguro', value: 'unsure' },\r\n+  ];\r\n+\r\n+  const dietaryOptions = [\r\n+    { label: 'Vegetariano', value: 'vegetarian' },\r\n+    { label: 'Vegano', value: 'vegan' },\r\n+    { label: 'Sin gluten', value: 'gluten_free' },\r\n+    { label: 'Sin lactosa', value: 'lactose_free' },\r\n+    { label: 'Paleo', value: 'paleo' },\r\n+    { label: 'Cetogénica', value: 'keto' },\r\n+    { label: 'Sin preferencias dietéticas', value: 'no_dietary_preference' }, // Nueva opción\r\n+\r\n+  ];\r\n+\r\n+\r\n+  const equipmentOptions = [\r\n+    { label: 'Peso corporal', value: 'body weight' },\r\n+    { label: 'Mancuernas', value: 'dumbbells' },\r\n+    { label: 'Bandas de resistencia', value: 'resistance band' },\r\n+    { label: 'Barra', value: 'barbell' },\r\n+    { label: 'Máquinas de gimnasio', value: 'machine' },\r\n+  ];\r\n+\r\n+  return (\r\n+    <div className=\"flex flex-col items-center min-h-screen bg-white font-['Noto_Sans', 'Work_Sans', sans-serif]\">\r\n+      <form onSubmit={handleSubmit} className=\"w-[512px] max-w-full p-8 bg-white rounded-lg shadow-md\">\r\n+        {/* Paso 0: Datos Personales */}\r\n+        {step === 0 && (\r\n+          <div>\r\n+            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Datos Personales</h3>\r\n+            {/* Peso */}\r\n+            <div className=\"px-4 py-3\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Peso (kg)</span>\r\n+                <input\r\n+                  type=\"number\"\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n+                  value={weight}\r\n+                  onChange={(e) => setWeight(e.target.value)}\r\n+                  required\r\n+                />\r\n+                {errors.weight && <p style={{ color: 'red' }}>{errors.weight}</p>}\r\n+              </label>\r\n+            </div>\r\n+            {/* Altura */}\r\n+            <div className=\"px-4 py-3\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Altura (cm)</span>\r\n+                <input\r\n+                  type=\"number\"\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n+                  value={height}\r\n+                  onChange={(e) => setHeight(e.target.value)}\r\n+                  required\r\n+                />\r\n+                {errors.height && <p style={{ color: 'red' }}>{errors.height}</p>}\r\n+              </label>\r\n+            </div>\r\n+            {/* Edad */}\r\n+            <div className=\"px-4 py-3\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Edad</span>\r\n+                <input\r\n+                  type=\"number\"\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n+                  value={age}\r\n+                  onChange={(e) => setAge(e.target.value)}\r\n+                  required\r\n+                />\r\n+                {errors.age && <p style={{ color: 'red' }}>{errors.age}</p>}\r\n+              </label>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* Paso 1: Información adicional */}\r\n+        {step === 1 && (\r\n+          <div>\r\n+            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Información adicional</h3>\r\n+            {/* Género */}\r\n+            <div className=\"px-4 py-3\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Género</span>\r\n+                <select\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n+                  value={gender}\r\n+                  onChange={(e) => setGender(e.target.value)}\r\n+                  required\r\n+                >\r\n+                  <option value=\"\">Seleccionar</option>\r\n+                  <option value=\"male\">Hombre</option>\r\n+                  <option value=\"female\">Mujer</option>\r\n+                </select>\r\n+                {errors.gender && <p style={{ color: 'red' }}>{errors.gender}</p>}\r\n+              </label>\r\n+            </div>\r\n+            {/* Nivel de actividad */}\r\n+            <div className=\"px-4 py-3\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Nivel de actividad</span>\r\n+                <select\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n+                  value={activityLevel}\r\n+                  onChange={(e) => setActivityLevel(e.target.value)}\r\n+                  required\r\n+                >\r\n+                  <option value=\"\">Seleccionar</option>\r\n+                  {activityLevelOptions.map((option) => (\r\n+                    <option key={option.value} value={option.value}>\r\n+                      {option.label}\r\n+                    </option>\r\n+                  ))}\r\n+                </select>\r\n+                {errors.activityLevel && <p style={{ color: 'red' }}>{errors.activityLevel}</p>}\r\n+              </label>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* Paso 2: Preferencias alimenticias */}\r\n+        {step === 2 && (\r\n+          <div>\r\n+            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Preferencias alimenticias</h3>\r\n+            {/* Preferencias dietéticas */}\r\n+            <div className=\"flex gap-3 p-3 flex-wrap\">\r\n+              {dietaryOptions.map((option) => (\r\n+                <div\r\n+                  key={option.value}\r\n+                  onClick={() => handleCheckboxChange(setDietaryPreferences, option.value, dietaryPreferences)}\r\n+                  className={`cursor-pointer flex h-8 items-center justify-center gap-x-2 rounded-xl px-4 ${\r\n+                    dietaryPreferences.includes(option.value) ? 'bg-[#1980e6] text-white' : 'bg-[#f0f2f4] text-[#111418]'\r\n+                  }`}\r\n+                >\r\n+                  <p className=\"text-sm font-medium\">{option.label}</p>\r\n+                </div>\r\n+              ))}\r\n+            </div>\r\n+            {/* Número de comidas por día */}\r\n+            <div className=\"px-4 py-3 mt-4\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Número de comidas por día</span>\r\n+                <input\r\n+                  type=\"number\"\r\n+                  min=\"1\"\r\n+                  max=\"6\"\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n+                  value={mealsPerDay}\r\n+                  onChange={(e) => setMealsPerDay(e.target.value)}\r\n+                  required\r\n+                />\r\n+                {errors.mealsPerDay && <p style={{ color: 'red' }}>{errors.mealsPerDay}</p>}\r\n+              </label>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* Paso 3: Equipamiento disponible */}\r\n+        {step === 3 && (\r\n+          <div>\r\n+            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Equipamiento Disponible</h3>\r\n+            <div className=\"flex gap-3 p-3 flex-wrap\">\r\n+              {equipmentOptions.map((option) => (\r\n+                <div\r\n+                  key={option.value}\r\n+                  onClick={() => handleCheckboxChange(setEquipmentAvailable, option.value, equipmentAvailable)}\r\n+                  className={`cursor-pointer flex h-8 items-center justify-center gap-x-2 rounded-xl px-4 ${\r\n+                    equipmentAvailable.includes(option.value) ? 'bg-[#1980e6] text-white' : 'bg-[#f0f2f4] text-[#111418]'\r\n+                  }`}\r\n+                >\r\n+                  <p className=\"text-sm font-medium\">{option.label}</p>\r\n+                </div>\r\n+              ))}\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* Paso 4: Preferencia de rutina y objetivo de fitness */}\r\n+        {step === 4 && (\r\n+          <div>\r\n+            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Preferencias de Ejercicio y Objetivos</h3>\r\n+            {/* Preferencia de rutina */}\r\n+            <div className=\"px-4 py-3\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Preferencia de rutina de ejercicio</span>\r\n+                <select\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n+                  value={routinePreference}\r\n+                  onChange={(e) => setRoutinePreference(e.target.value)}\r\n+                  required\r\n+                >\r\n+                  <option value=\"\">Seleccionar</option>\r\n+                  {routinePreferenceOptions.map((option) => (\r\n+                    <option key={option.value} value={option.value}>\r\n+                      {option.label}\r\n+                    </option>\r\n+                  ))}\r\n+                </select>\r\n+                {errors.routinePreference && <p style={{ color: 'red' }}>{errors.routinePreference}</p>}\r\n+              </label>\r\n+            </div>\r\n+            {/* Objetivo de fitness */}\r\n+            <div className=\"px-4 py-3\">\r\n+              <label className=\"block pb-2\">\r\n+                <span className=\"text-base font-medium text-[#111418]\">Objetivo de Fitness</span>\r\n+                <select\r\n+                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n+                  value={fitnessGoal}\r\n+                  onChange={(e) => setFitnessGoal(e.target.value)}\r\n+                  required\r\n+                >\r\n+                  <option value=\"\">Seleccionar</option>\r\n+                  {fitnessGoalOptions.map((option) => (\r\n+                    <option key={option.value} value={option.value}>\r\n+                      {option.label}\r\n+                    </option>\r\n+                  ))}\r\n+                </select>\r\n+                {errors.fitnessGoal && <p style={{ color: 'red' }}>{errors.fitnessGoal}</p>}\r\n+              </label>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* Botones de navegación */}\r\n+        <div className=\"flex justify-between mt-6\">\r\n+          {step > 0 && (\r\n+            <button\r\n+              type=\"button\"\r\n+              className=\"bg-gray-300 text-gray-800 font-bold py-2 px-4 rounded\"\r\n+              onClick={prevStep}\r\n+            >\r\n+              Anterior\r\n+            </button>\r\n+          )}\r\n+          {step < 4 ? (\r\n+            <button\r\n+              type=\"button\"\r\n+              className=\"bg-blue-500 text-white font-bold py-2 px-4 rounded\"\r\n+              onClick={nextStep}\r\n+            >\r\n+              Siguiente\r\n+            </button>\r\n+          ) : (\r\n+            <button\r\n+              type=\"submit\"\r\n+              className=\"bg-green-500 text-white font-bold py-2 px-4 rounded\"\r\n+            >\r\n+              Finalizar\r\n+            </button>\r\n+          )}\r\n+        </div>\r\n+      </form>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default Form;\n\\ No newline at end of file\n"
                }
            ],
            "date": 1730410243007,
            "name": "Commit-0",
            "content": "import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Form = ({ setPlan }) => {\r\n  // Estados para todos los campos del formulario básico\r\n  const [weight, setWeight] = useState('');\r\n  const [height, setHeight] = useState('');\r\n  const [age, setAge] = useState('');\r\n  const [gender, setGender] = useState('');\r\n  const [activityLevel, setActivityLevel] = useState('');\r\n  const [dietaryRestrictions, setDietaryRestrictions] = useState([]);\r\n  const [dislikedFoods, setDislikedFoods] = useState('');\r\n  const [trainingPreference, setTrainingPreference] = useState([]);\r\n  const [fitnessGoals, setFitnessGoals] = useState([]);\r\n\r\n  // Estados para datos avanzados y dispositivos inteligentes\r\n  const [advanced, setAdvanced] = useState(false);\r\n  const [bodyFat, setBodyFat] = useState('');\r\n  const [muscleMass, setMuscleMass] = useState('');\r\n  const [heartRate, setHeartRate] = useState('');\r\n  const [steps, setSteps] = useState('');\r\n  const [smartDevice, setSmartDevice] = useState(false);\r\n\r\n  const [step, setStep] = useState(0);\r\n  const [errors, setErrors] = useState({}); // Estado de errores\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n  \r\n    // Validación para el peso\r\n    if (!weight || isNaN(weight) || weight < 20 || weight > 500) {\r\n      newErrors.weight = 'El peso debe estar entre 20 kg y 500 kg';\r\n    }\r\n  \r\n    // Validación para la altura\r\n    if (!height || isNaN(height) || height < 50 || height > 300) {\r\n      newErrors.height = 'La altura debe estar entre 50 cm y 300 cm';\r\n    }\r\n  \r\n    // Validación para la edad\r\n    if (!age || isNaN(age) || age < 10 || age > 120) {\r\n      newErrors.age = 'La edad debe estar entre 10 y 120 años';\r\n    }\r\n  \r\n    // Validación para el género\r\n    if (!gender) {\r\n      newErrors.gender = 'Selecciona un género';\r\n    }\r\n  \r\n    // Validación para el nivel de actividad\r\n    if (!activityLevel) {\r\n      newErrors.activityLevel = 'Selecciona un nivel de actividad';\r\n    }\r\n  \r\n    // Validación para los objetivos de fitness\r\n    if (fitnessGoals.length === 0) {\r\n      newErrors.fitnessGoals = 'Selecciona al menos un objetivo de fitness';\r\n    }\r\n  \r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n  \r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (validateForm()) {\r\n      const userData = {\r\n        weight: parseFloat(weight),\r\n        height: parseFloat(height),\r\n        age: parseInt(age),\r\n        gender,\r\n        activity_level: activityLevel,\r\n        goals: fitnessGoals,\r\n        routine_preference: trainingPreference.join(', ') || 'Ninguno',\r\n        dietary_restrictions: dietaryRestrictions,\r\n        disliked_foods: dislikedFoods,\r\n        ...(advanced && { body_fat: parseFloat(bodyFat), muscle_mass: parseFloat(muscleMass) }),\r\n        ...(smartDevice && { heart_rate: parseFloat(heartRate), steps: parseInt(steps) })\r\n      };\r\n\r\n      try {\r\n        const response = await axios.post('http://localhost:8000/generate_plan/', userData);\r\n        setPlan(response.data);\r\n        setHasPlan(true); // Actualiza hasPlan a true\r\n    } catch (error) {\r\n        console.error('Error al obtener el plan:', error);\r\n    }\r\n}\r\n};\r\n\r\n  const handleCheckboxChange = (setState, value, state) => {\r\n    if (state.includes(value)) {\r\n      setState(state.filter((item) => item !== value));\r\n    } else {\r\n      setState([...state, value]);\r\n    }\r\n  };\r\n\r\n  const nextStep = () => setStep((prevStep) => Math.min(prevStep + 1, 5));\r\n  const prevStep = () => setStep((prevStep) => Math.max(prevStep - 1, 0));\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center min-h-screen bg-white font-['Noto_Sans', 'Work_Sans', sans-serif]\">\r\n      <form onSubmit={handleSubmit} className=\"w-[512px] max-w-full p-8 bg-white rounded-lg shadow-md\">\r\n\r\n        {/* Paso 0: Datos Personales */}\r\n        {step === 0 && (\r\n          <div>\r\n            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Datos Personales</h3>\r\n            <div className=\"px-4 py-3\">\r\n              <label className=\"block pb-2\">\r\n                <span className=\"text-base font-medium text-[#111418]\">Peso (kg)</span>\r\n                <input\r\n                  type=\"number\"\r\n                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n                  value={weight}\r\n                  onChange={(e) => setWeight(e.target.value)}\r\n                  required\r\n                />\r\n                {errors.weight && <p style={{ color: 'red' }}>{errors.weight}</p>}\r\n              </label>\r\n            </div>\r\n            <div className=\"px-4 py-3\">\r\n              <label className=\"block pb-2\">\r\n                <span className=\"text-base font-medium text-[#111418]\">Altura (cm)</span>\r\n                <input\r\n                  type=\"number\"\r\n                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n                  value={height}\r\n                  onChange={(e) => setHeight(e.target.value)}\r\n                  required\r\n                />\r\n                {errors.height && <p style={{ color: 'red' }}>{errors.height}</p>}\r\n              </label>\r\n            </div>\r\n            <div className=\"px-4 py-3\">\r\n              <label className=\"block pb-2\">\r\n                <span className=\"text-base font-medium text-[#111418]\">Edad</span>\r\n                <input\r\n                  type=\"number\"\r\n                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n                  value={age}\r\n                  onChange={(e) => setAge(e.target.value)}\r\n                  required\r\n                />\r\n                {errors.age && <p style={{ color: 'red' }}>{errors.age}</p>}\r\n              </label>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Paso 1: Información adicional */}\r\n        {step === 1 && (\r\n          <div>\r\n            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Información adicional</h3>\r\n            <div className=\"px-4 py-3\">\r\n              <label className=\"block pb-2\">\r\n                <span className=\"text-base font-medium text-[#111418]\">Sexo</span>\r\n                <select\r\n                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n                  value={gender}\r\n                  onChange={(e) => setGender(e.target.value)}\r\n                  required\r\n                >\r\n                  <option value=\"\">Seleccionar</option>\r\n                  <option value=\"male\">Hombre</option>\r\n                  <option value=\"female\">Mujer</option>\r\n                </select>\r\n                {errors.gender && <p style={{ color: 'red' }}>{errors.gender}</p>}\r\n              </label>\r\n            </div>\r\n            <div className=\"px-4 py-3\">\r\n              <label className=\"block pb-2\">\r\n                <span className=\"text-base font-medium text-[#111418]\">Nivel de actividad</span>\r\n                <select\r\n                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418]\"\r\n                  value={activityLevel}\r\n                  onChange={(e) => setActivityLevel(e.target.value)}\r\n                  required\r\n                >\r\n                  <option value=\"\">Seleccionar</option>\r\n                  <option value=\"sedentary\">Sedentario</option>\r\n                  <option value=\"lightly_active\">Ligeramente activo</option>\r\n                  <option value=\"moderately_active\">Moderadamente activo</option>\r\n                  <option value=\"very_active\">Muy activo</option>\r\n                  <option value=\"super_active\">Súper activo</option>\r\n                </select>\r\n                {errors.activityLevel && <p style={{ color: 'red' }}>{errors.activityLevel}</p>}\r\n              </label>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Paso 2: Datos avanzados y dispositivos */}\r\n        {step === 2 && (\r\n          <div>\r\n            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Datos avanzados y dispositivos</h3>\r\n            <label className=\"block pb-2\">\r\n              <input type=\"checkbox\" checked={advanced} onChange={(e) => setAdvanced(e.target.checked)} />\r\n              <span className=\"ml-2\">Proveer datos avanzados</span>\r\n            </label>\r\n\r\n            {advanced && (\r\n              <div>\r\n                <div className=\"px-4 py-3\">\r\n                  <label className=\"block pb-2\">\r\n                    <span className=\"text-base font-medium text-[#111418]\">Porcentaje de grasa corporal (%)</span>\r\n                    <input\r\n                      type=\"number\"\r\n                      className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n                      value={bodyFat}\r\n                      onChange={(e) => setBodyFat(e.target.value)}\r\n                    />\r\n                  </label>\r\n                </div>\r\n                <div className=\"px-4 py-3\">\r\n                  <label className=\"block pb-2\">\r\n                    <span className=\"text-base font-medium text-[#111418]\">Masa muscular (kg)</span>\r\n                    <input\r\n                      type=\"number\"\r\n                      className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n                      value={muscleMass}\r\n                      onChange={(e) => setMuscleMass(e.target.value)}\r\n                    />\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            <label className=\"block mt-4\">\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={smartDevice}\r\n                onChange={(e) => setSmartDevice(e.target.checked)}\r\n              />\r\n              <span className=\"ml-2\">Sincronizar con un dispositivo inteligente</span>\r\n            </label>\r\n\r\n            {smartDevice && (\r\n              <div className=\"mt-4\">\r\n                <div className=\"px-4 py-3\">\r\n                  <label className=\"block pb-2\">\r\n                    <span className=\"text-base font-medium text-[#111418]\">Frecuencia cardíaca en reposo (BPM)</span>\r\n                    <input\r\n                      type=\"number\"\r\n                      className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n                      value={heartRate}\r\n                      onChange={(e) => setHeartRate(e.target.value)}\r\n                    />\r\n                  </label>\r\n                </div>\r\n                <div className=\"px-4 py-3\">\r\n                  <label className=\"block pb-2\">\r\n                    <span className=\"text-base font-medium text-[#111418]\">Pasos diarios</span>\r\n                    <input\r\n                      type=\"number\"\r\n                      className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n                      value={steps}\r\n                      onChange={(e) => setSteps(e.target.value)}\r\n                    />\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {/* Paso 3: Preferencias alimenticias */}\r\n        {step === 3 && (\r\n          <div>\r\n            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Preferencias alimenticias</h3>\r\n            <div className=\"flex gap-3 p-3 flex-wrap\">\r\n              {['Sin restricciones', 'Vegetariano', 'Vegano', 'Sin gluten', 'Sin lactosa', 'Sin nueces', 'Dieta cetogénica'].map((preference) => (\r\n                <div\r\n                  key={preference}\r\n                  onClick={() => handleCheckboxChange(setDietaryRestrictions, preference, dietaryRestrictions)}\r\n                  className={`cursor-pointer flex h-8 items-center justify-center gap-x-2 rounded-xl px-4 ${\r\n                    dietaryRestrictions.includes(preference) ? 'bg-[#1980e6] text-white' : 'bg-[#f0f2f4] text-[#111418]'\r\n                  }`}\r\n                >\r\n                  <p className=\"text-sm font-medium\">{preference}</p>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div className=\"px-4 py-3 mt-4\">\r\n              <label className=\"block pb-2\">\r\n                <span className=\"text-base font-medium text-[#111418]\">Alimentos que prefieres evitar</span>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-input w-full mt-1 p-3 border rounded-xl h-14 border-[#dce0e5] text-[#111418] placeholder:text-[#637588]\"\r\n                  placeholder=\"Ej. Brócoli, pescado\"\r\n                  value={dislikedFoods}\r\n                  onChange={(e) => setDislikedFoods(e.target.value)}\r\n                />\r\n              </label>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Paso 4: Tipo de entrenamiento */}\r\n        {step === 4 && (\r\n          <div>\r\n            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Tipo de entrenamiento</h3>\r\n            <div className=\"flex gap-3 p-3 flex-wrap\">\r\n              {['Ejercicio en casa', 'Ejercicio al aire libre', 'Ejercicio en el gimnasio', 'Ninguno', 'No estoy seguro'].map((preference) => (\r\n                <div\r\n                  key={preference}\r\n                  onClick={() => handleCheckboxChange(setTrainingPreference, preference, trainingPreference)}\r\n                  className={`cursor-pointer flex h-8 items-center justify-center gap-x-2 rounded-xl px-4 ${\r\n                    trainingPreference.includes(preference) ? 'bg-[#1980e6] text-white' : 'bg-[#f0f2f4] text-[#111418]'\r\n                  }`}\r\n                >\r\n                  <p className=\"text-sm font-medium\">{preference}</p>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Paso 5: Objetivos de Fitness */}\r\n        {step === 5 && (\r\n          <div>\r\n            <h3 className=\"text-2xl font-bold leading-tight pb-2\">Objetivos de Fitness</h3>\r\n            <div className=\"flex gap-3 p-3 flex-wrap\">\r\n              {['Perder peso', 'Ganar masa muscular', 'Mejorar la salud', 'Mejorar el rendimiento'].map((goal) => (\r\n                <div\r\n                  key={goal}\r\n                  onClick={() => handleCheckboxChange(setFitnessGoals, goal, fitnessGoals)}\r\n                  className={`cursor-pointer flex h-8 items-center justify-center gap-x-2 rounded-xl px-4 ${\r\n                    fitnessGoals.includes(goal) ? 'bg-[#1980e6] text-white' : 'bg-[#f0f2f4] text-[#111418]'\r\n                  }`}\r\n                >\r\n                  <p className=\"text-sm font-medium\">{goal}</p>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Botones de navegación */}\r\n        <div className=\"flex justify-between mt-6\">\r\n          {step > 0 && (\r\n            <button\r\n              type=\"button\"\r\n              className=\"bg-gray-300 text-gray-800 font-bold py-2 px-4 rounded\"\r\n              onClick={prevStep}\r\n            >\r\n              Anterior\r\n            </button>\r\n          )}\r\n          {step < 5 ? (\r\n            <button\r\n              type=\"button\"\r\n              className=\"bg-blue-500 text-white font-bold py-2 px-4 rounded\"\r\n              onClick={nextStep}\r\n            >\r\n              Siguiente\r\n            </button>\r\n          ) : (\r\n            <button\r\n              type=\"submit\"\r\n              className=\"bg-green-500 text-white font-bold py-2 px-4 rounded\"\r\n            >\r\n              Finalizar\r\n            </button>\r\n          )}\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n"
        }
    ]
}