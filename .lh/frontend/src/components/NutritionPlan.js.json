{
    "sourceFile": "frontend/src/components/NutritionPlan.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 31,
            "patches": [
                {
                    "date": 1730405370601,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1730406306695,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,35 @@\n+import React from 'react';\r\n+\r\n+const NutritionPlan = ({ plan, onStartFirstDay, onDeletePlan }) => {\r\n+  return (\r\n+    <div className=\"p-8 max-w-4xl mx-auto\">\r\n+      <h1 className=\"text-3xl font-bold mb-4\">Tu Plan</h1>\r\n+      <p className=\"text-gray-600 mb-8\">\r\n+        Basado en tu evaluación, hemos creado un plan personalizado para ayudarte a alcanzar tus objetivos.\r\n+      </p>\r\n+\r\n+      {/* Sección de Nutrición */}\r\n+      <div className=\"mb-8\">\r\n+        <h2 className=\"text-xl font-semibold mb-2\">Nutrición</h2>\r\n+        <p>{plan.nutrition_plan.calories.toFixed(0)} calorías por día</p>\r\n+        <p>\r\n+          {Math.round((plan.nutrition_plan.carbs / (plan.nutrition_plan.carbs + plan.nutrition_plan.protein + plan.nutrition_plan.fats)) * 100)}%\r\n+          carbohidratos, {Math.round((plan.nutrition_plan.protein / (plan.nutrition_plan.carbs + plan.nutrition_plan.protein + plan.nutrition_plan.fats)) * 100)}%\r\n+          proteínas, {Math.round((plan.nutrition_plan.fats / (plan.nutrition_plan.carbs + plan.nutrition_plan.protein + plan.nutrition_plan.fats)) * 100)}% grasas\r\n+        </p>\r\n+      </div>\r\n+\r\n+      {/* Botón para eliminar el plan */}\r\n+      <div className=\"mt-8\">\r\n+        <button\r\n+          onClick={onDeletePlan}\r\n+          className=\"px-6 py-3 bg-red-500 text-white rounded-lg font-bold hover:bg-red-600\"\r\n+        >\r\n+          Eliminar Plan\r\n+        </button>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default NutritionPlan;\r\n"
                },
                {
                    "date": 1730406315236,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,74 @@\n+import React from 'react';\r\n+\r\n+const NutritionPlan = ({ plan, onStartFirstDay }) => {\r\n+  // Asegurarse de que el plan y sus propiedades estén definidas antes de usarlas\r\n+  const calories = plan?.nutrition_plan?.calories ? plan.nutrition_plan.calories.toFixed(0) : '0';\r\n+  const carbs = plan?.nutrition_plan?.carbs || 0;\r\n+  const protein = plan?.nutrition_plan?.protein || 0;\r\n+  const fats = plan?.nutrition_plan?.fats || 0;\r\n+\r\n+  const carbPercentage = Math.round((carbs / (carbs + protein + fats)) * 100) || 0;\r\n+  const proteinPercentage = Math.round((protein / (carbs + protein + fats)) * 100) || 0;\r\n+  const fatPercentage = Math.round((fats / (carbs + protein + fats)) * 100) || 0;\r\n+\r\n+  return (\r\n+    <div className=\"p-8 max-w-4xl mx-auto\">\r\n+      <h1 className=\"text-3xl font-bold mb-4\">Your Plan</h1>\r\n+      <p className=\"text-gray-600 mb-8\">\r\n+        Based on your assessment, we've created a personalized plan to help you reach your goals.\r\n+      </p>\r\n+\r\n+      {/* Nutrition Section */}\r\n+      <div className=\"mb-8\">\r\n+        <h2 className=\"text-xl font-semibold mb-2\">Nutrition</h2>\r\n+        <p>{calories} calories per day</p>\r\n+        <p>\r\n+          {carbPercentage}% carbs, {proteinPercentage}% protein, {fatPercentage}% fat\r\n+        </p>\r\n+      </div>\r\n+\r\n+      {/* Meal Plan Section */}\r\n+      <div className=\"mb-8\">\r\n+        <h2 className=\"text-xl font-semibold mb-2\">Meal Plan</h2>\r\n+        <div className=\"flex gap-3 flex-wrap\">\r\n+          {['Breakfast', 'Morning snack', 'Lunch', 'Afternoon snack', 'Dinner'].map((meal) => (\r\n+            <button\r\n+              key={meal}\r\n+              className=\"px-4 py-2 bg-gray-200 rounded-full text-gray-800 font-medium\"\r\n+            >\r\n+              {meal}\r\n+            </button>\r\n+          ))}\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Workout Section */}\r\n+      <div className=\"mb-8\">\r\n+        <h2 className=\"text-xl font-semibold mb-2\">Workouts</h2>\r\n+        <p>4 workouts per week</p>\r\n+        <div className=\"flex gap-3 flex-wrap\">\r\n+          {['Strength', 'Cardio', 'Mobility', 'Recovery'].map((workout) => (\r\n+            <button\r\n+              key={workout}\r\n+              className=\"px-4 py-2 bg-gray-200 rounded-full text-gray-800 font-medium\"\r\n+            >\r\n+              {workout}\r\n+            </button>\r\n+          ))}\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Button to Start Plan */}\r\n+      <div className=\"mt-8\">\r\n+        <button\r\n+          onClick={onStartFirstDay}\r\n+          className=\"px-6 py-3 bg-yellow-500 text-white rounded-lg font-bold hover:bg-yellow-600\"\r\n+        >\r\n+          Start Day 1\r\n+        </button>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default NutritionPlan;\r\n"
                },
                {
                    "date": 1730406320764,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,35 @@\n+import React from 'react';\r\n+\r\n+const NutritionPlan = ({ plan, onStartFirstDay, onDeletePlan }) => {\r\n+  return (\r\n+    <div className=\"p-8 max-w-4xl mx-auto\">\r\n+      <h1 className=\"text-3xl font-bold mb-4\">Tu Plan</h1>\r\n+      <p className=\"text-gray-600 mb-8\">\r\n+        Basado en tu evaluación, hemos creado un plan personalizado para ayudarte a alcanzar tus objetivos.\r\n+      </p>\r\n+\r\n+      {/* Sección de Nutrición */}\r\n+      <div className=\"mb-8\">\r\n+        <h2 className=\"text-xl font-semibold mb-2\">Nutrición</h2>\r\n+        <p>{plan.nutrition_plan.calories.toFixed(0)} calorías por día</p>\r\n+        <p>\r\n+          {Math.round((plan.nutrition_plan.carbs / (plan.nutrition_plan.carbs + plan.nutrition_plan.protein + plan.nutrition_plan.fats)) * 100)}%\r\n+          carbohidratos, {Math.round((plan.nutrition_plan.protein / (plan.nutrition_plan.carbs + plan.nutrition_plan.protein + plan.nutrition_plan.fats)) * 100)}%\r\n+          proteínas, {Math.round((plan.nutrition_plan.fats / (plan.nutrition_plan.carbs + plan.nutrition_plan.protein + plan.nutrition_plan.fats)) * 100)}% grasas\r\n+        </p>\r\n+      </div>\r\n+\r\n+      {/* Botón para eliminar el plan */}\r\n+      <div className=\"mt-8\">\r\n+        <button\r\n+          onClick={onDeletePlan}\r\n+          className=\"px-6 py-3 bg-red-500 text-white rounded-lg font-bold hover:bg-red-600\"\r\n+        >\r\n+          Eliminar Plan\r\n+        </button>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default NutritionPlan;\r\n"
                },
                {
                    "date": 1730406415795,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,65 @@\n+const NutritionPlan = ({ plan, onStartFirstDay }) => {\r\n+  if (!plan || !plan.nutrition_plan) {\r\n+      return <p>No se ha encontrado un plan nutricional válido.</p>;\r\n+  }\r\n+\r\n+  const { calories, carbs, protein, fats } = plan.nutrition_plan;\r\n+\r\n+  return (\r\n+      <div className=\"p-8 max-w-4xl mx-auto\">\r\n+          <h1 className=\"text-3xl font-bold mb-4\">Tu Plan</h1>\r\n+          <p className=\"text-gray-600 mb-8\">\r\n+              Basado en tu evaluación, hemos creado un plan personalizado para ayudarte a alcanzar tus objetivos.\r\n+          </p>\r\n+\r\n+          {/* Sección de Nutrición */}\r\n+          <div className=\"mb-8\">\r\n+              <h2 className=\"text-xl font-semibold mb-2\">Nutrición</h2>\r\n+              <p>{calories.toFixed(0)} calorías por día</p>\r\n+              <p>\r\n+                  {Math.round((carbs / (carbs + protein + fats)) * 100)}% carbohidratos, {Math.round((protein / (carbs + protein + fats)) * 100)}% proteínas, {Math.round((fats / (carbs + protein + fats)) * 100)}% grasas\r\n+              </p>\r\n+          </div>\r\n+\r\n+          {/* Sección de Plan de Comidas */}\r\n+          <div className=\"mb-8\">\r\n+              <h2 className=\"text-xl font-semibold mb-2\">Plan de Comidas</h2>\r\n+              <div className=\"flex gap-3 flex-wrap\">\r\n+                  {['Desayuno', 'Merienda de la mañana', 'Almuerzo', 'Merienda de la tarde', 'Cena'].map((meal) => (\r\n+                      <button\r\n+                          key={meal}\r\n+                          className=\"px-4 py-2 bg-gray-200 rounded-full text-gray-800 font-medium\"\r\n+                      >\r\n+                          {meal}\r\n+                      </button>\r\n+                  ))}\r\n+              </div>\r\n+          </div>\r\n+\r\n+          {/* Sección de Ejercicios */}\r\n+          <div className=\"mb-8\">\r\n+              <h2 className=\"text-xl font-semibold mb-2\">Ejercicios</h2>\r\n+              <p>4 entrenamientos por semana</p>\r\n+              <div className=\"flex gap-3 flex-wrap\">\r\n+                  {['Fuerza', 'Cardio', 'Movilidad', 'Recuperación'].map((workout) => (\r\n+                      <button\r\n+                          key={workout}\r\n+                          className=\"px-4 py-2 bg-gray-200 rounded-full text-gray-800 font-medium\"\r\n+                      >\r\n+                          {workout}\r\n+                      </button>\r\n+                  ))}\r\n+              </div>\r\n+          </div>\r\n+\r\n+          {/* Botón para Iniciar el Plan */}\r\n+          <div className=\"mt-8\">\r\n+              <button onClick={onStartFirstDay} className=\"px-6 py-3 bg-yellow-500 text-white rounded-lg font-bold hover:bg-yellow-600\">\r\n+                  Iniciar Día 1\r\n+              </button>\r\n+          </div>\r\n+      </div>\r\n+  );\r\n+};\r\n+\r\n+export default NutritionPlan;\r\n"
                },
                {
                    "date": 1730406537800,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,63 @@\n+import React from 'react';\r\n+\r\n+const NutritionPlan = ({ plan, onStartFirstDay }) => {\r\n+  return (\r\n+    <div className=\"p-8 max-w-4xl mx-auto\">\r\n+      <h1 className=\"text-3xl font-bold mb-4\">Your Plan</h1>\r\n+      <p className=\"text-gray-600 mb-8\">\r\n+        Based on your assessment, we've created a personalized plan to help you reach your goals.\r\n+      </p>\r\n+\r\n+      {/* Nutrition Section */}\r\n+      <div className=\"mb-8\">\r\n+        <h2 className=\"text-xl font-semibold mb-2\">Nutrition</h2>\r\n+        <p>{plan.nutrition_plan.calories.toFixed(0)} calories per day</p>\r\n+        <p>\r\n+          {Math.round((plan.nutrition_plan.carbs / (plan.nutrition_plan.carbs + plan.nutrition_plan.protein + plan.nutrition_plan.fats)) * 100)}%\r\n+          carbs, {Math.round((plan.nutrition_plan.protein / (plan.nutrition_plan.carbs + plan.nutrition_plan.protein + plan.nutrition_plan.fats)) * 100)}%\r\n+          protein, {Math.round((plan.nutrition_plan.fats / (plan.nutrition_plan.carbs + plan.nutrition_plan.protein + plan.nutrition_plan.fats)) * 100)}% fat\r\n+        </p>\r\n+      </div>\r\n+\r\n+      {/* Meal Plan Section */}\r\n+      <div className=\"mb-8\">\r\n+        <h2 className=\"text-xl font-semibold mb-2\">Meal Plan</h2>\r\n+        <div className=\"flex gap-3 flex-wrap\">\r\n+          {['Breakfast', 'Morning snack', 'Lunch', 'Afternoon snack', 'Dinner'].map((meal) => (\r\n+            <button\r\n+              key={meal}\r\n+              className=\"px-4 py-2 bg-gray-200 rounded-full text-gray-800 font-medium\"\r\n+            >\r\n+              {meal}\r\n+            </button>\r\n+          ))}\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Workout Section */}\r\n+      <div className=\"mb-8\">\r\n+        <h2 className=\"text-xl font-semibold mb-2\">Workouts</h2>\r\n+        <p>4 workouts per week</p>\r\n+        <div className=\"flex gap-3 flex-wrap\">\r\n+          {['Strength', 'Cardio', 'Mobility', 'Recovery'].map((workout) => (\r\n+            <button\r\n+              key={workout}\r\n+              className=\"px-4 py-2 bg-gray-200 rounded-full text-gray-800 font-medium\"\r\n+            >\r\n+              {workout}\r\n+            </button>\r\n+          ))}\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Button to Start Plan */}\r\n+      <div className=\"mt-8\">\r\n+        <button onClick={onStartFirstDay}className=\"px-6 py-3 bg-yellow-500 text-white rounded-lg font-bold hover:bg-yellow-600\">\r\n+          Start Day 1\r\n+        </button>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default NutritionPlan;\r\n"
                },
                {
                    "date": 1730406670496,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,63 @@\n+import React from 'react';\r\n+\r\n+const NutritionPlan = ({ plan, onStartFirstDay }) => {\r\n+  return (\r\n+    <div className=\"p-8 max-w-4xl mx-auto\">\r\n+      <h1 className=\"text-3xl font-bold mb-4\">Your Plan</h1>\r\n+      <p className=\"text-gray-600 mb-8\">\r\n+        Based on your assessment, we've created a personalized plan to help you reach your goals.\r\n+      </p>\r\n+\r\n+      {/* Nutrition Section */}\r\n+      <div className=\"mb-8\">\r\n+        <h2 className=\"text-xl font-semibold mb-2\">Nutrition</h2>\r\n+        <p>{plan.nutrition_plan.calories.toFixed(0)} calories per day</p>\r\n+        <p>\r\n+          {Math.round((plan.nutrition_plan.carbs / (plan.nutrition_plan.carbs + plan.nutrition_plan.protein + plan.nutrition_plan.fats)) * 100)}%\r\n+          carbs, {Math.round((plan.nutrition_plan.protein / (plan.nutrition_plan.carbs + plan.nutrition_plan.protein + plan.nutrition_plan.fats)) * 100)}%\r\n+          protein, {Math.round((plan.nutrition_plan.fats / (plan.nutrition_plan.carbs + plan.nutrition_plan.protein + plan.nutrition_plan.fats)) * 100)}% fat\r\n+        </p>\r\n+      </div>\r\n+\r\n+      {/* Meal Plan Section */}\r\n+      <div className=\"mb-8\">\r\n+        <h2 className=\"text-xl font-semibold mb-2\">Meal Plan</h2>\r\n+        <div className=\"flex gap-3 flex-wrap\">\r\n+          {['Breakfast', 'Morning snack', 'Lunch', 'Afternoon snack', 'Dinner'].map((meal) => (\r\n+            <button\r\n+              key={meal}\r\n+              className=\"px-4 py-2 bg-gray-200 rounded-full text-gray-800 font-medium\"\r\n+            >\r\n+              {meal}\r\n+            </button>\r\n+          ))}\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Workout Section */}\r\n+      <div className=\"mb-8\">\r\n+        <h2 className=\"text-xl font-semibold mb-2\">Workouts</h2>\r\n+        <p>4 workouts per week</p>\r\n+        <div className=\"flex gap-3 flex-wrap\">\r\n+          {['Strength', 'Cardio', 'Mobility', 'Recovery'].map((workout) => (\r\n+            <button\r\n+              key={workout}\r\n+              className=\"px-4 py-2 bg-gray-200 rounded-full text-gray-800 font-medium\"\r\n+            >\r\n+              {workout}\r\n+            </button>\r\n+          ))}\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Button to Start Plan */}\r\n+      <div className=\"mt-8\">\r\n+        <button onClick={onStartFirstDay}className=\"px-6 py-3 bg-yellow-500 text-white rounded-lg font-bold hover:bg-yellow-600\">\r\n+          Start Day 1\r\n+        </button>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default NutritionPlan;\r\n"
                },
                {
                    "date": 1730407978361,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,72 @@\n+import React from 'react';\r\n+\r\n+const NutritionPlan = ({ plan, onStartFirstDay, onDeletePlan }) => {\r\n+    return (\r\n+        <div className=\"p-8 max-w-4xl mx-auto\">\r\n+            <h1 className=\"text-3xl font-bold mb-4\">Tu Plan</h1>\r\n+            <p className=\"text-gray-600 mb-8\">\r\n+                Basado en tu evaluación, hemos creado un plan personalizado para ayudarte a alcanzar tus objetivos.\r\n+            </p>\r\n+\r\n+            {/* Sección de Nutrición */}\r\n+            <div className=\"mb-8\">\r\n+                <h2 className=\"text-xl font-semibold mb-2\">Nutrición</h2>\r\n+                <p>{plan.nutrition_plan.calories.toFixed(0)} calorías por día</p>\r\n+                <p>\r\n+                    {Math.round((plan.nutrition_plan.carbs / (plan.nutrition_plan.carbs + plan.nutrition_plan.protein + plan.nutrition_plan.fats)) * 100)}%\r\n+                    carbohidratos, {Math.round((plan.nutrition_plan.protein / (plan.nutrition_plan.carbs + plan.nutrition_plan.protein + plan.nutrition_plan.fats)) * 100)}%\r\n+                    proteínas, {Math.round((plan.nutrition_plan.fats / (plan.nutrition_plan.carbs + plan.nutrition_plan.protein + plan.nutrition_plan.fats)) * 100)}% grasas\r\n+                </p>\r\n+            </div>\r\n+\r\n+            {/* Sección de Plan de Comidas */}\r\n+            <div className=\"mb-8\">\r\n+                <h2 className=\"text-xl font-semibold mb-2\">Plan de Comidas</h2>\r\n+                <div className=\"flex gap-3 flex-wrap\">\r\n+                    {['Desayuno', 'Merienda de la mañana', 'Almuerzo', 'Merienda de la tarde', 'Cena'].map((meal) => (\r\n+                        <button\r\n+                            key={meal}\r\n+                            className=\"px-4 py-2 bg-gray-200 rounded-full text-gray-800 font-medium\"\r\n+                        >\r\n+                            {meal}\r\n+                        </button>\r\n+                    ))}\r\n+                </div>\r\n+            </div>\r\n+\r\n+            {/* Sección de Entrenamientos */}\r\n+            <div className=\"mb-8\">\r\n+                <h2 className=\"text-xl font-semibold mb-2\">Entrenamientos</h2>\r\n+                <p>4 entrenamientos por semana</p>\r\n+                <div className=\"flex gap-3 flex-wrap\">\r\n+                    {['Fuerza', 'Cardio', 'Movilidad', 'Recuperación'].map((workout) => (\r\n+                        <button\r\n+                            key={workout}\r\n+                            className=\"px-4 py-2 bg-gray-200 rounded-full text-gray-800 font-medium\"\r\n+                        >\r\n+                            {workout}\r\n+                        </button>\r\n+                    ))}\r\n+                </div>\r\n+            </div>\r\n+\r\n+            {/* Botones para iniciar el plan y eliminar el plan */}\r\n+            <div className=\"mt-8 flex gap-4\">\r\n+                <button\r\n+                    onClick={onStartFirstDay}\r\n+                    className=\"px-6 py-3 bg-yellow-500 text-white rounded-lg font-bold hover:bg-yellow-600\"\r\n+                >\r\n+                    Iniciar Día 1\r\n+                </button>\r\n+                <button\r\n+                    onClick={onDeletePlan}\r\n+                    className=\"px-6 py-3 bg-red-500 text-white rounded-lg font-bold hover:bg-red-600\"\r\n+                >\r\n+                    Eliminar Plan\r\n+                </button>\r\n+            </div>\r\n+        </div>\r\n+    );\r\n+};\r\n+\r\n+export default NutritionPlan;\r\n"
                },
                {
                    "date": 1730408000550,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,74 @@\n+import React from 'react';\r\n+\r\n+const NutritionPlan = ({ plan, onStartFirstDay }) => {\r\n+  // Asegurarse de que el plan y sus propiedades estén definidas antes de usarlas\r\n+  const calories = plan?.nutrition_plan?.calories ? plan.nutrition_plan.calories.toFixed(0) : '0';\r\n+  const carbs = plan?.nutrition_plan?.carbs || 0;\r\n+  const protein = plan?.nutrition_plan?.protein || 0;\r\n+  const fats = plan?.nutrition_plan?.fats || 0;\r\n+\r\n+  const carbPercentage = Math.round((carbs / (carbs + protein + fats)) * 100) || 0;\r\n+  const proteinPercentage = Math.round((protein / (carbs + protein + fats)) * 100) || 0;\r\n+  const fatPercentage = Math.round((fats / (carbs + protein + fats)) * 100) || 0;\r\n+\r\n+  return (\r\n+    <div className=\"p-8 max-w-4xl mx-auto\">\r\n+      <h1 className=\"text-3xl font-bold mb-4\">Your Plan</h1>\r\n+      <p className=\"text-gray-600 mb-8\">\r\n+        Based on your assessment, we've created a personalized plan to help you reach your goals.\r\n+      </p>\r\n+\r\n+      {/* Nutrition Section */}\r\n+      <div className=\"mb-8\">\r\n+        <h2 className=\"text-xl font-semibold mb-2\">Nutrition</h2>\r\n+        <p>{calories} calories per day</p>\r\n+        <p>\r\n+          {carbPercentage}% carbs, {proteinPercentage}% protein, {fatPercentage}% fat\r\n+        </p>\r\n+      </div>\r\n+\r\n+      {/* Meal Plan Section */}\r\n+      <div className=\"mb-8\">\r\n+        <h2 className=\"text-xl font-semibold mb-2\">Meal Plan</h2>\r\n+        <div className=\"flex gap-3 flex-wrap\">\r\n+          {['Breakfast', 'Morning snack', 'Lunch', 'Afternoon snack', 'Dinner'].map((meal) => (\r\n+            <button\r\n+              key={meal}\r\n+              className=\"px-4 py-2 bg-gray-200 rounded-full text-gray-800 font-medium\"\r\n+            >\r\n+              {meal}\r\n+            </button>\r\n+          ))}\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Workout Section */}\r\n+      <div className=\"mb-8\">\r\n+        <h2 className=\"text-xl font-semibold mb-2\">Workouts</h2>\r\n+        <p>4 workouts per week</p>\r\n+        <div className=\"flex gap-3 flex-wrap\">\r\n+          {['Strength', 'Cardio', 'Mobility', 'Recovery'].map((workout) => (\r\n+            <button\r\n+              key={workout}\r\n+              className=\"px-4 py-2 bg-gray-200 rounded-full text-gray-800 font-medium\"\r\n+            >\r\n+              {workout}\r\n+            </button>\r\n+          ))}\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Button to Start Plan */}\r\n+      <div className=\"mt-8\">\r\n+        <button\r\n+          onClick={onStartFirstDay}\r\n+          className=\"px-6 py-3 bg-yellow-500 text-white rounded-lg font-bold hover:bg-yellow-600\"\r\n+        >\r\n+          Start Day 1\r\n+        </button>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default NutritionPlan;\r\n"
                },
                {
                    "date": 1730408263216,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,72 @@\n+import React from 'react';\r\n+\r\n+const NutritionPlan = ({ plan, onStartFirstDay, onDeletePlan }) => {\r\n+    return (\r\n+        <div className=\"p-8 max-w-4xl mx-auto\">\r\n+            <h1 className=\"text-3xl font-bold mb-4\">Tu Plan</h1>\r\n+            <p className=\"text-gray-600 mb-8\">\r\n+                Basado en tu evaluación, hemos creado un plan personalizado para ayudarte a alcanzar tus objetivos.\r\n+            </p>\r\n+\r\n+            {/* Sección de Nutrición */}\r\n+            <div className=\"mb-8\">\r\n+                <h2 className=\"text-xl font-semibold mb-2\">Nutrición</h2>\r\n+                <p>{plan.nutrition_plan.calories.toFixed(0)} calorías por día</p>\r\n+                <p>\r\n+                    {Math.round((plan.nutrition_plan.carbs / (plan.nutrition_plan.carbs + plan.nutrition_plan.protein + plan.nutrition_plan.fats)) * 100)}%\r\n+                    carbohidratos, {Math.round((plan.nutrition_plan.protein / (plan.nutrition_plan.carbs + plan.nutrition_plan.protein + plan.nutrition_plan.fats)) * 100)}%\r\n+                    proteínas, {Math.round((plan.nutrition_plan.fats / (plan.nutrition_plan.carbs + plan.nutrition_plan.protein + plan.nutrition_plan.fats)) * 100)}% grasas\r\n+                </p>\r\n+            </div>\r\n+\r\n+            {/* Sección de Plan de Comidas */}\r\n+            <div className=\"mb-8\">\r\n+                <h2 className=\"text-xl font-semibold mb-2\">Plan de Comidas</h2>\r\n+                <div className=\"flex gap-3 flex-wrap\">\r\n+                    {['Desayuno', 'Merienda de la mañana', 'Almuerzo', 'Merienda de la tarde', 'Cena'].map((meal) => (\r\n+                        <button\r\n+                            key={meal}\r\n+                            className=\"px-4 py-2 bg-gray-200 rounded-full text-gray-800 font-medium\"\r\n+                        >\r\n+                            {meal}\r\n+                        </button>\r\n+                    ))}\r\n+                </div>\r\n+            </div>\r\n+\r\n+            {/* Sección de Entrenamientos */}\r\n+            <div className=\"mb-8\">\r\n+                <h2 className=\"text-xl font-semibold mb-2\">Entrenamientos</h2>\r\n+                <p>4 entrenamientos por semana</p>\r\n+                <div className=\"flex gap-3 flex-wrap\">\r\n+                    {['Fuerza', 'Cardio', 'Movilidad', 'Recuperación'].map((workout) => (\r\n+                        <button\r\n+                            key={workout}\r\n+                            className=\"px-4 py-2 bg-gray-200 rounded-full text-gray-800 font-medium\"\r\n+                        >\r\n+                            {workout}\r\n+                        </button>\r\n+                    ))}\r\n+                </div>\r\n+            </div>\r\n+\r\n+            {/* Botones para iniciar el plan y eliminar el plan */}\r\n+            <div className=\"mt-8 flex gap-4\">\r\n+                <button\r\n+                    onClick={onStartFirstDay}\r\n+                    className=\"px-6 py-3 bg-yellow-500 text-white rounded-lg font-bold hover:bg-yellow-600\"\r\n+                >\r\n+                    Iniciar Día 1\r\n+                </button>\r\n+                <button\r\n+                    onClick={onDeletePlan}\r\n+                    className=\"px-6 py-3 bg-red-500 text-white rounded-lg font-bold hover:bg-red-600\"\r\n+                >\r\n+                    Eliminar Plan\r\n+                </button>\r\n+            </div>\r\n+        </div>\r\n+    );\r\n+};\r\n+\r\n+export default NutritionPlan;\r\n"
                },
                {
                    "date": 1730408431748,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,79 @@\n+import React from 'react';\r\n+\r\n+const NutritionPlan = ({ plan, onStartFirstDay }) => {\r\n+  if (!plan || !plan.nutrition_plan) {\r\n+      return <p>No se ha encontrado un plan nutricional válido.</p>;\r\n+  }\r\n+\r\n+  const { calories, carbs, protein, fats } = plan.nutrition_plan;\r\n+\r\n+\r\n+    return (\r\n+        <div className=\"p-8 max-w-4xl mx-auto\">\r\n+            <h1 className=\"text-3xl font-bold mb-4\">Tu Plan</h1>\r\n+            <p className=\"text-gray-600 mb-8\">\r\n+                Basado en tu evaluación, hemos creado un plan personalizado para ayudarte a alcanzar tus objetivos.\r\n+            </p>\r\n+\r\n+            {/* Sección de Nutrición */}\r\n+            <div className=\"mb-8\">\r\n+                <h2 className=\"text-xl font-semibold mb-2\">Nutrición</h2>\r\n+                <p>{plan.nutrition_plan.calories.toFixed(0)} calorías por día</p>\r\n+                <p>\r\n+                    {Math.round((plan.nutrition_plan.carbs / (plan.nutrition_plan.carbs + plan.nutrition_plan.protein + plan.nutrition_plan.fats)) * 100)}%\r\n+                    carbohidratos, {Math.round((plan.nutrition_plan.protein / (plan.nutrition_plan.carbs + plan.nutrition_plan.protein + plan.nutrition_plan.fats)) * 100)}%\r\n+                    proteínas, {Math.round((plan.nutrition_plan.fats / (plan.nutrition_plan.carbs + plan.nutrition_plan.protein + plan.nutrition_plan.fats)) * 100)}% grasas\r\n+                </p>\r\n+            </div>\r\n+\r\n+            {/* Sección de Plan de Comidas */}\r\n+            <div className=\"mb-8\">\r\n+                <h2 className=\"text-xl font-semibold mb-2\">Plan de Comidas</h2>\r\n+                <div className=\"flex gap-3 flex-wrap\">\r\n+                    {['Desayuno', 'Merienda de la mañana', 'Almuerzo', 'Merienda de la tarde', 'Cena'].map((meal) => (\r\n+                        <button\r\n+                            key={meal}\r\n+                            className=\"px-4 py-2 bg-gray-200 rounded-full text-gray-800 font-medium\"\r\n+                        >\r\n+                            {meal}\r\n+                        </button>\r\n+                    ))}\r\n+                </div>\r\n+            </div>\r\n+\r\n+            {/* Sección de Entrenamientos */}\r\n+            <div className=\"mb-8\">\r\n+                <h2 className=\"text-xl font-semibold mb-2\">Entrenamientos</h2>\r\n+                <p>4 entrenamientos por semana</p>\r\n+                <div className=\"flex gap-3 flex-wrap\">\r\n+                    {['Fuerza', 'Cardio', 'Movilidad', 'Recuperación'].map((workout) => (\r\n+                        <button\r\n+                            key={workout}\r\n+                            className=\"px-4 py-2 bg-gray-200 rounded-full text-gray-800 font-medium\"\r\n+                        >\r\n+                            {workout}\r\n+                        </button>\r\n+                    ))}\r\n+                </div>\r\n+            </div>\r\n+\r\n+            {/* Botones para iniciar el plan y eliminar el plan */}\r\n+            <div className=\"mt-8 flex gap-4\">\r\n+                <button\r\n+                    onClick={onStartFirstDay}\r\n+                    className=\"px-6 py-3 bg-yellow-500 text-white rounded-lg font-bold hover:bg-yellow-600\"\r\n+                >\r\n+                    Iniciar Día 1\r\n+                </button>\r\n+                <button\r\n+                    onClick={onDeletePlan}\r\n+                    className=\"px-6 py-3 bg-red-500 text-white rounded-lg font-bold hover:bg-red-600\"\r\n+                >\r\n+                    Eliminar Plan\r\n+                </button>\r\n+            </div>\r\n+        </div>\r\n+    );\r\n+};\r\n+\r\n+export default NutritionPlan;\r\n"
                },
                {
                    "date": 1730408626479,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,77 @@\n+import React from 'react';\r\n+\r\n+const NutritionPlan = ({ plan, onStartFirstDay, onDeletePlan }) => {\r\n+    // Verificar que el plan y sus propiedades existan\r\n+    if (!plan || !plan.nutrition_plan) {\r\n+        return <p>No se ha encontrado un plan nutricional válido.</p>;\r\n+    }\r\n+\r\n+    const { calories, carbs, protein, fats } = plan.nutrition_plan;\r\n+\r\n+    return (\r\n+        <div className=\"p-8 max-w-4xl mx-auto\">\r\n+            <h1 className=\"text-3xl font-bold mb-4\">Tu Plan</h1>\r\n+            <p className=\"text-gray-600 mb-8\">\r\n+                Basado en tu evaluación, hemos creado un plan personalizado para ayudarte a alcanzar tus objetivos.\r\n+            </p>\r\n+\r\n+            {/* Sección de Nutrición */}\r\n+            <div className=\"mb-8\">\r\n+                <h2 className=\"text-xl font-semibold mb-2\">Nutrición</h2>\r\n+                <p>{calories.toFixed(0)} calorías por día</p>\r\n+                <p>\r\n+                    {Math.round((carbs / (carbs + protein + fats)) * 100)}% carbohidratos, {Math.round((protein / (carbs + protein + fats)) * 100)}% proteínas, {Math.round((fats / (carbs + protein + fats)) * 100)}% grasas\r\n+                </p>\r\n+            </div>\r\n+\r\n+            {/* Sección de Plan de Comidas */}\r\n+            <div className=\"mb-8\">\r\n+                <h2 className=\"text-xl font-semibold mb-2\">Plan de Comidas</h2>\r\n+                <div className=\"flex gap-3 flex-wrap\">\r\n+                    {['Desayuno', 'Merienda de la mañana', 'Almuerzo', 'Merienda de la tarde', 'Cena'].map((meal) => (\r\n+                        <button\r\n+                            key={meal}\r\n+                            className=\"px-4 py-2 bg-gray-200 rounded-full text-gray-800 font-medium\"\r\n+                        >\r\n+                            {meal}\r\n+                        </button>\r\n+                    ))}\r\n+                </div>\r\n+            </div>\r\n+\r\n+            {/* Sección de Entrenamientos */}\r\n+            <div className=\"mb-8\">\r\n+                <h2 className=\"text-xl font-semibold mb-2\">Entrenamientos</h2>\r\n+                <p>4 entrenamientos por semana</p>\r\n+                <div className=\"flex gap-3 flex-wrap\">\r\n+                    {['Fuerza', 'Cardio', 'Movilidad', 'Recuperación'].map((workout) => (\r\n+                        <button\r\n+                            key={workout}\r\n+                            className=\"px-4 py-2 bg-gray-200 rounded-full text-gray-800 font-medium\"\r\n+                        >\r\n+                            {workout}\r\n+                        </button>\r\n+                    ))}\r\n+                </div>\r\n+            </div>\r\n+\r\n+            {/* Botones para iniciar el plan y eliminar el plan */}\r\n+            <div className=\"mt-8 flex gap-4\">\r\n+                <button\r\n+                    onClick={onStartFirstDay}\r\n+                    className=\"px-6 py-3 bg-yellow-500 text-white rounded-lg font-bold hover:bg-yellow-600\"\r\n+                >\r\n+                    Iniciar Día 1\r\n+                </button>\r\n+                <button\r\n+                    onClick={onDeletePlan}\r\n+                    className=\"px-6 py-3 bg-red-500 text-white rounded-lg font-bold hover:bg-red-600\"\r\n+                >\r\n+                    Eliminar Plan\r\n+                </button>\r\n+            </div>\r\n+        </div>\r\n+    );\r\n+};\r\n+\r\n+export default NutritionPlan;\r\n"
                },
                {
                    "date": 1730408766620,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,82 @@\n+import React, { useState, useEffect } from 'react';\r\n+import Login from './components/Login';\r\n+import Form from './components/Form';\r\n+import NutritionPlan from './components/NutritionPlan';\r\n+import DayPlan from './components/DayPlan';\r\n+import Navbar from './components/Navbar';\r\n+\r\n+const App = () => {\r\n+    const [isAuthenticated, setIsAuthenticated] = useState(false); // Estado de autenticación\r\n+    const [hasPlan, setHasPlan] = useState(false); // Estado que indica si el usuario tiene un plan\r\n+    const [plan, setPlan] = useState(null); // Estado del plan nutricional\r\n+    const [currentDay, setCurrentDay] = useState(null); // Estado para gestionar el día actual\r\n+\r\n+    useEffect(() => {\r\n+        // Verificar si el usuario tiene un plan cuando se autentica\r\n+        if (isAuthenticated) {\r\n+            const checkUserPlan = async () => {\r\n+                try {\r\n+                    const response = await fetch('http://127.0.0.1:8000/api/check-plan', {\r\n+                        headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` }\r\n+                    });\r\n+                    if (!response.ok) {\r\n+                        throw new Error(`HTTP error! status: ${response.status}`);\r\n+                    }\r\n+                    const data = await response.json();\r\n+                    setHasPlan(data.hasPlan);\r\n+                    if (data.hasPlan) {\r\n+                        setPlan(data.plan); // Guardar el plan si ya existe\r\n+                    } else {\r\n+                        setPlan(null); // Asegurarse de que el plan sea null si no existe\r\n+                    }\r\n+                } catch (error) {\r\n+                    console.error('Error al verificar el plan del usuario:', error);\r\n+                    setHasPlan(false);\r\n+                    setPlan(null);\r\n+                }\r\n+            };\r\n+            checkUserPlan();\r\n+        }\r\n+    }, [isAuthenticated]);\r\n+\r\n+    const handleLogin = () => {\r\n+        setIsAuthenticated(true); // Cambia el estado a autenticado cuando el usuario inicie sesión\r\n+    };\r\n+\r\n+    const handleStartFirstDay = () => {\r\n+        setCurrentDay(1); // Iniciar el primer día del plan\r\n+    };\r\n+\r\n+    const handleEndDay = () => {\r\n+        setCurrentDay(null); // Volver a la vista general después de completar un día\r\n+    };\r\n+\r\n+    const handlePlanCreated = (newPlan) => {\r\n+        setPlan(newPlan); // Guardar el nuevo plan creado\r\n+        setHasPlan(true); // Ahora el usuario tiene un plan\r\n+    };\r\n+\r\n+    const handleDeletePlan = () => {\r\n+        setPlan(null);\r\n+        setHasPlan(false);\r\n+    };\r\n+\r\n+    return (\r\n+        <div className=\"App\">\r\n+            {isAuthenticated && <Navbar />}\r\n+\r\n+            {!isAuthenticated ? (\r\n+                <Login onLogin={handleLogin} />\r\n+            ) : currentDay ? (\r\n+                <DayPlan dayNumber={currentDay} onEndDay={handleEndDay} />\r\n+            ) : hasPlan ? (\r\n+                <NutritionPlan plan={plan} onStartFirstDay={handleStartFirstDay} onDeletePlan={handleDeletePlan} />\r\n+            ) : (\r\n+                <Form setPlan={handlePlanCreated} />\r\n+            )}\r\n+        </div>\r\n+    );\r\n+};\r\n+\r\n+export default App;\r\n+\r\n"
                },
                {
                    "date": 1730408775727,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,77 @@\n+import React from 'react';\r\n+\r\n+const NutritionPlan = ({ plan, onStartFirstDay, onDeletePlan }) => {\r\n+    // Verificar que el plan y sus propiedades existan\r\n+    if (!plan || !plan.nutrition_plan) {\r\n+        return <p>No se ha encontrado un plan nutricional válido.</p>;\r\n+    }\r\n+\r\n+    const { calories, carbs, protein, fats } = plan.nutrition_plan;\r\n+\r\n+    return (\r\n+        <div className=\"p-8 max-w-4xl mx-auto\">\r\n+            <h1 className=\"text-3xl font-bold mb-4\">Tu Plan</h1>\r\n+            <p className=\"text-gray-600 mb-8\">\r\n+                Basado en tu evaluación, hemos creado un plan personalizado para ayudarte a alcanzar tus objetivos.\r\n+            </p>\r\n+\r\n+            {/* Sección de Nutrición */}\r\n+            <div className=\"mb-8\">\r\n+                <h2 className=\"text-xl font-semibold mb-2\">Nutrición</h2>\r\n+                <p>{calories.toFixed(0)} calorías por día</p>\r\n+                <p>\r\n+                    {Math.round((carbs / (carbs + protein + fats)) * 100)}% carbohidratos, {Math.round((protein / (carbs + protein + fats)) * 100)}% proteínas, {Math.round((fats / (carbs + protein + fats)) * 100)}% grasas\r\n+                </p>\r\n+            </div>\r\n+\r\n+            {/* Sección de Plan de Comidas */}\r\n+            <div className=\"mb-8\">\r\n+                <h2 className=\"text-xl font-semibold mb-2\">Plan de Comidas</h2>\r\n+                <div className=\"flex gap-3 flex-wrap\">\r\n+                    {['Desayuno', 'Merienda de la mañana', 'Almuerzo', 'Merienda de la tarde', 'Cena'].map((meal) => (\r\n+                        <button\r\n+                            key={meal}\r\n+                            className=\"px-4 py-2 bg-gray-200 rounded-full text-gray-800 font-medium\"\r\n+                        >\r\n+                            {meal}\r\n+                        </button>\r\n+                    ))}\r\n+                </div>\r\n+            </div>\r\n+\r\n+            {/* Sección de Entrenamientos */}\r\n+            <div className=\"mb-8\">\r\n+                <h2 className=\"text-xl font-semibold mb-2\">Entrenamientos</h2>\r\n+                <p>4 entrenamientos por semana</p>\r\n+                <div className=\"flex gap-3 flex-wrap\">\r\n+                    {['Fuerza', 'Cardio', 'Movilidad', 'Recuperación'].map((workout) => (\r\n+                        <button\r\n+                            key={workout}\r\n+                            className=\"px-4 py-2 bg-gray-200 rounded-full text-gray-800 font-medium\"\r\n+                        >\r\n+                            {workout}\r\n+                        </button>\r\n+                    ))}\r\n+                </div>\r\n+            </div>\r\n+\r\n+            {/* Botones para iniciar el plan y eliminar el plan */}\r\n+            <div className=\"mt-8 flex gap-4\">\r\n+                <button\r\n+                    onClick={onStartFirstDay}\r\n+                    className=\"px-6 py-3 bg-yellow-500 text-white rounded-lg font-bold hover:bg-yellow-600\"\r\n+                >\r\n+                    Iniciar Día 1\r\n+                </button>\r\n+                <button\r\n+                    onClick={onDeletePlan}\r\n+                    className=\"px-6 py-3 bg-red-500 text-white rounded-lg font-bold hover:bg-red-600\"\r\n+                >\r\n+                    Eliminar Plan\r\n+                </button>\r\n+            </div>\r\n+        </div>\r\n+    );\r\n+};\r\n+\r\n+export default NutritionPlan;\r\n"
                },
                {
                    "date": 1730409186544,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,89 @@\n+import React from 'react';\r\n+\r\n+const NutritionPlan = ({ plan, onStartFirstDay, onDeletePlan }) => {\r\n+    // Verificar si el plan o plan.nutrition_plan es undefined\r\n+    if (!plan || !plan.nutrition_plan) {\r\n+        return (\r\n+            <div className=\"p-8 max-w-4xl mx-auto\">\r\n+                <h1 className=\"text-3xl font-bold mb-4\">No se ha encontrado un plan nutricional válido.</h1>\r\n+                <button\r\n+                    onClick={onDeletePlan}\r\n+                    className=\"px-6 py-3 bg-red-500 text-white rounded-lg font-bold hover:bg-red-600\"\r\n+                >\r\n+                    Eliminar Plan y Crear Nuevo\r\n+                </button>\r\n+            </div>\r\n+        );\r\n+    }\r\n+\r\n+    const { calories, carbs, protein, fats } = plan.nutrition_plan;\r\n+\r\n+    return (\r\n+        <div className=\"p-8 max-w-4xl mx-auto\">\r\n+            <h1 className=\"text-3xl font-bold mb-4\">Tu Plan</h1>\r\n+            <p className=\"text-gray-600 mb-8\">\r\n+                Basado en tu evaluación, hemos creado un plan personalizado para ayudarte a alcanzar tus objetivos.\r\n+            </p>\r\n+\r\n+            {/* Sección de Nutrición */}\r\n+            <div className=\"mb-8\">\r\n+                <h2 className=\"text-xl font-semibold mb-2\">Nutrición</h2>\r\n+                <p>{calories.toFixed(0)} calorías por día</p>\r\n+                <p>\r\n+                    {Math.round((carbs / (carbs + protein + fats)) * 100)}% carbohidratos,{' '}\r\n+                    {Math.round((protein / (carbs + protein + fats)) * 100)}% proteínas,{' '}\r\n+                    {Math.round((fats / (carbs + protein + fats)) * 100)}% grasas\r\n+                </p>\r\n+            </div>\r\n+\r\n+            {/* Sección de Plan de Comidas */}\r\n+            <div className=\"mb-8\">\r\n+                <h2 className=\"text-xl font-semibold mb-2\">Plan de Comidas</h2>\r\n+                <div className=\"flex gap-3 flex-wrap\">\r\n+                    {['Desayuno', 'Merienda de la mañana', 'Almuerzo', 'Merienda de la tarde', 'Cena'].map((meal) => (\r\n+                        <button\r\n+                            key={meal}\r\n+                            className=\"px-4 py-2 bg-gray-200 rounded-full text-gray-800 font-medium\"\r\n+                        >\r\n+                            {meal}\r\n+                        </button>\r\n+                    ))}\r\n+                </div>\r\n+            </div>\r\n+\r\n+            {/* Sección de Entrenamientos */}\r\n+            <div className=\"mb-8\">\r\n+                <h2 className=\"text-xl font-semibold mb-2\">Entrenamientos</h2>\r\n+                <p>4 entrenamientos por semana</p>\r\n+                <div className=\"flex gap-3 flex-wrap\">\r\n+                    {['Fuerza', 'Cardio', 'Movilidad', 'Recuperación'].map((workout) => (\r\n+                        <button\r\n+                            key={workout}\r\n+                            className=\"px-4 py-2 bg-gray-200 rounded-full text-gray-800 font-medium\"\r\n+                        >\r\n+                            {workout}\r\n+                        </button>\r\n+                    ))}\r\n+                </div>\r\n+            </div>\r\n+\r\n+            {/* Botones para Iniciar Plan y Eliminar Plan */}\r\n+            <div className=\"mt-8 flex gap-4\">\r\n+                <button\r\n+                    onClick={onStartFirstDay}\r\n+                    className=\"px-6 py-3 bg-yellow-500 text-white rounded-lg font-bold hover:bg-yellow-600\"\r\n+                >\r\n+                    Iniciar Día 1\r\n+                </button>\r\n+                <button\r\n+                    onClick={onDeletePlan}\r\n+                    className=\"px-6 py-3 bg-red-500 text-white rounded-lg font-bold hover:bg-red-600\"\r\n+                >\r\n+                    Eliminar Plan y Crear Nuevo\r\n+                </button>\r\n+            </div>\r\n+        </div>\r\n+    );\r\n+};\r\n+\r\n+export default NutritionPlan;\r\n"
                },
                {
                    "date": 1730410416864,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,88 @@\n+import React from 'react';\r\n+\r\n+const NutritionPlan = ({ plan, onStartFirstDay, onDeletePlan }) => {\r\n+    if (!plan || !plan.nutrition_plan) {\r\n+        return (\r\n+            <div className=\"p-8 max-w-4xl mx-auto\">\r\n+                <h1 className=\"text-3xl font-bold mb-4\">No se ha encontrado un plan nutricional válido.</h1>\r\n+                <button\r\n+                    onClick={onDeletePlan}\r\n+                    className=\"px-6 py-3 bg-red-500 text-white rounded-lg font-bold hover:bg-red-600\"\r\n+                >\r\n+                    Eliminar Plan y Crear Nuevo\r\n+                </button>\r\n+            </div>\r\n+        );\r\n+    }\r\n+\r\n+    const { calories = 0, carbs = 0, protein = 0, fats = 0 } = plan.nutrition_plan;\r\n+\r\n+    return (\r\n+        <div className=\"p-8 max-w-4xl mx-auto\">\r\n+            <h1 className=\"text-3xl font-bold mb-4\">Tu Plan</h1>\r\n+            <p className=\"text-gray-600 mb-8\">\r\n+                Basado en tu evaluación, hemos creado un plan personalizado para ayudarte a alcanzar tus objetivos.\r\n+            </p>\r\n+\r\n+            {/* Sección de Nutrición */}\r\n+            <div className=\"mb-8\">\r\n+                <h2 className=\"text-xl font-semibold mb-2\">Nutrición</h2>\r\n+                <p>{calories.toFixed(0)} calorías por día</p>\r\n+                <p>\r\n+                    {Math.round((carbs / (carbs + protein + fats)) * 100)}% carbohidratos,{' '}\r\n+                    {Math.round((protein / (carbs + protein + fats)) * 100)}% proteínas,{' '}\r\n+                    {Math.round((fats / (carbs + protein + fats)) * 100)}% grasas\r\n+                </p>\r\n+            </div>\r\n+\r\n+            {/* Sección de Plan de Comidas */}\r\n+            <div className=\"mb-8\">\r\n+                <h2 className=\"text-xl font-semibold mb-2\">Plan de Comidas</h2>\r\n+                <div className=\"flex gap-3 flex-wrap\">\r\n+                    {['Desayuno', 'Merienda de la mañana', 'Almuerzo', 'Merienda de la tarde', 'Cena'].map((meal) => (\r\n+                        <button\r\n+                            key={meal}\r\n+                            className=\"px-4 py-2 bg-gray-200 rounded-full text-gray-800 font-medium\"\r\n+                        >\r\n+                            {meal}\r\n+                        </button>\r\n+                    ))}\r\n+                </div>\r\n+            </div>\r\n+\r\n+            {/* Sección de Entrenamientos */}\r\n+            <div className=\"mb-8\">\r\n+                <h2 className=\"text-xl font-semibold mb-2\">Entrenamientos</h2>\r\n+                <p>4 entrenamientos por semana</p>\r\n+                <div className=\"flex gap-3 flex-wrap\">\r\n+                    {['Fuerza', 'Cardio', 'Movilidad', 'Recuperación'].map((workout) => (\r\n+                        <button\r\n+                            key={workout}\r\n+                            className=\"px-4 py-2 bg-gray-200 rounded-full text-gray-800 font-medium\"\r\n+                        >\r\n+                            {workout}\r\n+                        </button>\r\n+                    ))}\r\n+                </div>\r\n+            </div>\r\n+\r\n+            {/* Botones para Iniciar Plan y Eliminar Plan */}\r\n+            <div className=\"mt-8 flex gap-4\">\r\n+                <button\r\n+                    onClick={onStartFirstDay}\r\n+                    className=\"px-6 py-3 bg-yellow-500 text-white rounded-lg font-bold hover:bg-yellow-600\"\r\n+                >\r\n+                    Iniciar Día 1\r\n+                </button>\r\n+                <button\r\n+                    onClick={onDeletePlan}\r\n+                    className=\"px-6 py-3 bg-red-500 text-white rounded-lg font-bold hover:bg-red-600\"\r\n+                >\r\n+                    Eliminar Plan\r\n+                </button>\r\n+            </div>\r\n+        </div>\r\n+    );\r\n+};\r\n+\r\n+export default NutritionPlan;\r\n"
                },
                {
                    "date": 1730732916657,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,87 @@\n+// frontend/components/NutritionPlan.js\r\n+import React from 'react';\r\n+\r\n+const NutritionPlan = ({ plan, onStartFirstDay, onDeletePlan }) => {\r\n+    if (!plan || (!plan.ejercicios && !plan.recetas)) {\r\n+        return (\r\n+            <div className=\"p-8 max-w-4xl mx-auto\">\r\n+                <h1 className=\"text-3xl font-bold mb-4\">No se ha encontrado un plan válido.</h1>\r\n+                <button\r\n+                    onClick={onDeletePlan}\r\n+                    className=\"px-6 py-3 bg-red-500 text-white rounded-lg font-bold hover:bg-red-600\"\r\n+                >\r\n+                    Eliminar Plan y Crear Nuevo\r\n+                </button>\r\n+            </div>\r\n+        );\r\n+    }\r\n+\r\n+    return (\r\n+        <div className=\"p-8 max-w-4xl mx-auto\">\r\n+            <h1 className=\"text-3xl font-bold mb-4\">Tu Plan Personalizado</h1>\r\n+            <p className=\"text-gray-600 mb-8\">\r\n+                Basado en tu evaluación, hemos creado un plan personalizado para ayudarte a alcanzar tus objetivos.\r\n+            </p>\r\n+\r\n+            {/* Sección de Recetas Recomendadas */}\r\n+            <div className=\"mb-8\">\r\n+                <h2 className=\"text-xl font-semibold mb-4\">Recetas Recomendadas</h2>\r\n+                {plan.recetas && plan.recetas.length > 0 ? (\r\n+                    plan.recetas.map((receta, index) => (\r\n+                        <div key={index} className=\"mb-4 p-4 border rounded-lg\">\r\n+                            <h3 className=\"text-lg font-bold\">{receta.Recipe_name}</h3>\r\n+                            <p><strong>Tipo de Dieta:</strong> {receta.Diet_type}</p>\r\n+                            <p><strong>Cocina:</strong> {receta.Cuisine_type}</p>\r\n+                            <p><strong>Calorías:</strong> {receta.Calories.toFixed(0)} kcal</p>\r\n+                            <p>\r\n+                                <strong>Macronutrientes:</strong> {receta['Protein(g)']}g proteínas, {receta['Carbs(g)']}g carbohidratos, {receta['Fat(g)']}g grasas\r\n+                            </p>\r\n+                        </div>\r\n+                    ))\r\n+                ) : (\r\n+                    <p>No se encontraron recetas recomendadas.</p>\r\n+                )}\r\n+            </div>\r\n+\r\n+            {/* Sección de Ejercicios Recomendados */}\r\n+            <div className=\"mb-8\">\r\n+                <h2 className=\"text-xl font-semibold mb-4\">Ejercicios Recomendados</h2>\r\n+                {plan.ejercicios && plan.ejercicios.length > 0 ? (\r\n+                    plan.ejercicios.map((ejercicio, index) => (\r\n+                        <div key={index} className=\"mb-4 p-4 border rounded-lg\">\r\n+                            <h3 className=\"text-lg font-bold\">{ejercicio.name}</h3>\r\n+                            <p><strong>Parte del Cuerpo:</strong> {ejercicio.bodyPart}</p>\r\n+                            <p><strong>Objetivo Muscular:</strong> {ejercicio.target}</p>\r\n+                            <p><strong>Equipamiento:</strong> {ejercicio.equipment}</p>\r\n+                            <p><strong>Intensidad:</strong> {ejercicio.Intensity}</p>\r\n+                            <p><strong>Calorías Quemadas:</strong> {ejercicio.Calories_Burned.toFixed(0)} kcal</p>\r\n+                            {ejercicio.gifUrl && (\r\n+                                <img src={ejercicio.gifUrl} alt={ejercicio.name} className=\"mt-2 w-full max-w-md\" />\r\n+                            )}\r\n+                        </div>\r\n+                    ))\r\n+                ) : (\r\n+                    <p>No se encontraron ejercicios recomendados.</p>\r\n+                )}\r\n+            </div>\r\n+\r\n+            {/* Botones para Iniciar Plan y Eliminar Plan */}\r\n+            <div className=\"mt-8 flex gap-4\">\r\n+                <button\r\n+                    onClick={onStartFirstDay}\r\n+                    className=\"px-6 py-3 bg-yellow-500 text-white rounded-lg font-bold hover:bg-yellow-600\"\r\n+                >\r\n+                    Iniciar Día 1\r\n+                </button>\r\n+                <button\r\n+                    onClick={onDeletePlan}\r\n+                    className=\"px-6 py-3 bg-red-500 text-white rounded-lg font-bold hover:bg-red-600\"\r\n+                >\r\n+                    Eliminar Plan\r\n+                </button>\r\n+            </div>\r\n+        </div>\r\n+    );\r\n+};\r\n+\r\n+export default NutritionPlan;\r\n"
                },
                {
                    "date": 1730735105866,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n // frontend/components/NutritionPlan.js\r\n import React from 'react';\r\n \r\n const NutritionPlan = ({ plan, onStartFirstDay, onDeletePlan }) => {\r\n-    if (!plan || (!plan.ejercicios && !plan.recetas)) {\r\n+    if (!plan || !plan.dias) {\r\n         return (\r\n             <div className=\"p-8 max-w-4xl mx-auto\">\r\n                 <h1 className=\"text-3xl font-bold mb-4\">No se ha encontrado un plan válido.</h1>\r\n                 <button\r\n@@ -15,145 +15,39 @@\n             </div>\r\n         );\r\n     }\r\n \r\n-    return (\r\n-        <div className=\"p-8 max-w-4xl mx-auto\">\r\n-            <h1 className=\"text-3xl font-bold mb-4\">Tu Plan Personalizado</h1>\r\n-            <p className=\"text-gray-600 mb-8\">\r\n-                Basado en tu evaluación, hemos creado un plan personalizado para ayudarte a alcanzar tus objetivos.\r\n-            </p>\r\n+    // Resumen del plan\r\n+    const totalDias = plan.dias.length;\r\n+    const totalEjercicios = plan.dias.reduce((acc, dia) => acc + dia.ejercicios.length, 0);\r\n+    const totalRecetas = plan.dias.reduce((acc, dia) => acc + dia.recetas.length, 0);\r\n \r\n-            {/* Sección de Recetas Recomendadas */}\r\n-            <div className=\"mb-8\">\r\n-                <h2 className=\"text-xl font-semibold mb-4\">Recetas Recomendadas</h2>\r\n-                {plan.recetas && plan.recetas.length > 0 ? (\r\n-                    plan.recetas.map((receta, index) => (\r\n-                        <div key={index} className=\"mb-4 p-4 border rounded-lg\">\r\n-                            <h3 className=\"text-lg font-bold\">{receta.Recipe_name}</h3>\r\n-                            <p><strong>Tipo de Dieta:</strong> {receta.Diet_type}</p>\r\n-                            <p><strong>Cocina:</strong> {receta.Cuisine_type}</p>\r\n-                            <p><strong>Calorías:</strong> {receta.Calories.toFixed(0)} kcal</p>\r\n-                            <p>\r\n-                                <strong>Macronutrientes:</strong> {receta['Protein(g)']}g proteínas, {receta['Carbs(g)']}g carbohidratos, {receta['Fat(g)']}g grasas\r\n-                            </p>\r\n-                        </div>\r\n-                    ))\r\n-                ) : (\r\n-                    <p>No se encontraron recetas recomendadas.</p>\r\n-                )}\r\n-            </div>\r\n-\r\n-            {/* Sección de Ejercicios Recomendados */}\r\n-            <div className=\"mb-8\">\r\n-                <h2 className=\"text-xl font-semibold mb-4\">Ejercicios Recomendados</h2>\r\n-                {plan.ejercicios && plan.ejercicios.length > 0 ? (\r\n-                    plan.ejercicios.map((ejercicio, index) => (\r\n-                        <div key={index} className=\"mb-4 p-4 border rounded-lg\">\r\n-                            <h3 className=\"text-lg font-bold\">{ejercicio.name}</h3>\r\n-                            <p><strong>Parte del Cuerpo:</strong> {ejercicio.bodyPart}</p>\r\n-                            <p><strong>Objetivo Muscular:</strong> {ejercicio.target}</p>\r\n-                            <p><strong>Equipamiento:</strong> {ejercicio.equipment}</p>\r\n-                            <p><strong>Intensidad:</strong> {ejercicio.Intensity}</p>\r\n-                            <p><strong>Calorías Quemadas:</strong> {ejercicio.Calories_Burned.toFixed(0)} kcal</p>\r\n-                            {ejercicio.gifUrl && (\r\n-                                <img src={ejercicio.gifUrl} alt={ejercicio.name} className=\"mt-2 w-full max-w-md\" />\r\n-                            )}\r\n-                        </div>\r\n-                    ))\r\n-                ) : (\r\n-                    <p>No se encontraron ejercicios recomendados.</p>\r\n-                )}\r\n-            </div>\r\n-\r\n-            {/* Botones para Iniciar Plan y Eliminar Plan */}\r\n-            <div className=\"mt-8 flex gap-4\">\r\n-                <button\r\n-                    onClick={onStartFirstDay}\r\n-                    className=\"px-6 py-3 bg-yellow-500 text-white rounded-lg font-bold hover:bg-yellow-600\"\r\n-                >\r\n-                    Iniciar Día 1\r\n-                </button>\r\n-                <button\r\n-                    onClick={onDeletePlan}\r\n-                    className=\"px-6 py-3 bg-red-500 text-white rounded-lg font-bold hover:bg-red-600\"\r\n-                >\r\n-                    Eliminar Plan\r\n-                </button>\r\n-            </div>\r\n-        </div>\r\n-    );\r\n-};\r\n-\r\n-export default NutritionPlan;\r\n-import React from 'react';\r\n-\r\n-const NutritionPlan = ({ plan, onStartFirstDay, onDeletePlan }) => {\r\n-    if (!plan || !plan.nutrition_plan) {\r\n-        return (\r\n-            <div className=\"p-8 max-w-4xl mx-auto\">\r\n-                <h1 className=\"text-3xl font-bold mb-4\">No se ha encontrado un plan nutricional válido.</h1>\r\n-                <button\r\n-                    onClick={onDeletePlan}\r\n-                    className=\"px-6 py-3 bg-red-500 text-white rounded-lg font-bold hover:bg-red-600\"\r\n-                >\r\n-                    Eliminar Plan y Crear Nuevo\r\n-                </button>\r\n-            </div>\r\n-        );\r\n-    }\r\n-\r\n-    const { calories = 0, carbs = 0, protein = 0, fats = 0 } = plan.nutrition_plan;\r\n-\r\n     return (\r\n         <div className=\"p-8 max-w-4xl mx-auto\">\r\n-            <h1 className=\"text-3xl font-bold mb-4\">Tu Plan</h1>\r\n+            <h1 className=\"text-3xl font-bold mb-4\">Tu Plan Personalizado de 30 Días</h1>\r\n             <p className=\"text-gray-600 mb-8\">\r\n-                Basado en tu evaluación, hemos creado un plan personalizado para ayudarte a alcanzar tus objetivos.\r\n+                Basado en tu evaluación, hemos creado un plan personalizado de 30 días para ayudarte a alcanzar tus objetivos.\r\n             </p>\r\n \r\n-            {/* Sección de Nutrición */}\r\n+            {/* Resumen del Plan */}\r\n             <div className=\"mb-8\">\r\n-                <h2 className=\"text-xl font-semibold mb-2\">Nutrición</h2>\r\n-                <p>{calories.toFixed(0)} calorías por día</p>\r\n-                <p>\r\n-                    {Math.round((carbs / (carbs + protein + fats)) * 100)}% carbohidratos,{' '}\r\n-                    {Math.round((protein / (carbs + protein + fats)) * 100)}% proteínas,{' '}\r\n-                    {Math.round((fats / (carbs + protein + fats)) * 100)}% grasas\r\n-                </p>\r\n+                <h2 className=\"text-xl font-semibold mb-4\">Resumen del Plan</h2>\r\n+                <p><strong>Días Totales:</strong> {totalDias}</p>\r\n+                <p><strong>Total de Ejercicios:</strong> {totalEjercicios}</p>\r\n+                <p><strong>Total de Recetas:</strong> {totalRecetas}</p>\r\n             </div>\r\n \r\n-            {/* Sección de Plan de Comidas */}\r\n+            {/* Vista Semanal (Opcional) */}\r\n             <div className=\"mb-8\">\r\n-                <h2 className=\"text-xl font-semibold mb-2\">Plan de Comidas</h2>\r\n-                <div className=\"flex gap-3 flex-wrap\">\r\n-                    {['Desayuno', 'Merienda de la mañana', 'Almuerzo', 'Merienda de la tarde', 'Cena'].map((meal) => (\r\n-                        <button\r\n-                            key={meal}\r\n-                            className=\"px-4 py-2 bg-gray-200 rounded-full text-gray-800 font-medium\"\r\n-                        >\r\n-                            {meal}\r\n-                        </button>\r\n-                    ))}\r\n-                </div>\r\n+                <h2 className=\"text-xl font-semibold mb-4\">Vista Semanal</h2>\r\n+                {Array.from({ length: 4 }, (_, semana) => (\r\n+                    <div key={semana} className=\"mb-4\">\r\n+                        <h3 className=\"text-lg font-bold\">Semana {semana + 1}</h3>\r\n+                        <p>Días {semana * 7 + 1} al {(semana + 1) * 7}</p>\r\n+                    </div>\r\n+                ))}\r\n             </div>\r\n \r\n-            {/* Sección de Entrenamientos */}\r\n-            <div className=\"mb-8\">\r\n-                <h2 className=\"text-xl font-semibold mb-2\">Entrenamientos</h2>\r\n-                <p>4 entrenamientos por semana</p>\r\n-                <div className=\"flex gap-3 flex-wrap\">\r\n-                    {['Fuerza', 'Cardio', 'Movilidad', 'Recuperación'].map((workout) => (\r\n-                        <button\r\n-                            key={workout}\r\n-                            className=\"px-4 py-2 bg-gray-200 rounded-full text-gray-800 font-medium\"\r\n-                        >\r\n-                            {workout}\r\n-                        </button>\r\n-                    ))}\r\n-                </div>\r\n-            </div>\r\n-\r\n             {/* Botones para Iniciar Plan y Eliminar Plan */}\r\n             <div className=\"mt-8 flex gap-4\">\r\n                 <button\r\n                     onClick={onStartFirstDay}\r\n@@ -172,1035 +66,4 @@\n     );\r\n };\r\n \r\n export default NutritionPlan;\r\n-import React from 'react';\r\n-\r\n-const NutritionPlan = ({ plan, onStartFirstDay, onDeletePlan }) => {\r\n-    // Verificar si el plan o plan.nutrition_plan es undefined\r\n-    if (!plan || !plan.nutrition_plan) {\r\n-        return (\r\n-            <div className=\"p-8 max-w-4xl mx-auto\">\r\n-                <h1 className=\"text-3xl font-bold mb-4\">No se ha encontrado un plan nutricional válido.</h1>\r\n-                <button\r\n-                    onClick={onDeletePlan}\r\n-                    className=\"px-6 py-3 bg-red-500 text-white rounded-lg font-bold hover:bg-red-600\"\r\n-                >\r\n-                    Eliminar Plan y Crear Nuevo\r\n-                </button>\r\n-            </div>\r\n-        );\r\n-    }\r\n-\r\n-    const { calories, carbs, protein, fats } = plan.nutrition_plan;\r\n-\r\n-    return (\r\n-        <div className=\"p-8 max-w-4xl mx-auto\">\r\n-            <h1 className=\"text-3xl font-bold mb-4\">Tu Plan</h1>\r\n-            <p className=\"text-gray-600 mb-8\">\r\n-                Basado en tu evaluación, hemos creado un plan personalizado para ayudarte a alcanzar tus objetivos.\r\n-            </p>\r\n-\r\n-            {/* Sección de Nutrición */}\r\n-            <div className=\"mb-8\">\r\n-                <h2 className=\"text-xl font-semibold mb-2\">Nutrición</h2>\r\n-                <p>{calories.toFixed(0)} calorías por día</p>\r\n-                <p>\r\n-                    {Math.round((carbs / (carbs + protein + fats)) * 100)}% carbohidratos,{' '}\r\n-                    {Math.round((protein / (carbs + protein + fats)) * 100)}% proteínas,{' '}\r\n-                    {Math.round((fats / (carbs + protein + fats)) * 100)}% grasas\r\n-                </p>\r\n-            </div>\r\n-\r\n-            {/* Sección de Plan de Comidas */}\r\n-            <div className=\"mb-8\">\r\n-                <h2 className=\"text-xl font-semibold mb-2\">Plan de Comidas</h2>\r\n-                <div className=\"flex gap-3 flex-wrap\">\r\n-                    {['Desayuno', 'Merienda de la mañana', 'Almuerzo', 'Merienda de la tarde', 'Cena'].map((meal) => (\r\n-                        <button\r\n-                            key={meal}\r\n-                            className=\"px-4 py-2 bg-gray-200 rounded-full text-gray-800 font-medium\"\r\n-                        >\r\n-                            {meal}\r\n-                        </button>\r\n-                    ))}\r\n-                </div>\r\n-            </div>\r\n-\r\n-            {/* Sección de Entrenamientos */}\r\n-            <div className=\"mb-8\">\r\n-                <h2 className=\"text-xl font-semibold mb-2\">Entrenamientos</h2>\r\n-                <p>4 entrenamientos por semana</p>\r\n-                <div className=\"flex gap-3 flex-wrap\">\r\n-                    {['Fuerza', 'Cardio', 'Movilidad', 'Recuperación'].map((workout) => (\r\n-                        <button\r\n-                            key={workout}\r\n-                            className=\"px-4 py-2 bg-gray-200 rounded-full text-gray-800 font-medium\"\r\n-                        >\r\n-                            {workout}\r\n-                        </button>\r\n-                    ))}\r\n-                </div>\r\n-            </div>\r\n-\r\n-            {/* Botones para Iniciar Plan y Eliminar Plan */}\r\n-            <div className=\"mt-8 flex gap-4\">\r\n-                <button\r\n-                    onClick={onStartFirstDay}\r\n-                    className=\"px-6 py-3 bg-yellow-500 text-white rounded-lg font-bold hover:bg-yellow-600\"\r\n-                >\r\n-                    Iniciar Día 1\r\n-                </button>\r\n-                <button\r\n-                    onClick={onDeletePlan}\r\n-                    className=\"px-6 py-3 bg-red-500 text-white rounded-lg font-bold hover:bg-red-600\"\r\n-                >\r\n-                    Eliminar Plan y Crear Nuevo\r\n-                </button>\r\n-            </div>\r\n-        </div>\r\n-    );\r\n-};\r\n-\r\n-export default NutritionPlan;\r\n-import React from 'react';\r\n-\r\n-const NutritionPlan = ({ plan, onStartFirstDay, onDeletePlan }) => {\r\n-    // Verificar que el plan y sus propiedades existan\r\n-    if (!plan || !plan.nutrition_plan) {\r\n-        return <p>No se ha encontrado un plan nutricional válido.</p>;\r\n-    }\r\n-\r\n-    const { calories, carbs, protein, fats } = plan.nutrition_plan;\r\n-\r\n-    return (\r\n-        <div className=\"p-8 max-w-4xl mx-auto\">\r\n-            <h1 className=\"text-3xl font-bold mb-4\">Tu Plan</h1>\r\n-            <p className=\"text-gray-600 mb-8\">\r\n-                Basado en tu evaluación, hemos creado un plan personalizado para ayudarte a alcanzar tus objetivos.\r\n-            </p>\r\n-\r\n-            {/* Sección de Nutrición */}\r\n-            <div className=\"mb-8\">\r\n-                <h2 className=\"text-xl font-semibold mb-2\">Nutrición</h2>\r\n-                <p>{calories.toFixed(0)} calorías por día</p>\r\n-                <p>\r\n-                    {Math.round((carbs / (carbs + protein + fats)) * 100)}% carbohidratos, {Math.round((protein / (carbs + protein + fats)) * 100)}% proteínas, {Math.round((fats / (carbs + protein + fats)) * 100)}% grasas\r\n-                </p>\r\n-            </div>\r\n-\r\n-            {/* Sección de Plan de Comidas */}\r\n-            <div className=\"mb-8\">\r\n-                <h2 className=\"text-xl font-semibold mb-2\">Plan de Comidas</h2>\r\n-                <div className=\"flex gap-3 flex-wrap\">\r\n-                    {['Desayuno', 'Merienda de la mañana', 'Almuerzo', 'Merienda de la tarde', 'Cena'].map((meal) => (\r\n-                        <button\r\n-                            key={meal}\r\n-                            className=\"px-4 py-2 bg-gray-200 rounded-full text-gray-800 font-medium\"\r\n-                        >\r\n-                            {meal}\r\n-                        </button>\r\n-                    ))}\r\n-                </div>\r\n-            </div>\r\n-\r\n-            {/* Sección de Entrenamientos */}\r\n-            <div className=\"mb-8\">\r\n-                <h2 className=\"text-xl font-semibold mb-2\">Entrenamientos</h2>\r\n-                <p>4 entrenamientos por semana</p>\r\n-                <div className=\"flex gap-3 flex-wrap\">\r\n-                    {['Fuerza', 'Cardio', 'Movilidad', 'Recuperación'].map((workout) => (\r\n-                        <button\r\n-                            key={workout}\r\n-                            className=\"px-4 py-2 bg-gray-200 rounded-full text-gray-800 font-medium\"\r\n-                        >\r\n-                            {workout}\r\n-                        </button>\r\n-                    ))}\r\n-                </div>\r\n-            </div>\r\n-\r\n-            {/* Botones para iniciar el plan y eliminar el plan */}\r\n-            <div className=\"mt-8 flex gap-4\">\r\n-                <button\r\n-                    onClick={onStartFirstDay}\r\n-                    className=\"px-6 py-3 bg-yellow-500 text-white rounded-lg font-bold hover:bg-yellow-600\"\r\n-                >\r\n-                    Iniciar Día 1\r\n-                </button>\r\n-                <button\r\n-                    onClick={onDeletePlan}\r\n-                    className=\"px-6 py-3 bg-red-500 text-white rounded-lg font-bold hover:bg-red-600\"\r\n-                >\r\n-                    Eliminar Plan\r\n-                </button>\r\n-            </div>\r\n-        </div>\r\n-    );\r\n-};\r\n-\r\n-export default NutritionPlan;\r\n-import React, { useState, useEffect } from 'react';\r\n-import Login from './components/Login';\r\n-import Form from './components/Form';\r\n-import NutritionPlan from './components/NutritionPlan';\r\n-import DayPlan from './components/DayPlan';\r\n-import Navbar from './components/Navbar';\r\n-\r\n-const App = () => {\r\n-    const [isAuthenticated, setIsAuthenticated] = useState(false); // Estado de autenticación\r\n-    const [hasPlan, setHasPlan] = useState(false); // Estado que indica si el usuario tiene un plan\r\n-    const [plan, setPlan] = useState(null); // Estado del plan nutricional\r\n-    const [currentDay, setCurrentDay] = useState(null); // Estado para gestionar el día actual\r\n-\r\n-    useEffect(() => {\r\n-        // Verificar si el usuario tiene un plan cuando se autentica\r\n-        if (isAuthenticated) {\r\n-            const checkUserPlan = async () => {\r\n-                try {\r\n-                    const response = await fetch('http://127.0.0.1:8000/api/check-plan', {\r\n-                        headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` }\r\n-                    });\r\n-                    if (!response.ok) {\r\n-                        throw new Error(`HTTP error! status: ${response.status}`);\r\n-                    }\r\n-                    const data = await response.json();\r\n-                    setHasPlan(data.hasPlan);\r\n-                    if (data.hasPlan) {\r\n-                        setPlan(data.plan); // Guardar el plan si ya existe\r\n-                    } else {\r\n-                        setPlan(null); // Asegurarse de que el plan sea null si no existe\r\n-                    }\r\n-                } catch (error) {\r\n-                    console.error('Error al verificar el plan del usuario:', error);\r\n-                    setHasPlan(false);\r\n-                    setPlan(null);\r\n-                }\r\n-            };\r\n-            checkUserPlan();\r\n-        }\r\n-    }, [isAuthenticated]);\r\n-\r\n-    const handleLogin = () => {\r\n-        setIsAuthenticated(true); // Cambia el estado a autenticado cuando el usuario inicie sesión\r\n-    };\r\n-\r\n-    const handleStartFirstDay = () => {\r\n-        setCurrentDay(1); // Iniciar el primer día del plan\r\n-    };\r\n-\r\n-    const handleEndDay = () => {\r\n-        setCurrentDay(null); // Volver a la vista general después de completar un día\r\n-    };\r\n-\r\n-    const handlePlanCreated = (newPlan) => {\r\n-        setPlan(newPlan); // Guardar el nuevo plan creado\r\n-        setHasPlan(true); // Ahora el usuario tiene un plan\r\n-    };\r\n-\r\n-    const handleDeletePlan = () => {\r\n-        setPlan(null);\r\n-        setHasPlan(false);\r\n-    };\r\n-\r\n-    return (\r\n-        <div className=\"App\">\r\n-            {isAuthenticated && <Navbar />}\r\n-\r\n-            {!isAuthenticated ? (\r\n-                <Login onLogin={handleLogin} />\r\n-            ) : currentDay ? (\r\n-                <DayPlan dayNumber={currentDay} onEndDay={handleEndDay} />\r\n-            ) : hasPlan ? (\r\n-                <NutritionPlan plan={plan} onStartFirstDay={handleStartFirstDay} onDeletePlan={handleDeletePlan} />\r\n-            ) : (\r\n-                <Form setPlan={handlePlanCreated} />\r\n-            )}\r\n-        </div>\r\n-    );\r\n-};\r\n-\r\n-export default App;\r\n-\r\n-import React from 'react';\r\n-\r\n-const NutritionPlan = ({ plan, onStartFirstDay, onDeletePlan }) => {\r\n-    // Verificar que el plan y sus propiedades existan\r\n-    if (!plan || !plan.nutrition_plan) {\r\n-        return <p>No se ha encontrado un plan nutricional válido.</p>;\r\n-    }\r\n-\r\n-    const { calories, carbs, protein, fats } = plan.nutrition_plan;\r\n-\r\n-    return (\r\n-        <div className=\"p-8 max-w-4xl mx-auto\">\r\n-            <h1 className=\"text-3xl font-bold mb-4\">Tu Plan</h1>\r\n-            <p className=\"text-gray-600 mb-8\">\r\n-                Basado en tu evaluación, hemos creado un plan personalizado para ayudarte a alcanzar tus objetivos.\r\n-            </p>\r\n-\r\n-            {/* Sección de Nutrición */}\r\n-            <div className=\"mb-8\">\r\n-                <h2 className=\"text-xl font-semibold mb-2\">Nutrición</h2>\r\n-                <p>{calories.toFixed(0)} calorías por día</p>\r\n-                <p>\r\n-                    {Math.round((carbs / (carbs + protein + fats)) * 100)}% carbohidratos, {Math.round((protein / (carbs + protein + fats)) * 100)}% proteínas, {Math.round((fats / (carbs + protein + fats)) * 100)}% grasas\r\n-                </p>\r\n-            </div>\r\n-\r\n-            {/* Sección de Plan de Comidas */}\r\n-            <div className=\"mb-8\">\r\n-                <h2 className=\"text-xl font-semibold mb-2\">Plan de Comidas</h2>\r\n-                <div className=\"flex gap-3 flex-wrap\">\r\n-                    {['Desayuno', 'Merienda de la mañana', 'Almuerzo', 'Merienda de la tarde', 'Cena'].map((meal) => (\r\n-                        <button\r\n-                            key={meal}\r\n-                            className=\"px-4 py-2 bg-gray-200 rounded-full text-gray-800 font-medium\"\r\n-                        >\r\n-                            {meal}\r\n-                        </button>\r\n-                    ))}\r\n-                </div>\r\n-            </div>\r\n-\r\n-            {/* Sección de Entrenamientos */}\r\n-            <div className=\"mb-8\">\r\n-                <h2 className=\"text-xl font-semibold mb-2\">Entrenamientos</h2>\r\n-                <p>4 entrenamientos por semana</p>\r\n-                <div className=\"flex gap-3 flex-wrap\">\r\n-                    {['Fuerza', 'Cardio', 'Movilidad', 'Recuperación'].map((workout) => (\r\n-                        <button\r\n-                            key={workout}\r\n-                            className=\"px-4 py-2 bg-gray-200 rounded-full text-gray-800 font-medium\"\r\n-                        >\r\n-                            {workout}\r\n-                        </button>\r\n-                    ))}\r\n-                </div>\r\n-            </div>\r\n-\r\n-            {/* Botones para iniciar el plan y eliminar el plan */}\r\n-            <div className=\"mt-8 flex gap-4\">\r\n-                <button\r\n-                    onClick={onStartFirstDay}\r\n-                    className=\"px-6 py-3 bg-yellow-500 text-white rounded-lg font-bold hover:bg-yellow-600\"\r\n-                >\r\n-                    Iniciar Día 1\r\n-                </button>\r\n-                <button\r\n-                    onClick={onDeletePlan}\r\n-                    className=\"px-6 py-3 bg-red-500 text-white rounded-lg font-bold hover:bg-red-600\"\r\n-                >\r\n-                    Eliminar Plan\r\n-                </button>\r\n-            </div>\r\n-        </div>\r\n-    );\r\n-};\r\n-\r\n-export default NutritionPlan;\r\n-import React from 'react';\r\n-\r\n-const NutritionPlan = ({ plan, onStartFirstDay }) => {\r\n-  if (!plan || !plan.nutrition_plan) {\r\n-      return <p>No se ha encontrado un plan nutricional válido.</p>;\r\n-  }\r\n-\r\n-  const { calories, carbs, protein, fats } = plan.nutrition_plan;\r\n-\r\n-\r\n-    return (\r\n-        <div className=\"p-8 max-w-4xl mx-auto\">\r\n-            <h1 className=\"text-3xl font-bold mb-4\">Tu Plan</h1>\r\n-            <p className=\"text-gray-600 mb-8\">\r\n-                Basado en tu evaluación, hemos creado un plan personalizado para ayudarte a alcanzar tus objetivos.\r\n-            </p>\r\n-\r\n-            {/* Sección de Nutrición */}\r\n-            <div className=\"mb-8\">\r\n-                <h2 className=\"text-xl font-semibold mb-2\">Nutrición</h2>\r\n-                <p>{plan.nutrition_plan.calories.toFixed(0)} calorías por día</p>\r\n-                <p>\r\n-                    {Math.round((plan.nutrition_plan.carbs / (plan.nutrition_plan.carbs + plan.nutrition_plan.protein + plan.nutrition_plan.fats)) * 100)}%\r\n-                    carbohidratos, {Math.round((plan.nutrition_plan.protein / (plan.nutrition_plan.carbs + plan.nutrition_plan.protein + plan.nutrition_plan.fats)) * 100)}%\r\n-                    proteínas, {Math.round((plan.nutrition_plan.fats / (plan.nutrition_plan.carbs + plan.nutrition_plan.protein + plan.nutrition_plan.fats)) * 100)}% grasas\r\n-                </p>\r\n-            </div>\r\n-\r\n-            {/* Sección de Plan de Comidas */}\r\n-            <div className=\"mb-8\">\r\n-                <h2 className=\"text-xl font-semibold mb-2\">Plan de Comidas</h2>\r\n-                <div className=\"flex gap-3 flex-wrap\">\r\n-                    {['Desayuno', 'Merienda de la mañana', 'Almuerzo', 'Merienda de la tarde', 'Cena'].map((meal) => (\r\n-                        <button\r\n-                            key={meal}\r\n-                            className=\"px-4 py-2 bg-gray-200 rounded-full text-gray-800 font-medium\"\r\n-                        >\r\n-                            {meal}\r\n-                        </button>\r\n-                    ))}\r\n-                </div>\r\n-            </div>\r\n-\r\n-            {/* Sección de Entrenamientos */}\r\n-            <div className=\"mb-8\">\r\n-                <h2 className=\"text-xl font-semibold mb-2\">Entrenamientos</h2>\r\n-                <p>4 entrenamientos por semana</p>\r\n-                <div className=\"flex gap-3 flex-wrap\">\r\n-                    {['Fuerza', 'Cardio', 'Movilidad', 'Recuperación'].map((workout) => (\r\n-                        <button\r\n-                            key={workout}\r\n-                            className=\"px-4 py-2 bg-gray-200 rounded-full text-gray-800 font-medium\"\r\n-                        >\r\n-                            {workout}\r\n-                        </button>\r\n-                    ))}\r\n-                </div>\r\n-            </div>\r\n-\r\n-            {/* Botones para iniciar el plan y eliminar el plan */}\r\n-            <div className=\"mt-8 flex gap-4\">\r\n-                <button\r\n-                    onClick={onStartFirstDay}\r\n-                    className=\"px-6 py-3 bg-yellow-500 text-white rounded-lg font-bold hover:bg-yellow-600\"\r\n-                >\r\n-                    Iniciar Día 1\r\n-                </button>\r\n-                <button\r\n-                    onClick={onDeletePlan}\r\n-                    className=\"px-6 py-3 bg-red-500 text-white rounded-lg font-bold hover:bg-red-600\"\r\n-                >\r\n-                    Eliminar Plan\r\n-                </button>\r\n-            </div>\r\n-        </div>\r\n-    );\r\n-};\r\n-\r\n-export default NutritionPlan;\r\n-import React from 'react';\r\n-\r\n-const NutritionPlan = ({ plan, onStartFirstDay, onDeletePlan }) => {\r\n-    return (\r\n-        <div className=\"p-8 max-w-4xl mx-auto\">\r\n-            <h1 className=\"text-3xl font-bold mb-4\">Tu Plan</h1>\r\n-            <p className=\"text-gray-600 mb-8\">\r\n-                Basado en tu evaluación, hemos creado un plan personalizado para ayudarte a alcanzar tus objetivos.\r\n-            </p>\r\n-\r\n-            {/* Sección de Nutrición */}\r\n-            <div className=\"mb-8\">\r\n-                <h2 className=\"text-xl font-semibold mb-2\">Nutrición</h2>\r\n-                <p>{plan.nutrition_plan.calories.toFixed(0)} calorías por día</p>\r\n-                <p>\r\n-                    {Math.round((plan.nutrition_plan.carbs / (plan.nutrition_plan.carbs + plan.nutrition_plan.protein + plan.nutrition_plan.fats)) * 100)}%\r\n-                    carbohidratos, {Math.round((plan.nutrition_plan.protein / (plan.nutrition_plan.carbs + plan.nutrition_plan.protein + plan.nutrition_plan.fats)) * 100)}%\r\n-                    proteínas, {Math.round((plan.nutrition_plan.fats / (plan.nutrition_plan.carbs + plan.nutrition_plan.protein + plan.nutrition_plan.fats)) * 100)}% grasas\r\n-                </p>\r\n-            </div>\r\n-\r\n-            {/* Sección de Plan de Comidas */}\r\n-            <div className=\"mb-8\">\r\n-                <h2 className=\"text-xl font-semibold mb-2\">Plan de Comidas</h2>\r\n-                <div className=\"flex gap-3 flex-wrap\">\r\n-                    {['Desayuno', 'Merienda de la mañana', 'Almuerzo', 'Merienda de la tarde', 'Cena'].map((meal) => (\r\n-                        <button\r\n-                            key={meal}\r\n-                            className=\"px-4 py-2 bg-gray-200 rounded-full text-gray-800 font-medium\"\r\n-                        >\r\n-                            {meal}\r\n-                        </button>\r\n-                    ))}\r\n-                </div>\r\n-            </div>\r\n-\r\n-            {/* Sección de Entrenamientos */}\r\n-            <div className=\"mb-8\">\r\n-                <h2 className=\"text-xl font-semibold mb-2\">Entrenamientos</h2>\r\n-                <p>4 entrenamientos por semana</p>\r\n-                <div className=\"flex gap-3 flex-wrap\">\r\n-                    {['Fuerza', 'Cardio', 'Movilidad', 'Recuperación'].map((workout) => (\r\n-                        <button\r\n-                            key={workout}\r\n-                            className=\"px-4 py-2 bg-gray-200 rounded-full text-gray-800 font-medium\"\r\n-                        >\r\n-                            {workout}\r\n-                        </button>\r\n-                    ))}\r\n-                </div>\r\n-            </div>\r\n-\r\n-            {/* Botones para iniciar el plan y eliminar el plan */}\r\n-            <div className=\"mt-8 flex gap-4\">\r\n-                <button\r\n-                    onClick={onStartFirstDay}\r\n-                    className=\"px-6 py-3 bg-yellow-500 text-white rounded-lg font-bold hover:bg-yellow-600\"\r\n-                >\r\n-                    Iniciar Día 1\r\n-                </button>\r\n-                <button\r\n-                    onClick={onDeletePlan}\r\n-                    className=\"px-6 py-3 bg-red-500 text-white rounded-lg font-bold hover:bg-red-600\"\r\n-                >\r\n-                    Eliminar Plan\r\n-                </button>\r\n-            </div>\r\n-        </div>\r\n-    );\r\n-};\r\n-\r\n-export default NutritionPlan;\r\n-import React from 'react';\r\n-\r\n-const NutritionPlan = ({ plan, onStartFirstDay }) => {\r\n-  // Asegurarse de que el plan y sus propiedades estén definidas antes de usarlas\r\n-  const calories = plan?.nutrition_plan?.calories ? plan.nutrition_plan.calories.toFixed(0) : '0';\r\n-  const carbs = plan?.nutrition_plan?.carbs || 0;\r\n-  const protein = plan?.nutrition_plan?.protein || 0;\r\n-  const fats = plan?.nutrition_plan?.fats || 0;\r\n-\r\n-  const carbPercentage = Math.round((carbs / (carbs + protein + fats)) * 100) || 0;\r\n-  const proteinPercentage = Math.round((protein / (carbs + protein + fats)) * 100) || 0;\r\n-  const fatPercentage = Math.round((fats / (carbs + protein + fats)) * 100) || 0;\r\n-\r\n-  return (\r\n-    <div className=\"p-8 max-w-4xl mx-auto\">\r\n-      <h1 className=\"text-3xl font-bold mb-4\">Your Plan</h1>\r\n-      <p className=\"text-gray-600 mb-8\">\r\n-        Based on your assessment, we've created a personalized plan to help you reach your goals.\r\n-      </p>\r\n-\r\n-      {/* Nutrition Section */}\r\n-      <div className=\"mb-8\">\r\n-        <h2 className=\"text-xl font-semibold mb-2\">Nutrition</h2>\r\n-        <p>{calories} calories per day</p>\r\n-        <p>\r\n-          {carbPercentage}% carbs, {proteinPercentage}% protein, {fatPercentage}% fat\r\n-        </p>\r\n-      </div>\r\n-\r\n-      {/* Meal Plan Section */}\r\n-      <div className=\"mb-8\">\r\n-        <h2 className=\"text-xl font-semibold mb-2\">Meal Plan</h2>\r\n-        <div className=\"flex gap-3 flex-wrap\">\r\n-          {['Breakfast', 'Morning snack', 'Lunch', 'Afternoon snack', 'Dinner'].map((meal) => (\r\n-            <button\r\n-              key={meal}\r\n-              className=\"px-4 py-2 bg-gray-200 rounded-full text-gray-800 font-medium\"\r\n-            >\r\n-              {meal}\r\n-            </button>\r\n-          ))}\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Workout Section */}\r\n-      <div className=\"mb-8\">\r\n-        <h2 className=\"text-xl font-semibold mb-2\">Workouts</h2>\r\n-        <p>4 workouts per week</p>\r\n-        <div className=\"flex gap-3 flex-wrap\">\r\n-          {['Strength', 'Cardio', 'Mobility', 'Recovery'].map((workout) => (\r\n-            <button\r\n-              key={workout}\r\n-              className=\"px-4 py-2 bg-gray-200 rounded-full text-gray-800 font-medium\"\r\n-            >\r\n-              {workout}\r\n-            </button>\r\n-          ))}\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Button to Start Plan */}\r\n-      <div className=\"mt-8\">\r\n-        <button\r\n-          onClick={onStartFirstDay}\r\n-          className=\"px-6 py-3 bg-yellow-500 text-white rounded-lg font-bold hover:bg-yellow-600\"\r\n-        >\r\n-          Start Day 1\r\n-        </button>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default NutritionPlan;\r\n-import React from 'react';\r\n-\r\n-const NutritionPlan = ({ plan, onStartFirstDay, onDeletePlan }) => {\r\n-    return (\r\n-        <div className=\"p-8 max-w-4xl mx-auto\">\r\n-            <h1 className=\"text-3xl font-bold mb-4\">Tu Plan</h1>\r\n-            <p className=\"text-gray-600 mb-8\">\r\n-                Basado en tu evaluación, hemos creado un plan personalizado para ayudarte a alcanzar tus objetivos.\r\n-            </p>\r\n-\r\n-            {/* Sección de Nutrición */}\r\n-            <div className=\"mb-8\">\r\n-                <h2 className=\"text-xl font-semibold mb-2\">Nutrición</h2>\r\n-                <p>{plan.nutrition_plan.calories.toFixed(0)} calorías por día</p>\r\n-                <p>\r\n-                    {Math.round((plan.nutrition_plan.carbs / (plan.nutrition_plan.carbs + plan.nutrition_plan.protein + plan.nutrition_plan.fats)) * 100)}%\r\n-                    carbohidratos, {Math.round((plan.nutrition_plan.protein / (plan.nutrition_plan.carbs + plan.nutrition_plan.protein + plan.nutrition_plan.fats)) * 100)}%\r\n-                    proteínas, {Math.round((plan.nutrition_plan.fats / (plan.nutrition_plan.carbs + plan.nutrition_plan.protein + plan.nutrition_plan.fats)) * 100)}% grasas\r\n-                </p>\r\n-            </div>\r\n-\r\n-            {/* Sección de Plan de Comidas */}\r\n-            <div className=\"mb-8\">\r\n-                <h2 className=\"text-xl font-semibold mb-2\">Plan de Comidas</h2>\r\n-                <div className=\"flex gap-3 flex-wrap\">\r\n-                    {['Desayuno', 'Merienda de la mañana', 'Almuerzo', 'Merienda de la tarde', 'Cena'].map((meal) => (\r\n-                        <button\r\n-                            key={meal}\r\n-                            className=\"px-4 py-2 bg-gray-200 rounded-full text-gray-800 font-medium\"\r\n-                        >\r\n-                            {meal}\r\n-                        </button>\r\n-                    ))}\r\n-                </div>\r\n-            </div>\r\n-\r\n-            {/* Sección de Entrenamientos */}\r\n-            <div className=\"mb-8\">\r\n-                <h2 className=\"text-xl font-semibold mb-2\">Entrenamientos</h2>\r\n-                <p>4 entrenamientos por semana</p>\r\n-                <div className=\"flex gap-3 flex-wrap\">\r\n-                    {['Fuerza', 'Cardio', 'Movilidad', 'Recuperación'].map((workout) => (\r\n-                        <button\r\n-                            key={workout}\r\n-                            className=\"px-4 py-2 bg-gray-200 rounded-full text-gray-800 font-medium\"\r\n-                        >\r\n-                            {workout}\r\n-                        </button>\r\n-                    ))}\r\n-                </div>\r\n-            </div>\r\n-\r\n-            {/* Botones para iniciar el plan y eliminar el plan */}\r\n-            <div className=\"mt-8 flex gap-4\">\r\n-                <button\r\n-                    onClick={onStartFirstDay}\r\n-                    className=\"px-6 py-3 bg-yellow-500 text-white rounded-lg font-bold hover:bg-yellow-600\"\r\n-                >\r\n-                    Iniciar Día 1\r\n-                </button>\r\n-                <button\r\n-                    onClick={onDeletePlan}\r\n-                    className=\"px-6 py-3 bg-red-500 text-white rounded-lg font-bold hover:bg-red-600\"\r\n-                >\r\n-                    Eliminar Plan\r\n-                </button>\r\n-            </div>\r\n-        </div>\r\n-    );\r\n-};\r\n-\r\n-export default NutritionPlan;\r\n-import React from 'react';\r\n-\r\n-const NutritionPlan = ({ plan, onStartFirstDay }) => {\r\n-  return (\r\n-    <div className=\"p-8 max-w-4xl mx-auto\">\r\n-      <h1 className=\"text-3xl font-bold mb-4\">Your Plan</h1>\r\n-      <p className=\"text-gray-600 mb-8\">\r\n-        Based on your assessment, we've created a personalized plan to help you reach your goals.\r\n-      </p>\r\n-\r\n-      {/* Nutrition Section */}\r\n-      <div className=\"mb-8\">\r\n-        <h2 className=\"text-xl font-semibold mb-2\">Nutrition</h2>\r\n-        <p>{plan.nutrition_plan.calories.toFixed(0)} calories per day</p>\r\n-        <p>\r\n-          {Math.round((plan.nutrition_plan.carbs / (plan.nutrition_plan.carbs + plan.nutrition_plan.protein + plan.nutrition_plan.fats)) * 100)}%\r\n-          carbs, {Math.round((plan.nutrition_plan.protein / (plan.nutrition_plan.carbs + plan.nutrition_plan.protein + plan.nutrition_plan.fats)) * 100)}%\r\n-          protein, {Math.round((plan.nutrition_plan.fats / (plan.nutrition_plan.carbs + plan.nutrition_plan.protein + plan.nutrition_plan.fats)) * 100)}% fat\r\n-        </p>\r\n-      </div>\r\n-\r\n-      {/* Meal Plan Section */}\r\n-      <div className=\"mb-8\">\r\n-        <h2 className=\"text-xl font-semibold mb-2\">Meal Plan</h2>\r\n-        <div className=\"flex gap-3 flex-wrap\">\r\n-          {['Breakfast', 'Morning snack', 'Lunch', 'Afternoon snack', 'Dinner'].map((meal) => (\r\n-            <button\r\n-              key={meal}\r\n-              className=\"px-4 py-2 bg-gray-200 rounded-full text-gray-800 font-medium\"\r\n-            >\r\n-              {meal}\r\n-            </button>\r\n-          ))}\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Workout Section */}\r\n-      <div className=\"mb-8\">\r\n-        <h2 className=\"text-xl font-semibold mb-2\">Workouts</h2>\r\n-        <p>4 workouts per week</p>\r\n-        <div className=\"flex gap-3 flex-wrap\">\r\n-          {['Strength', 'Cardio', 'Mobility', 'Recovery'].map((workout) => (\r\n-            <button\r\n-              key={workout}\r\n-              className=\"px-4 py-2 bg-gray-200 rounded-full text-gray-800 font-medium\"\r\n-            >\r\n-              {workout}\r\n-            </button>\r\n-          ))}\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Button to Start Plan */}\r\n-      <div className=\"mt-8\">\r\n-        <button onClick={onStartFirstDay}className=\"px-6 py-3 bg-yellow-500 text-white rounded-lg font-bold hover:bg-yellow-600\">\r\n-          Start Day 1\r\n-        </button>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default NutritionPlan;\r\n-import React from 'react';\r\n-\r\n-const NutritionPlan = ({ plan, onStartFirstDay }) => {\r\n-  return (\r\n-    <div className=\"p-8 max-w-4xl mx-auto\">\r\n-      <h1 className=\"text-3xl font-bold mb-4\">Your Plan</h1>\r\n-      <p className=\"text-gray-600 mb-8\">\r\n-        Based on your assessment, we've created a personalized plan to help you reach your goals.\r\n-      </p>\r\n-\r\n-      {/* Nutrition Section */}\r\n-      <div className=\"mb-8\">\r\n-        <h2 className=\"text-xl font-semibold mb-2\">Nutrition</h2>\r\n-        <p>{plan.nutrition_plan.calories.toFixed(0)} calories per day</p>\r\n-        <p>\r\n-          {Math.round((plan.nutrition_plan.carbs / (plan.nutrition_plan.carbs + plan.nutrition_plan.protein + plan.nutrition_plan.fats)) * 100)}%\r\n-          carbs, {Math.round((plan.nutrition_plan.protein / (plan.nutrition_plan.carbs + plan.nutrition_plan.protein + plan.nutrition_plan.fats)) * 100)}%\r\n-          protein, {Math.round((plan.nutrition_plan.fats / (plan.nutrition_plan.carbs + plan.nutrition_plan.protein + plan.nutrition_plan.fats)) * 100)}% fat\r\n-        </p>\r\n-      </div>\r\n-\r\n-      {/* Meal Plan Section */}\r\n-      <div className=\"mb-8\">\r\n-        <h2 className=\"text-xl font-semibold mb-2\">Meal Plan</h2>\r\n-        <div className=\"flex gap-3 flex-wrap\">\r\n-          {['Breakfast', 'Morning snack', 'Lunch', 'Afternoon snack', 'Dinner'].map((meal) => (\r\n-            <button\r\n-              key={meal}\r\n-              className=\"px-4 py-2 bg-gray-200 rounded-full text-gray-800 font-medium\"\r\n-            >\r\n-              {meal}\r\n-            </button>\r\n-          ))}\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Workout Section */}\r\n-      <div className=\"mb-8\">\r\n-        <h2 className=\"text-xl font-semibold mb-2\">Workouts</h2>\r\n-        <p>4 workouts per week</p>\r\n-        <div className=\"flex gap-3 flex-wrap\">\r\n-          {['Strength', 'Cardio', 'Mobility', 'Recovery'].map((workout) => (\r\n-            <button\r\n-              key={workout}\r\n-              className=\"px-4 py-2 bg-gray-200 rounded-full text-gray-800 font-medium\"\r\n-            >\r\n-              {workout}\r\n-            </button>\r\n-          ))}\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Button to Start Plan */}\r\n-      <div className=\"mt-8\">\r\n-        <button onClick={onStartFirstDay}className=\"px-6 py-3 bg-yellow-500 text-white rounded-lg font-bold hover:bg-yellow-600\">\r\n-          Start Day 1\r\n-        </button>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default NutritionPlan;\r\n-const NutritionPlan = ({ plan, onStartFirstDay }) => {\r\n-  if (!plan || !plan.nutrition_plan) {\r\n-      return <p>No se ha encontrado un plan nutricional válido.</p>;\r\n-  }\r\n-\r\n-  const { calories, carbs, protein, fats } = plan.nutrition_plan;\r\n-\r\n-  return (\r\n-      <div className=\"p-8 max-w-4xl mx-auto\">\r\n-          <h1 className=\"text-3xl font-bold mb-4\">Tu Plan</h1>\r\n-          <p className=\"text-gray-600 mb-8\">\r\n-              Basado en tu evaluación, hemos creado un plan personalizado para ayudarte a alcanzar tus objetivos.\r\n-          </p>\r\n-\r\n-          {/* Sección de Nutrición */}\r\n-          <div className=\"mb-8\">\r\n-              <h2 className=\"text-xl font-semibold mb-2\">Nutrición</h2>\r\n-              <p>{calories.toFixed(0)} calorías por día</p>\r\n-              <p>\r\n-                  {Math.round((carbs / (carbs + protein + fats)) * 100)}% carbohidratos, {Math.round((protein / (carbs + protein + fats)) * 100)}% proteínas, {Math.round((fats / (carbs + protein + fats)) * 100)}% grasas\r\n-              </p>\r\n-          </div>\r\n-\r\n-          {/* Sección de Plan de Comidas */}\r\n-          <div className=\"mb-8\">\r\n-              <h2 className=\"text-xl font-semibold mb-2\">Plan de Comidas</h2>\r\n-              <div className=\"flex gap-3 flex-wrap\">\r\n-                  {['Desayuno', 'Merienda de la mañana', 'Almuerzo', 'Merienda de la tarde', 'Cena'].map((meal) => (\r\n-                      <button\r\n-                          key={meal}\r\n-                          className=\"px-4 py-2 bg-gray-200 rounded-full text-gray-800 font-medium\"\r\n-                      >\r\n-                          {meal}\r\n-                      </button>\r\n-                  ))}\r\n-              </div>\r\n-          </div>\r\n-\r\n-          {/* Sección de Ejercicios */}\r\n-          <div className=\"mb-8\">\r\n-              <h2 className=\"text-xl font-semibold mb-2\">Ejercicios</h2>\r\n-              <p>4 entrenamientos por semana</p>\r\n-              <div className=\"flex gap-3 flex-wrap\">\r\n-                  {['Fuerza', 'Cardio', 'Movilidad', 'Recuperación'].map((workout) => (\r\n-                      <button\r\n-                          key={workout}\r\n-                          className=\"px-4 py-2 bg-gray-200 rounded-full text-gray-800 font-medium\"\r\n-                      >\r\n-                          {workout}\r\n-                      </button>\r\n-                  ))}\r\n-              </div>\r\n-          </div>\r\n-\r\n-          {/* Botón para Iniciar el Plan */}\r\n-          <div className=\"mt-8\">\r\n-              <button onClick={onStartFirstDay} className=\"px-6 py-3 bg-yellow-500 text-white rounded-lg font-bold hover:bg-yellow-600\">\r\n-                  Iniciar Día 1\r\n-              </button>\r\n-          </div>\r\n-      </div>\r\n-  );\r\n-};\r\n-\r\n-export default NutritionPlan;\r\n-import React from 'react';\r\n-\r\n-const NutritionPlan = ({ plan, onStartFirstDay, onDeletePlan }) => {\r\n-  return (\r\n-    <div className=\"p-8 max-w-4xl mx-auto\">\r\n-      <h1 className=\"text-3xl font-bold mb-4\">Tu Plan</h1>\r\n-      <p className=\"text-gray-600 mb-8\">\r\n-        Basado en tu evaluación, hemos creado un plan personalizado para ayudarte a alcanzar tus objetivos.\r\n-      </p>\r\n-\r\n-      {/* Sección de Nutrición */}\r\n-      <div className=\"mb-8\">\r\n-        <h2 className=\"text-xl font-semibold mb-2\">Nutrición</h2>\r\n-        <p>{plan.nutrition_plan.calories.toFixed(0)} calorías por día</p>\r\n-        <p>\r\n-          {Math.round((plan.nutrition_plan.carbs / (plan.nutrition_plan.carbs + plan.nutrition_plan.protein + plan.nutrition_plan.fats)) * 100)}%\r\n-          carbohidratos, {Math.round((plan.nutrition_plan.protein / (plan.nutrition_plan.carbs + plan.nutrition_plan.protein + plan.nutrition_plan.fats)) * 100)}%\r\n-          proteínas, {Math.round((plan.nutrition_plan.fats / (plan.nutrition_plan.carbs + plan.nutrition_plan.protein + plan.nutrition_plan.fats)) * 100)}% grasas\r\n-        </p>\r\n-      </div>\r\n-\r\n-      {/* Botón para eliminar el plan */}\r\n-      <div className=\"mt-8\">\r\n-        <button\r\n-          onClick={onDeletePlan}\r\n-          className=\"px-6 py-3 bg-red-500 text-white rounded-lg font-bold hover:bg-red-600\"\r\n-        >\r\n-          Eliminar Plan\r\n-        </button>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default NutritionPlan;\r\n-import React from 'react';\r\n-\r\n-const NutritionPlan = ({ plan, onStartFirstDay }) => {\r\n-  // Asegurarse de que el plan y sus propiedades estén definidas antes de usarlas\r\n-  const calories = plan?.nutrition_plan?.calories ? plan.nutrition_plan.calories.toFixed(0) : '0';\r\n-  const carbs = plan?.nutrition_plan?.carbs || 0;\r\n-  const protein = plan?.nutrition_plan?.protein || 0;\r\n-  const fats = plan?.nutrition_plan?.fats || 0;\r\n-\r\n-  const carbPercentage = Math.round((carbs / (carbs + protein + fats)) * 100) || 0;\r\n-  const proteinPercentage = Math.round((protein / (carbs + protein + fats)) * 100) || 0;\r\n-  const fatPercentage = Math.round((fats / (carbs + protein + fats)) * 100) || 0;\r\n-\r\n-  return (\r\n-    <div className=\"p-8 max-w-4xl mx-auto\">\r\n-      <h1 className=\"text-3xl font-bold mb-4\">Your Plan</h1>\r\n-      <p className=\"text-gray-600 mb-8\">\r\n-        Based on your assessment, we've created a personalized plan to help you reach your goals.\r\n-      </p>\r\n-\r\n-      {/* Nutrition Section */}\r\n-      <div className=\"mb-8\">\r\n-        <h2 className=\"text-xl font-semibold mb-2\">Nutrition</h2>\r\n-        <p>{calories} calories per day</p>\r\n-        <p>\r\n-          {carbPercentage}% carbs, {proteinPercentage}% protein, {fatPercentage}% fat\r\n-        </p>\r\n-      </div>\r\n-\r\n-      {/* Meal Plan Section */}\r\n-      <div className=\"mb-8\">\r\n-        <h2 className=\"text-xl font-semibold mb-2\">Meal Plan</h2>\r\n-        <div className=\"flex gap-3 flex-wrap\">\r\n-          {['Breakfast', 'Morning snack', 'Lunch', 'Afternoon snack', 'Dinner'].map((meal) => (\r\n-            <button\r\n-              key={meal}\r\n-              className=\"px-4 py-2 bg-gray-200 rounded-full text-gray-800 font-medium\"\r\n-            >\r\n-              {meal}\r\n-            </button>\r\n-          ))}\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Workout Section */}\r\n-      <div className=\"mb-8\">\r\n-        <h2 className=\"text-xl font-semibold mb-2\">Workouts</h2>\r\n-        <p>4 workouts per week</p>\r\n-        <div className=\"flex gap-3 flex-wrap\">\r\n-          {['Strength', 'Cardio', 'Mobility', 'Recovery'].map((workout) => (\r\n-            <button\r\n-              key={workout}\r\n-              className=\"px-4 py-2 bg-gray-200 rounded-full text-gray-800 font-medium\"\r\n-            >\r\n-              {workout}\r\n-            </button>\r\n-          ))}\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Button to Start Plan */}\r\n-      <div className=\"mt-8\">\r\n-        <button\r\n-          onClick={onStartFirstDay}\r\n-          className=\"px-6 py-3 bg-yellow-500 text-white rounded-lg font-bold hover:bg-yellow-600\"\r\n-        >\r\n-          Start Day 1\r\n-        </button>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default NutritionPlan;\r\n-import React from 'react';\r\n-\r\n-const NutritionPlan = ({ plan, onStartFirstDay, onDeletePlan }) => {\r\n-  return (\r\n-    <div className=\"p-8 max-w-4xl mx-auto\">\r\n-      <h1 className=\"text-3xl font-bold mb-4\">Tu Plan</h1>\r\n-      <p className=\"text-gray-600 mb-8\">\r\n-        Basado en tu evaluación, hemos creado un plan personalizado para ayudarte a alcanzar tus objetivos.\r\n-      </p>\r\n-\r\n-      {/* Sección de Nutrición */}\r\n-      <div className=\"mb-8\">\r\n-        <h2 className=\"text-xl font-semibold mb-2\">Nutrición</h2>\r\n-        <p>{plan.nutrition_plan.calories.toFixed(0)} calorías por día</p>\r\n-        <p>\r\n-          {Math.round((plan.nutrition_plan.carbs / (plan.nutrition_plan.carbs + plan.nutrition_plan.protein + plan.nutrition_plan.fats)) * 100)}%\r\n-          carbohidratos, {Math.round((plan.nutrition_plan.protein / (plan.nutrition_plan.carbs + plan.nutrition_plan.protein + plan.nutrition_plan.fats)) * 100)}%\r\n-          proteínas, {Math.round((plan.nutrition_plan.fats / (plan.nutrition_plan.carbs + plan.nutrition_plan.protein + plan.nutrition_plan.fats)) * 100)}% grasas\r\n-        </p>\r\n-      </div>\r\n-\r\n-      {/* Botón para eliminar el plan */}\r\n-      <div className=\"mt-8\">\r\n-        <button\r\n-          onClick={onDeletePlan}\r\n-          className=\"px-6 py-3 bg-red-500 text-white rounded-lg font-bold hover:bg-red-600\"\r\n-        >\r\n-          Eliminar Plan\r\n-        </button>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default NutritionPlan;\r\n-import React from 'react';\r\n-\r\n-const NutritionPlan = ({ plan, onStartFirstDay }) => {\r\n-  // Asegurarse de que el plan y sus propiedades estén definidas antes de usarlas\r\n-  const calories = plan?.nutrition_plan?.calories ? plan.nutrition_plan.calories.toFixed(0) : '0';\r\n-  const carbs = plan?.nutrition_plan?.carbs || 0;\r\n-  const protein = plan?.nutrition_plan?.protein || 0;\r\n-  const fats = plan?.nutrition_plan?.fats || 0;\r\n-\r\n-  const carbPercentage = Math.round((carbs / (carbs + protein + fats)) * 100) || 0;\r\n-  const proteinPercentage = Math.round((protein / (carbs + protein + fats)) * 100) || 0;\r\n-  const fatPercentage = Math.round((fats / (carbs + protein + fats)) * 100) || 0;\r\n-\r\n-  return (\r\n-    <div className=\"p-8 max-w-4xl mx-auto\">\r\n-      <h1 className=\"text-3xl font-bold mb-4\">Your Plan</h1>\r\n-      <p className=\"text-gray-600 mb-8\">\r\n-        Based on your assessment, we've created a personalized plan to help you reach your goals.\r\n-      </p>\r\n-\r\n-      {/* Nutrition Section */}\r\n-      <div className=\"mb-8\">\r\n-        <h2 className=\"text-xl font-semibold mb-2\">Nutrition</h2>\r\n-        <p>{calories} calories per day</p>\r\n-        <p>\r\n-          {carbPercentage}% carbs, {proteinPercentage}% protein, {fatPercentage}% fat\r\n-        </p>\r\n-      </div>\r\n-\r\n-      {/* Meal Plan Section */}\r\n-      <div className=\"mb-8\">\r\n-        <h2 className=\"text-xl font-semibold mb-2\">Meal Plan</h2>\r\n-        <div className=\"flex gap-3 flex-wrap\">\r\n-          {['Breakfast', 'Morning snack', 'Lunch', 'Afternoon snack', 'Dinner'].map((meal) => (\r\n-            <button\r\n-              key={meal}\r\n-              className=\"px-4 py-2 bg-gray-200 rounded-full text-gray-800 font-medium\"\r\n-            >\r\n-              {meal}\r\n-            </button>\r\n-          ))}\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Workout Section */}\r\n-      <div className=\"mb-8\">\r\n-        <h2 className=\"text-xl font-semibold mb-2\">Workouts</h2>\r\n-        <p>4 workouts per week</p>\r\n-        <div className=\"flex gap-3 flex-wrap\">\r\n-          {['Strength', 'Cardio', 'Mobility', 'Recovery'].map((workout) => (\r\n-            <button\r\n-              key={workout}\r\n-              className=\"px-4 py-2 bg-gray-200 rounded-full text-gray-800 font-medium\"\r\n-            >\r\n-              {workout}\r\n-            </button>\r\n-          ))}\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Button to Start Plan */}\r\n-      <div className=\"mt-8\">\r\n-        <button\r\n-          onClick={onStartFirstDay}\r\n-          className=\"px-6 py-3 bg-yellow-500 text-white rounded-lg font-bold hover:bg-yellow-600\"\r\n-        >\r\n-          Start Day 1\r\n-        </button>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default NutritionPlan;\r\n"
                },
                {
                    "date": 1730735331043,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,69 @@\n+// frontend/components/NutritionPlan.js\r\n+import React from 'react';\r\n+\r\n+const NutritionPlan = ({ plan, onStartFirstDay, onDeletePlan }) => {\r\n+    if (!plan || !plan.dias) {\r\n+        return (\r\n+            <div className=\"p-8 max-w-4xl mx-auto\">\r\n+                <h1 className=\"text-3xl font-bold mb-4\">No se ha encontrado un plan válido.</h1>\r\n+                <button\r\n+                    onClick={onDeletePlan}\r\n+                    className=\"px-6 py-3 bg-red-500 text-white rounded-lg font-bold hover:bg-red-600\"\r\n+                >\r\n+                    Eliminar Plan y Crear Nuevo\r\n+                </button>\r\n+            </div>\r\n+        );\r\n+    }\r\n+\r\n+    // Resumen del plan\r\n+    const totalDias = plan.dias.length;\r\n+    const totalEjercicios = plan.dias.reduce((acc, dia) => acc + dia.ejercicios.length, 0);\r\n+    const totalRecetas = plan.dias.reduce((acc, dia) => acc + dia.recetas.length, 0);\r\n+\r\n+    return (\r\n+        <div className=\"p-8 max-w-4xl mx-auto\">\r\n+            <h1 className=\"text-3xl font-bold mb-4\">Tu Plan Personalizado de 30 Días</h1>\r\n+            <p className=\"text-gray-600 mb-8\">\r\n+                Basado en tu evaluación, hemos creado un plan personalizado de 30 días para ayudarte a alcanzar tus objetivos.\r\n+            </p>\r\n+\r\n+            {/* Resumen del Plan */}\r\n+            <div className=\"mb-8\">\r\n+                <h2 className=\"text-xl font-semibold mb-4\">Resumen del Plan</h2>\r\n+                <p><strong>Días Totales:</strong> {totalDias}</p>\r\n+                <p><strong>Total de Ejercicios:</strong> {totalEjercicios}</p>\r\n+                <p><strong>Total de Recetas:</strong> {totalRecetas}</p>\r\n+            </div>\r\n+\r\n+            {/* Vista Semanal (Opcional) */}\r\n+            <div className=\"mb-8\">\r\n+                <h2 className=\"text-xl font-semibold mb-4\">Vista Semanal</h2>\r\n+                {Array.from({ length: 4 }, (_, semana) => (\r\n+                    <div key={semana} className=\"mb-4\">\r\n+                        <h3 className=\"text-lg font-bold\">Semana {semana + 1}</h3>\r\n+                        <p>Días {semana * 7 + 1} al {(semana + 1) * 7}</p>\r\n+                    </div>\r\n+                ))}\r\n+            </div>\r\n+\r\n+            {/* Botones para Iniciar Plan y Eliminar Plan */}\r\n+            <div className=\"mt-8 flex gap-4\">\r\n+                <button\r\n+                    onClick={onStartFirstDay}\r\n+                    className=\"px-6 py-3 bg-yellow-500 text-white rounded-lg font-bold hover:bg-yellow-600\"\r\n+                >\r\n+                    Iniciar Día 1\r\n+                </button>\r\n+                <button\r\n+                    onClick={onDeletePlan}\r\n+                    className=\"px-6 py-3 bg-red-500 text-white rounded-lg font-bold hover:bg-red-600\"\r\n+                >\r\n+                    Eliminar Plan\r\n+                </button>\r\n+            </div>\r\n+        </div>\r\n+    );\r\n+};\r\n+\r\n+export default NutritionPlan;\r\n"
                },
                {
                    "date": 1730736073628,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,76 @@\n+// frontend/components/NutritionPlan.js\r\n+\r\n+import React from 'react';\r\n+\r\n+const NutritionPlan = ({ plan, onStartFirstDay, onDeletePlan }) => {\r\n+    if (!plan || !plan.dias) {\r\n+        return (\r\n+            <div className=\"p-8 max-w-4xl mx-auto\">\r\n+                <h1 className=\"text-3xl font-bold mb-4\">No se ha encontrado un plan válido.</h1>\r\n+                <button\r\n+                    onClick={onDeletePlan}\r\n+                    className=\"px-6 py-3 bg-red-500 text-white rounded-lg font-bold hover:bg-red-600\"\r\n+                >\r\n+                    Eliminar Plan y Crear Nuevo\r\n+                </button>\r\n+            </div>\r\n+        );\r\n+    }\r\n+\r\n+    // Resumen del plan\r\n+    const totalDias = plan.dias.length;\r\n+    const totalEjercicios = plan.dias.reduce((acc, dia) => acc + dia.ejercicios.length, 0);\r\n+    const totalRecetas = plan.dias.reduce((acc, dia) => acc + dia.recetas.length, 0);\r\n+\r\n+    return (\r\n+        <div className=\"p-8 max-w-4xl mx-auto\">\r\n+            <h1 className=\"text-3xl font-bold mb-4\">Tu Plan Personalizado de 30 Días</h1>\r\n+            <p className=\"text-gray-600 mb-8\">\r\n+                Basado en tu evaluación, hemos creado un plan personalizado de 30 días para ayudarte a alcanzar tus objetivos.\r\n+            </p>\r\n+\r\n+            {/* Resumen del Plan */}\r\n+            <div className=\"mb-8\">\r\n+                <h2 className=\"text-xl font-semibold mb-4\">Resumen del Plan</h2>\r\n+                <p><strong>Días Totales:</strong> {totalDias}</p>\r\n+                <p><strong>Total de Ejercicios:</strong> {totalEjercicios}</p>\r\n+                <p><strong>Total de Recetas:</strong> {totalRecetas}</p>\r\n+            </div>\r\n+\r\n+            {/* Vista Semanal */}\r\n+            <div className=\"mb-8\">\r\n+                <h2 className=\"text-xl font-semibold mb-4\">Vista Semanal</h2>\r\n+                {Array.from({ length: 4 }, (_, semana) => (\r\n+                    <div key={semana} className=\"mb-4\">\r\n+                        <h3 className=\"text-lg font-bold\">Semana {semana + 1}</h3>\r\n+                        <ul className=\"list-disc pl-5\">\r\n+                            {plan.dias.slice(semana * 7, (semana + 1) * 7).map((dia) => (\r\n+                                <li key={dia.dia}>\r\n+                                    Día {dia.dia}: {dia.ejercicios.length} ejercicios, {dia.recetas.length} recetas\r\n+                                </li>\r\n+                            ))}\r\n+                        </ul>\r\n+                    </div>\r\n+                ))}\r\n+            </div>\r\n+\r\n+            {/* Botones para Iniciar Plan y Eliminar Plan */}\r\n+            <div className=\"mt-8 flex gap-4\">\r\n+                <button\r\n+                    onClick={onStartFirstDay}\r\n+                    className=\"px-6 py-3 bg-yellow-500 text-white rounded-lg font-bold hover:bg-yellow-600\"\r\n+                >\r\n+                    Iniciar Día 1\r\n+                </button>\r\n+                <button\r\n+                    onClick={onDeletePlan}\r\n+                    className=\"px-6 py-3 bg-red-500 text-white rounded-lg font-bold hover:bg-red-600\"\r\n+                >\r\n+                    Eliminar Plan\r\n+                </button>\r\n+            </div>\r\n+        </div>\r\n+    );\r\n+};\r\n+\r\n+export default NutritionPlan;\r\n"
                },
                {
                    "date": 1730752960492,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,142 +73,4 @@\n     );\r\n };\r\n \r\n export default NutritionPlan;\r\n-// frontend/components/NutritionPlan.js\r\n-import React from 'react';\r\n-\r\n-const NutritionPlan = ({ plan, onStartFirstDay, onDeletePlan }) => {\r\n-    if (!plan || !plan.dias) {\r\n-        return (\r\n-            <div className=\"p-8 max-w-4xl mx-auto\">\r\n-                <h1 className=\"text-3xl font-bold mb-4\">No se ha encontrado un plan válido.</h1>\r\n-                <button\r\n-                    onClick={onDeletePlan}\r\n-                    className=\"px-6 py-3 bg-red-500 text-white rounded-lg font-bold hover:bg-red-600\"\r\n-                >\r\n-                    Eliminar Plan y Crear Nuevo\r\n-                </button>\r\n-            </div>\r\n-        );\r\n-    }\r\n-\r\n-    // Resumen del plan\r\n-    const totalDias = plan.dias.length;\r\n-    const totalEjercicios = plan.dias.reduce((acc, dia) => acc + dia.ejercicios.length, 0);\r\n-    const totalRecetas = plan.dias.reduce((acc, dia) => acc + dia.recetas.length, 0);\r\n-\r\n-    return (\r\n-        <div className=\"p-8 max-w-4xl mx-auto\">\r\n-            <h1 className=\"text-3xl font-bold mb-4\">Tu Plan Personalizado de 30 Días</h1>\r\n-            <p className=\"text-gray-600 mb-8\">\r\n-                Basado en tu evaluación, hemos creado un plan personalizado de 30 días para ayudarte a alcanzar tus objetivos.\r\n-            </p>\r\n-\r\n-            {/* Resumen del Plan */}\r\n-            <div className=\"mb-8\">\r\n-                <h2 className=\"text-xl font-semibold mb-4\">Resumen del Plan</h2>\r\n-                <p><strong>Días Totales:</strong> {totalDias}</p>\r\n-                <p><strong>Total de Ejercicios:</strong> {totalEjercicios}</p>\r\n-                <p><strong>Total de Recetas:</strong> {totalRecetas}</p>\r\n-            </div>\r\n-\r\n-            {/* Vista Semanal (Opcional) */}\r\n-            <div className=\"mb-8\">\r\n-                <h2 className=\"text-xl font-semibold mb-4\">Vista Semanal</h2>\r\n-                {Array.from({ length: 4 }, (_, semana) => (\r\n-                    <div key={semana} className=\"mb-4\">\r\n-                        <h3 className=\"text-lg font-bold\">Semana {semana + 1}</h3>\r\n-                        <p>Días {semana * 7 + 1} al {(semana + 1) * 7}</p>\r\n-                    </div>\r\n-                ))}\r\n-            </div>\r\n-\r\n-            {/* Botones para Iniciar Plan y Eliminar Plan */}\r\n-            <div className=\"mt-8 flex gap-4\">\r\n-                <button\r\n-                    onClick={onStartFirstDay}\r\n-                    className=\"px-6 py-3 bg-yellow-500 text-white rounded-lg font-bold hover:bg-yellow-600\"\r\n-                >\r\n-                    Iniciar Día 1\r\n-                </button>\r\n-                <button\r\n-                    onClick={onDeletePlan}\r\n-                    className=\"px-6 py-3 bg-red-500 text-white rounded-lg font-bold hover:bg-red-600\"\r\n-                >\r\n-                    Eliminar Plan\r\n-                </button>\r\n-            </div>\r\n-        </div>\r\n-    );\r\n-};\r\n-\r\n-export default NutritionPlan;\r\n-// frontend/components/NutritionPlan.js\r\n-import React from 'react';\r\n-\r\n-const NutritionPlan = ({ plan, onStartFirstDay, onDeletePlan }) => {\r\n-    if (!plan || !plan.dias) {\r\n-        return (\r\n-            <div className=\"p-8 max-w-4xl mx-auto\">\r\n-                <h1 className=\"text-3xl font-bold mb-4\">No se ha encontrado un plan válido.</h1>\r\n-                <button\r\n-                    onClick={onDeletePlan}\r\n-                    className=\"px-6 py-3 bg-red-500 text-white rounded-lg font-bold hover:bg-red-600\"\r\n-                >\r\n-                    Eliminar Plan y Crear Nuevo\r\n-                </button>\r\n-            </div>\r\n-        );\r\n-    }\r\n-\r\n-    // Resumen del plan\r\n-    const totalDias = plan.dias.length;\r\n-    const totalEjercicios = plan.dias.reduce((acc, dia) => acc + dia.ejercicios.length, 0);\r\n-    const totalRecetas = plan.dias.reduce((acc, dia) => acc + dia.recetas.length, 0);\r\n-\r\n-    return (\r\n-        <div className=\"p-8 max-w-4xl mx-auto\">\r\n-            <h1 className=\"text-3xl font-bold mb-4\">Tu Plan Personalizado de 30 Días</h1>\r\n-            <p className=\"text-gray-600 mb-8\">\r\n-                Basado en tu evaluación, hemos creado un plan personalizado de 30 días para ayudarte a alcanzar tus objetivos.\r\n-            </p>\r\n-\r\n-            {/* Resumen del Plan */}\r\n-            <div className=\"mb-8\">\r\n-                <h2 className=\"text-xl font-semibold mb-4\">Resumen del Plan</h2>\r\n-                <p><strong>Días Totales:</strong> {totalDias}</p>\r\n-                <p><strong>Total de Ejercicios:</strong> {totalEjercicios}</p>\r\n-                <p><strong>Total de Recetas:</strong> {totalRecetas}</p>\r\n-            </div>\r\n-\r\n-            {/* Vista Semanal (Opcional) */}\r\n-            <div className=\"mb-8\">\r\n-                <h2 className=\"text-xl font-semibold mb-4\">Vista Semanal</h2>\r\n-                {Array.from({ length: 4 }, (_, semana) => (\r\n-                    <div key={semana} className=\"mb-4\">\r\n-                        <h3 className=\"text-lg font-bold\">Semana {semana + 1}</h3>\r\n-                        <p>Días {semana * 7 + 1} al {(semana + 1) * 7}</p>\r\n-                    </div>\r\n-                ))}\r\n-            </div>\r\n-\r\n-            {/* Botones para Iniciar Plan y Eliminar Plan */}\r\n-            <div className=\"mt-8 flex gap-4\">\r\n-                <button\r\n-                    onClick={onStartFirstDay}\r\n-                    className=\"px-6 py-3 bg-yellow-500 text-white rounded-lg font-bold hover:bg-yellow-600\"\r\n-                >\r\n-                    Iniciar Día 1\r\n-                </button>\r\n-                <button\r\n-                    onClick={onDeletePlan}\r\n-                    className=\"px-6 py-3 bg-red-500 text-white rounded-lg font-bold hover:bg-red-600\"\r\n-                >\r\n-                    Eliminar Plan\r\n-                </button>\r\n-            </div>\r\n-        </div>\r\n-    );\r\n-};\r\n-\r\n-export default NutritionPlan;\r\n"
                },
                {
                    "date": 1730754235101,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,62 @@\n+// frontend/components/NutritionPlan.js\r\n+\r\n+import React from 'react';\r\n+\r\n+const NutritionPlan = ({ plan, onStartDay, onDeletePlan }) => {\r\n+    if (!plan || !plan.dias) {\r\n+        return (\r\n+            <div className=\"p-8 max-w-4xl mx-auto\">\r\n+                <h1 className=\"text-3xl font-bold mb-4\">No se ha encontrado un plan válido.</h1>\r\n+                <button\r\n+                    onClick={onDeletePlan}\r\n+                    className=\"px-6 py-3 bg-red-500 text-white rounded-lg font-bold hover:bg-red-600\"\r\n+                >\r\n+                    Eliminar Plan y Crear Nuevo\r\n+                </button>\r\n+            </div>\r\n+        );\r\n+    }\r\n+\r\n+    const totalDias = plan.dias.length;\r\n+\r\n+    return (\r\n+        <div className=\"p-8 max-w-4xl mx-auto\">\r\n+            <h1 className=\"text-2xl font-semibold mb-6\">Plan de 30 Días</h1>\r\n+\r\n+            {/* Semanas */}\r\n+            {Array.from({ length: 4 }, (_, semana) => (\r\n+                <div key={semana} className=\"mb-6\">\r\n+                    <h2 className=\"text-lg font-bold mb-4\">Semana {semana + 1}</h2>\r\n+                    <div className=\"grid grid-cols-1 gap-3\">\r\n+                        {plan.dias.slice(semana * 7, (semana + 1) * 7).map((dia, index) => (\r\n+                            <button\r\n+                                key={dia.dia}\r\n+                                onClick={() => onStartDay(dia.dia)}\r\n+                                className={`flex justify-between items-center px-4 py-3 rounded-lg font-semibold transition-colors ${\r\n+                                    index === 0 ? 'bg-pink-200 text-white' : 'bg-gray-200 text-gray-600'\r\n+                                } hover:bg-pink-300`}\r\n+                            >\r\n+                                <span>{dia.dia} °Día</span>\r\n+                                <span className={`text-sm font-medium ${index === 0 ? 'bg-pink-400' : 'bg-gray-400'} px-3 py-1 rounded-full`}>\r\n+                                    {index === 0 ? 'Comienzo' : '0%'}\r\n+                                </span>\r\n+                            </button>\r\n+                        ))}\r\n+                    </div>\r\n+                </div>\r\n+            ))}\r\n+\r\n+            {/* Botón para eliminar plan */}\r\n+            <div className=\"mt-8 flex justify-center\">\r\n+                <button\r\n+                    onClick={onDeletePlan}\r\n+                    className=\"px-6 py-3 bg-red-500 text-white rounded-lg font-bold hover:bg-red-600\"\r\n+                >\r\n+                    Eliminar Plan\r\n+                </button>\r\n+            </div>\r\n+        </div>\r\n+    );\r\n+};\r\n+\r\n+export default NutritionPlan;\r\n"
                },
                {
                    "date": 1730754664984,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,60 @@\n+// frontend/components/NutritionPlan.js\r\n+\r\n+import React from 'react';\r\n+\r\n+const NutritionPlan = ({ plan, onStartDay, onDeletePlan }) => {\r\n+    if (!plan || !plan.dias) {\r\n+        return (\r\n+            <div className=\"p-8 max-w-4xl mx-auto\">\r\n+                <h1 className=\"text-3xl font-bold mb-4\">No se ha encontrado un plan válido.</h1>\r\n+                <button\r\n+                    onClick={onDeletePlan}\r\n+                    className=\"px-6 py-3 bg-red-500 text-white rounded-lg font-bold hover:bg-red-600\"\r\n+                >\r\n+                    Eliminar Plan y Crear Nuevo\r\n+                </button>\r\n+            </div>\r\n+        );\r\n+    }\r\n+\r\n+    return (\r\n+        <div className=\"p-8 max-w-4xl mx-auto\">\r\n+            <h1 className=\"text-2xl font-semibold mb-6\">Plan de 30 Días</h1>\r\n+\r\n+            {/* Semanas */}\r\n+            {Array.from({ length: 4 }, (_, semana) => (\r\n+                <div key={semana} className=\"mb-6\">\r\n+                    <h2 className=\"text-lg font-bold mb-4\">Semana {semana + 1}</h2>\r\n+                    <div className=\"grid grid-cols-1 gap-3\">\r\n+                        {plan.dias.slice(semana * 7, (semana + 1) * 7).map((dia) => (\r\n+                            <button\r\n+                                key={dia.dia}\r\n+                                onClick={() => onStartDay(dia.dia)}  // Usa la función onStartDay aquí\r\n+                                className={`flex justify-between items-center px-4 py-3 rounded-lg font-semibold transition-colors ${\r\n+                                    dia.dia === 1 ? 'bg-yellow-200 text-white' : 'bg-yellow-200 text-gray-600'\r\n+                                } hover:bg-pink-300`}\r\n+                            >\r\n+                                <span>{dia.dia} °Día</span>\r\n+                                <span className={`text-sm font-medium ${dia.dia === 1 ? 'bg-pink-400' : 'bg-gray-400'} px-3 py-1 rounded-full`}>\r\n+                                    {dia.dia === 1 ? 'Comienzo' : '0%'}\r\n+                                </span>\r\n+                            </button>\r\n+                        ))}\r\n+                    </div>\r\n+                </div>\r\n+            ))}\r\n+\r\n+            {/* Botón para eliminar plan */}\r\n+            <div className=\"mt-8 flex justify-center\">\r\n+                <button\r\n+                    onClick={onDeletePlan}\r\n+                    className=\"px-6 py-3 bg-red-500 text-white rounded-lg font-bold hover:bg-red-600\"\r\n+                >\r\n+                    Eliminar Plan\r\n+                </button>\r\n+            </div>\r\n+        </div>\r\n+    );\r\n+};\r\n+\r\n+export default NutritionPlan;\r\n"
                },
                {
                    "date": 1730754749055,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,60 @@\n+// frontend/components/NutritionPlan.js\r\n+\r\n+import React from 'react';\r\n+\r\n+const NutritionPlan = ({ plan, onStartDay, onDeletePlan }) => {\r\n+    if (!plan || !plan.dias) {\r\n+        return (\r\n+            <div className=\"p-8 max-w-4xl mx-auto\">\r\n+                <h1 className=\"text-3xl font-bold mb-4\">No se ha encontrado un plan válido.</h1>\r\n+                <button\r\n+                    onClick={onDeletePlan}\r\n+                    className=\"px-6 py-3 bg-red-500 text-white rounded-lg font-bold hover:bg-red-600\"\r\n+                >\r\n+                    Eliminar Plan y Crear Nuevo\r\n+                </button>\r\n+            </div>\r\n+        );\r\n+    }\r\n+\r\n+    return (\r\n+        <div className=\"p-8 max-w-4xl mx-auto\">\r\n+            <h1 className=\"text-2xl font-semibold mb-6\">Plan de 30 Días</h1>\r\n+\r\n+            {/* Semanas */}\r\n+            {Array.from({ length: 4 }, (_, semana) => (\r\n+                <div key={semana} className=\"mb-6\">\r\n+                    <h2 className=\"text-lg font-bold mb-4\">Semana {semana + 1}</h2>\r\n+                    <div className=\"grid grid-cols-1 gap-3\">\r\n+                        {plan.dias.slice(semana * 7, (semana + 1) * 7).map((dia) => (\r\n+                            <button\r\n+                                key={dia.dia}\r\n+                                onClick={() => onStartDay(dia.dia)}  // Usa la función onStartDay aquí\r\n+                                className={`flex justify-between items-center px-4 py-3 rounded-lg font-semibold transition-colors ${\r\n+                                    dia.dia === 1 ? 'bg-yellow-600 text-white' : 'bg-gray-200 text-gray-600'\r\n+                                } hover:bg-pink-300`}\r\n+                            >\r\n+                                <span>{dia.dia} °Día</span>\r\n+                                <span className={`text-sm font-medium ${dia.dia === 1 ? 'bg-pink-400' : 'bg-gray-400'} px-3 py-1 rounded-full`}>\r\n+                                    {dia.dia === 1 ? 'Comienzo' : '0%'}\r\n+                                </span>\r\n+                            </button>\r\n+                        ))}\r\n+                    </div>\r\n+                </div>\r\n+            ))}\r\n+\r\n+            {/* Botón para eliminar plan */}\r\n+            <div className=\"mt-8 flex justify-center\">\r\n+                <button\r\n+                    onClick={onDeletePlan}\r\n+                    className=\"px-6 py-3 bg-red-500 text-white rounded-lg font-bold hover:bg-red-600\"\r\n+                >\r\n+                    Eliminar Plan\r\n+                </button>\r\n+            </div>\r\n+        </div>\r\n+    );\r\n+};\r\n+\r\n+export default NutritionPlan;\r\n"
                },
                {
                    "date": 1730754768005,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,9 @@\n                                     dia.dia === 1 ? 'bg-yellow-600 text-white' : 'bg-gray-200 text-gray-600'\r\n                                 } hover:bg-pink-300`}\r\n                             >\r\n                                 <span>{dia.dia} °Día</span>\r\n-                                <span className={`text-sm font-medium ${dia.dia === 1 ? 'bg-pink-400' : 'bg-gray-400'} px-3 py-1 rounded-full`}>\r\n+                                <span className={`text-sm font-medium ${dia.dia === 1 ? 'bg-yellow-400' : 'bg-gray-400'} px-3 py-1 rounded-full`}>\r\n                                     {dia.dia === 1 ? 'Comienzo' : '0%'}\r\n                                 </span>\r\n                             </button>\r\n                         ))}\r\n@@ -57,202 +57,4 @@\n     );\r\n };\r\n \r\n export default NutritionPlan;\r\n-// frontend/components/NutritionPlan.js\r\n-\r\n-import React from 'react';\r\n-\r\n-const NutritionPlan = ({ plan, onStartDay, onDeletePlan }) => {\r\n-    if (!plan || !plan.dias) {\r\n-        return (\r\n-            <div className=\"p-8 max-w-4xl mx-auto\">\r\n-                <h1 className=\"text-3xl font-bold mb-4\">No se ha encontrado un plan válido.</h1>\r\n-                <button\r\n-                    onClick={onDeletePlan}\r\n-                    className=\"px-6 py-3 bg-red-500 text-white rounded-lg font-bold hover:bg-red-600\"\r\n-                >\r\n-                    Eliminar Plan y Crear Nuevo\r\n-                </button>\r\n-            </div>\r\n-        );\r\n-    }\r\n-\r\n-    return (\r\n-        <div className=\"p-8 max-w-4xl mx-auto\">\r\n-            <h1 className=\"text-2xl font-semibold mb-6\">Plan de 30 Días</h1>\r\n-\r\n-            {/* Semanas */}\r\n-            {Array.from({ length: 4 }, (_, semana) => (\r\n-                <div key={semana} className=\"mb-6\">\r\n-                    <h2 className=\"text-lg font-bold mb-4\">Semana {semana + 1}</h2>\r\n-                    <div className=\"grid grid-cols-1 gap-3\">\r\n-                        {plan.dias.slice(semana * 7, (semana + 1) * 7).map((dia) => (\r\n-                            <button\r\n-                                key={dia.dia}\r\n-                                onClick={() => onStartDay(dia.dia)}  // Usa la función onStartDay aquí\r\n-                                className={`flex justify-between items-center px-4 py-3 rounded-lg font-semibold transition-colors ${\r\n-                                    dia.dia === 1 ? 'bg-yellow-200 text-white' : 'bg-yellow-200 text-gray-600'\r\n-                                } hover:bg-pink-300`}\r\n-                            >\r\n-                                <span>{dia.dia} °Día</span>\r\n-                                <span className={`text-sm font-medium ${dia.dia === 1 ? 'bg-pink-400' : 'bg-gray-400'} px-3 py-1 rounded-full`}>\r\n-                                    {dia.dia === 1 ? 'Comienzo' : '0%'}\r\n-                                </span>\r\n-                            </button>\r\n-                        ))}\r\n-                    </div>\r\n-                </div>\r\n-            ))}\r\n-\r\n-            {/* Botón para eliminar plan */}\r\n-            <div className=\"mt-8 flex justify-center\">\r\n-                <button\r\n-                    onClick={onDeletePlan}\r\n-                    className=\"px-6 py-3 bg-red-500 text-white rounded-lg font-bold hover:bg-red-600\"\r\n-                >\r\n-                    Eliminar Plan\r\n-                </button>\r\n-            </div>\r\n-        </div>\r\n-    );\r\n-};\r\n-\r\n-export default NutritionPlan;\r\n-// frontend/components/NutritionPlan.js\r\n-\r\n-import React from 'react';\r\n-\r\n-const NutritionPlan = ({ plan, onStartDay, onDeletePlan }) => {\r\n-    if (!plan || !plan.dias) {\r\n-        return (\r\n-            <div className=\"p-8 max-w-4xl mx-auto\">\r\n-                <h1 className=\"text-3xl font-bold mb-4\">No se ha encontrado un plan válido.</h1>\r\n-                <button\r\n-                    onClick={onDeletePlan}\r\n-                    className=\"px-6 py-3 bg-red-500 text-white rounded-lg font-bold hover:bg-red-600\"\r\n-                >\r\n-                    Eliminar Plan y Crear Nuevo\r\n-                </button>\r\n-            </div>\r\n-        );\r\n-    }\r\n-\r\n-    const totalDias = plan.dias.length;\r\n-\r\n-    return (\r\n-        <div className=\"p-8 max-w-4xl mx-auto\">\r\n-            <h1 className=\"text-2xl font-semibold mb-6\">Plan de 30 Días</h1>\r\n-\r\n-            {/* Semanas */}\r\n-            {Array.from({ length: 4 }, (_, semana) => (\r\n-                <div key={semana} className=\"mb-6\">\r\n-                    <h2 className=\"text-lg font-bold mb-4\">Semana {semana + 1}</h2>\r\n-                    <div className=\"grid grid-cols-1 gap-3\">\r\n-                        {plan.dias.slice(semana * 7, (semana + 1) * 7).map((dia, index) => (\r\n-                            <button\r\n-                                key={dia.dia}\r\n-                                onClick={() => onStartDay(dia.dia)}\r\n-                                className={`flex justify-between items-center px-4 py-3 rounded-lg font-semibold transition-colors ${\r\n-                                    index === 0 ? 'bg-pink-200 text-white' : 'bg-gray-200 text-gray-600'\r\n-                                } hover:bg-pink-300`}\r\n-                            >\r\n-                                <span>{dia.dia} °Día</span>\r\n-                                <span className={`text-sm font-medium ${index === 0 ? 'bg-pink-400' : 'bg-gray-400'} px-3 py-1 rounded-full`}>\r\n-                                    {index === 0 ? 'Comienzo' : '0%'}\r\n-                                </span>\r\n-                            </button>\r\n-                        ))}\r\n-                    </div>\r\n-                </div>\r\n-            ))}\r\n-\r\n-            {/* Botón para eliminar plan */}\r\n-            <div className=\"mt-8 flex justify-center\">\r\n-                <button\r\n-                    onClick={onDeletePlan}\r\n-                    className=\"px-6 py-3 bg-red-500 text-white rounded-lg font-bold hover:bg-red-600\"\r\n-                >\r\n-                    Eliminar Plan\r\n-                </button>\r\n-            </div>\r\n-        </div>\r\n-    );\r\n-};\r\n-\r\n-export default NutritionPlan;\r\n-// frontend/components/NutritionPlan.js\r\n-\r\n-import React from 'react';\r\n-\r\n-const NutritionPlan = ({ plan, onStartFirstDay, onDeletePlan }) => {\r\n-    if (!plan || !plan.dias) {\r\n-        return (\r\n-            <div className=\"p-8 max-w-4xl mx-auto\">\r\n-                <h1 className=\"text-3xl font-bold mb-4\">No se ha encontrado un plan válido.</h1>\r\n-                <button\r\n-                    onClick={onDeletePlan}\r\n-                    className=\"px-6 py-3 bg-red-500 text-white rounded-lg font-bold hover:bg-red-600\"\r\n-                >\r\n-                    Eliminar Plan y Crear Nuevo\r\n-                </button>\r\n-            </div>\r\n-        );\r\n-    }\r\n-\r\n-    // Resumen del plan\r\n-    const totalDias = plan.dias.length;\r\n-    const totalEjercicios = plan.dias.reduce((acc, dia) => acc + dia.ejercicios.length, 0);\r\n-    const totalRecetas = plan.dias.reduce((acc, dia) => acc + dia.recetas.length, 0);\r\n-\r\n-    return (\r\n-        <div className=\"p-8 max-w-4xl mx-auto\">\r\n-            <h1 className=\"text-3xl font-bold mb-4\">Tu Plan Personalizado de 30 Días</h1>\r\n-            <p className=\"text-gray-600 mb-8\">\r\n-                Basado en tu evaluación, hemos creado un plan personalizado de 30 días para ayudarte a alcanzar tus objetivos.\r\n-            </p>\r\n-\r\n-            {/* Resumen del Plan */}\r\n-            <div className=\"mb-8\">\r\n-                <h2 className=\"text-xl font-semibold mb-4\">Resumen del Plan</h2>\r\n-                <p><strong>Días Totales:</strong> {totalDias}</p>\r\n-                <p><strong>Total de Ejercicios:</strong> {totalEjercicios}</p>\r\n-                <p><strong>Total de Recetas:</strong> {totalRecetas}</p>\r\n-            </div>\r\n-\r\n-            {/* Vista Semanal */}\r\n-            <div className=\"mb-8\">\r\n-                <h2 className=\"text-xl font-semibold mb-4\">Vista Semanal</h2>\r\n-                {Array.from({ length: 4 }, (_, semana) => (\r\n-                    <div key={semana} className=\"mb-4\">\r\n-                        <h3 className=\"text-lg font-bold\">Semana {semana + 1}</h3>\r\n-                        <ul className=\"list-disc pl-5\">\r\n-                            {plan.dias.slice(semana * 7, (semana + 1) * 7).map((dia) => (\r\n-                                <li key={dia.dia}>\r\n-                                    Día {dia.dia}: {dia.ejercicios.length} ejercicios, {dia.recetas.length} recetas\r\n-                                </li>\r\n-                            ))}\r\n-                        </ul>\r\n-                    </div>\r\n-                ))}\r\n-            </div>\r\n-\r\n-            {/* Botones para Iniciar Plan y Eliminar Plan */}\r\n-            <div className=\"mt-8 flex gap-4\">\r\n-                <button\r\n-                    onClick={onStartFirstDay}\r\n-                    className=\"px-6 py-3 bg-yellow-500 text-white rounded-lg font-bold hover:bg-yellow-600\"\r\n-                >\r\n-                    Iniciar Día 1\r\n-                </button>\r\n-                <button\r\n-                    onClick={onDeletePlan}\r\n-                    className=\"px-6 py-3 bg-red-500 text-white rounded-lg font-bold hover:bg-red-600\"\r\n-                >\r\n-                    Eliminar Plan\r\n-                </button>\r\n-            </div>\r\n-        </div>\r\n-    );\r\n-};\r\n-\r\n-export default NutritionPlan;\r\n"
                },
                {
                    "date": 1730754780004,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,60 @@\n+// frontend/components/NutritionPlan.js\r\n+\r\n+import React from 'react';\r\n+\r\n+const NutritionPlan = ({ plan, onStartDay, onDeletePlan }) => {\r\n+    if (!plan || !plan.dias) {\r\n+        return (\r\n+            <div className=\"p-8 max-w-4xl mx-auto\">\r\n+                <h1 className=\"text-3xl font-bold mb-4\">No se ha encontrado un plan válido.</h1>\r\n+                <button\r\n+                    onClick={onDeletePlan}\r\n+                    className=\"px-6 py-3 bg-red-500 text-white rounded-lg font-bold hover:bg-red-600\"\r\n+                >\r\n+                    Eliminar Plan y Crear Nuevo\r\n+                </button>\r\n+            </div>\r\n+        );\r\n+    }\r\n+\r\n+    return (\r\n+        <div className=\"p-8 max-w-4xl mx-auto\">\r\n+            <h1 className=\"text-2xl font-semibold mb-6\">Plan de 30 Días</h1>\r\n+\r\n+            {/* Semanas */}\r\n+            {Array.from({ length: 4 }, (_, semana) => (\r\n+                <div key={semana} className=\"mb-6\">\r\n+                    <h2 className=\"text-lg font-bold mb-4\">Semana {semana + 1}</h2>\r\n+                    <div className=\"grid grid-cols-1 gap-3\">\r\n+                        {plan.dias.slice(semana * 7, (semana + 1) * 7).map((dia) => (\r\n+                            <button\r\n+                                key={dia.dia}\r\n+                                onClick={() => onStartDay(dia.dia)}  // Usa la función onStartDay aquí\r\n+                                className={`flex justify-between items-center px-4 py-3 rounded-lg font-semibold transition-colors ${\r\n+                                    dia.dia === 1 ? 'bg-yellow-200 text-white' : 'bg-gray-200 text-gray-600'\r\n+                                } hover:bg-pink-300`}\r\n+                            >\r\n+                                <span>{dia.dia} °Día</span>\r\n+                                <span className={`text-sm font-medium ${dia.dia === 1 ? 'bg-yellow-400' : 'bg-gray-400'} px-3 py-1 rounded-full`}>\r\n+                                    {dia.dia === 1 ? 'Comienzo' : '0%'}\r\n+                                </span>\r\n+                            </button>\r\n+                        ))}\r\n+                    </div>\r\n+                </div>\r\n+            ))}\r\n+\r\n+            {/* Botón para eliminar plan */}\r\n+            <div className=\"mt-8 flex justify-center\">\r\n+                <button\r\n+                    onClick={onDeletePlan}\r\n+                    className=\"px-6 py-3 bg-red-500 text-white rounded-lg font-bold hover:bg-red-600\"\r\n+                >\r\n+                    Eliminar Plan\r\n+                </button>\r\n+            </div>\r\n+        </div>\r\n+    );\r\n+};\r\n+\r\n+export default NutritionPlan;\r\n"
                },
                {
                    "date": 1730754785768,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,60 @@\n+// frontend/components/NutritionPlan.js\r\n+\r\n+import React from 'react';\r\n+\r\n+const NutritionPlan = ({ plan, onStartDay, onDeletePlan }) => {\r\n+    if (!plan || !plan.dias) {\r\n+        return (\r\n+            <div className=\"p-8 max-w-4xl mx-auto\">\r\n+                <h1 className=\"text-3xl font-bold mb-4\">No se ha encontrado un plan válido.</h1>\r\n+                <button\r\n+                    onClick={onDeletePlan}\r\n+                    className=\"px-6 py-3 bg-red-500 text-white rounded-lg font-bold hover:bg-red-600\"\r\n+                >\r\n+                    Eliminar Plan y Crear Nuevo\r\n+                </button>\r\n+            </div>\r\n+        );\r\n+    }\r\n+\r\n+    return (\r\n+        <div className=\"p-8 max-w-4xl mx-auto\">\r\n+            <h1 className=\"text-2xl font-semibold mb-6\">Plan de 30 Días</h1>\r\n+\r\n+            {/* Semanas */}\r\n+            {Array.from({ length: 4 }, (_, semana) => (\r\n+                <div key={semana} className=\"mb-6\">\r\n+                    <h2 className=\"text-lg font-bold mb-4\">Semana {semana + 1}</h2>\r\n+                    <div className=\"grid grid-cols-1 gap-3\">\r\n+                        {plan.dias.slice(semana * 7, (semana + 1) * 7).map((dia) => (\r\n+                            <button\r\n+                                key={dia.dia}\r\n+                                onClick={() => onStartDay(dia.dia)}  // Usa la función onStartDay aquí\r\n+                                className={`flex justify-between items-center px-4 py-3 rounded-lg font-semibold transition-colors ${\r\n+                                    dia.dia === 1 ? 'bg-yellow-400 text-white' : 'bg-gray-200 text-gray-600'\r\n+                                } hover:bg-pink-300`}\r\n+                            >\r\n+                                <span>{dia.dia} °Día</span>\r\n+                                <span className={`text-sm font-medium ${dia.dia === 1 ? 'bg-yellow-400' : 'bg-gray-400'} px-3 py-1 rounded-full`}>\r\n+                                    {dia.dia === 1 ? 'Comienzo' : '0%'}\r\n+                                </span>\r\n+                            </button>\r\n+                        ))}\r\n+                    </div>\r\n+                </div>\r\n+            ))}\r\n+\r\n+            {/* Botón para eliminar plan */}\r\n+            <div className=\"mt-8 flex justify-center\">\r\n+                <button\r\n+                    onClick={onDeletePlan}\r\n+                    className=\"px-6 py-3 bg-red-500 text-white rounded-lg font-bold hover:bg-red-600\"\r\n+                >\r\n+                    Eliminar Plan\r\n+                </button>\r\n+            </div>\r\n+        </div>\r\n+    );\r\n+};\r\n+\r\n+export default NutritionPlan;\r\n"
                },
                {
                    "date": 1730754791207,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,60 @@\n+// frontend/components/NutritionPlan.js\r\n+\r\n+import React from 'react';\r\n+\r\n+const NutritionPlan = ({ plan, onStartDay, onDeletePlan }) => {\r\n+    if (!plan || !plan.dias) {\r\n+        return (\r\n+            <div className=\"p-8 max-w-4xl mx-auto\">\r\n+                <h1 className=\"text-3xl font-bold mb-4\">No se ha encontrado un plan válido.</h1>\r\n+                <button\r\n+                    onClick={onDeletePlan}\r\n+                    className=\"px-6 py-3 bg-red-500 text-white rounded-lg font-bold hover:bg-red-600\"\r\n+                >\r\n+                    Eliminar Plan y Crear Nuevo\r\n+                </button>\r\n+            </div>\r\n+        );\r\n+    }\r\n+\r\n+    return (\r\n+        <div className=\"p-8 max-w-4xl mx-auto\">\r\n+            <h1 className=\"text-2xl font-semibold mb-6\">Plan de 30 Días</h1>\r\n+\r\n+            {/* Semanas */}\r\n+            {Array.from({ length: 4 }, (_, semana) => (\r\n+                <div key={semana} className=\"mb-6\">\r\n+                    <h2 className=\"text-lg font-bold mb-4\">Semana {semana + 1}</h2>\r\n+                    <div className=\"grid grid-cols-1 gap-3\">\r\n+                        {plan.dias.slice(semana * 7, (semana + 1) * 7).map((dia) => (\r\n+                            <button\r\n+                                key={dia.dia}\r\n+                                onClick={() => onStartDay(dia.dia)}  // Usa la función onStartDay aquí\r\n+                                className={`flex justify-between items-center px-4 py-3 rounded-lg font-semibold transition-colors ${\r\n+                                    dia.dia === 1 ? 'bg-yellow-400 text-white' : 'bg-gray-200 text-gray-600'\r\n+                                } hover:bg-pink-300`}\r\n+                            >\r\n+                                <span>{dia.dia} °Día</span>\r\n+                                <span className={`text-sm font-medium ${dia.dia === 1 ? 'bg-yellow-100' : 'bg-gray-400'} px-3 py-1 rounded-full`}>\r\n+                                    {dia.dia === 1 ? 'Comienzo' : '0%'}\r\n+                                </span>\r\n+                            </button>\r\n+                        ))}\r\n+                    </div>\r\n+                </div>\r\n+            ))}\r\n+\r\n+            {/* Botón para eliminar plan */}\r\n+            <div className=\"mt-8 flex justify-center\">\r\n+                <button\r\n+                    onClick={onDeletePlan}\r\n+                    className=\"px-6 py-3 bg-red-500 text-white rounded-lg font-bold hover:bg-red-600\"\r\n+                >\r\n+                    Eliminar Plan\r\n+                </button>\r\n+            </div>\r\n+        </div>\r\n+    );\r\n+};\r\n+\r\n+export default NutritionPlan;\r\n"
                },
                {
                    "date": 1730754799886,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,60 @@\n+// frontend/components/NutritionPlan.js\r\n+\r\n+import React from 'react';\r\n+\r\n+const NutritionPlan = ({ plan, onStartDay, onDeletePlan }) => {\r\n+    if (!plan || !plan.dias) {\r\n+        return (\r\n+            <div className=\"p-8 max-w-4xl mx-auto\">\r\n+                <h1 className=\"text-3xl font-bold mb-4\">No se ha encontrado un plan válido.</h1>\r\n+                <button\r\n+                    onClick={onDeletePlan}\r\n+                    className=\"px-6 py-3 bg-red-500 text-white rounded-lg font-bold hover:bg-red-600\"\r\n+                >\r\n+                    Eliminar Plan y Crear Nuevo\r\n+                </button>\r\n+            </div>\r\n+        );\r\n+    }\r\n+\r\n+    return (\r\n+        <div className=\"p-8 max-w-4xl mx-auto\">\r\n+            <h1 className=\"text-2xl font-semibold mb-6\">Plan de 30 Días</h1>\r\n+\r\n+            {/* Semanas */}\r\n+            {Array.from({ length: 4 }, (_, semana) => (\r\n+                <div key={semana} className=\"mb-6\">\r\n+                    <h2 className=\"text-lg font-bold mb-4\">Semana {semana + 1}</h2>\r\n+                    <div className=\"grid grid-cols-1 gap-3\">\r\n+                        {plan.dias.slice(semana * 7, (semana + 1) * 7).map((dia) => (\r\n+                            <button\r\n+                                key={dia.dia}\r\n+                                onClick={() => onStartDay(dia.dia)}  // Usa la función onStartDay aquí\r\n+                                className={`flex justify-between items-center px-4 py-3 rounded-lg font-semibold transition-colors ${\r\n+                                    dia.dia === 1 ? 'bg-yellow-400 text-white' : 'bg-gray-200 text-gray-600'\r\n+                                } hover:bg-pink-300`}\r\n+                            >\r\n+                                <span>{dia.dia} °Día</span>\r\n+                                <span className={`text-sm font-medium ${dia.dia === 1 ? 'bg-yellow-700' : 'bg-gray-400'} px-3 py-1 rounded-full`}>\r\n+                                    {dia.dia === 1 ? 'Comienzo' : '0%'}\r\n+                                </span>\r\n+                            </button>\r\n+                        ))}\r\n+                    </div>\r\n+                </div>\r\n+            ))}\r\n+\r\n+            {/* Botón para eliminar plan */}\r\n+            <div className=\"mt-8 flex justify-center\">\r\n+                <button\r\n+                    onClick={onDeletePlan}\r\n+                    className=\"px-6 py-3 bg-red-500 text-white rounded-lg font-bold hover:bg-red-600\"\r\n+                >\r\n+                    Eliminar Plan\r\n+                </button>\r\n+            </div>\r\n+        </div>\r\n+    );\r\n+};\r\n+\r\n+export default NutritionPlan;\r\n"
                },
                {
                    "date": 1730754805181,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,60 @@\n+// frontend/components/NutritionPlan.js\r\n+\r\n+import React from 'react';\r\n+\r\n+const NutritionPlan = ({ plan, onStartDay, onDeletePlan }) => {\r\n+    if (!plan || !plan.dias) {\r\n+        return (\r\n+            <div className=\"p-8 max-w-4xl mx-auto\">\r\n+                <h1 className=\"text-3xl font-bold mb-4\">No se ha encontrado un plan válido.</h1>\r\n+                <button\r\n+                    onClick={onDeletePlan}\r\n+                    className=\"px-6 py-3 bg-red-500 text-white rounded-lg font-bold hover:bg-red-600\"\r\n+                >\r\n+                    Eliminar Plan y Crear Nuevo\r\n+                </button>\r\n+            </div>\r\n+        );\r\n+    }\r\n+\r\n+    return (\r\n+        <div className=\"p-8 max-w-4xl mx-auto\">\r\n+            <h1 className=\"text-2xl font-semibold mb-6\">Plan de 30 Días</h1>\r\n+\r\n+            {/* Semanas */}\r\n+            {Array.from({ length: 4 }, (_, semana) => (\r\n+                <div key={semana} className=\"mb-6\">\r\n+                    <h2 className=\"text-lg font-bold mb-4\">Semana {semana + 1}</h2>\r\n+                    <div className=\"grid grid-cols-1 gap-3\">\r\n+                        {plan.dias.slice(semana * 7, (semana + 1) * 7).map((dia) => (\r\n+                            <button\r\n+                                key={dia.dia}\r\n+                                onClick={() => onStartDay(dia.dia)}  // Usa la función onStartDay aquí\r\n+                                className={`flex justify-between items-center px-4 py-3 rounded-lg font-semibold transition-colors ${\r\n+                                    dia.dia === 1 ? 'bg-yellow-400 text-white' : 'bg-gray-200 text-gray-600'\r\n+                                } hover:bg-pink-300`}\r\n+                            >\r\n+                                <span>{dia.dia} °Día</span>\r\n+                                <span className={`text-sm font-medium ${dia.dia === 1 ? 'bg-yellow-500' : 'bg-gray-400'} px-3 py-1 rounded-full`}>\r\n+                                    {dia.dia === 1 ? 'Comienzo' : '0%'}\r\n+                                </span>\r\n+                            </button>\r\n+                        ))}\r\n+                    </div>\r\n+                </div>\r\n+            ))}\r\n+\r\n+            {/* Botón para eliminar plan */}\r\n+            <div className=\"mt-8 flex justify-center\">\r\n+                <button\r\n+                    onClick={onDeletePlan}\r\n+                    className=\"px-6 py-3 bg-red-500 text-white rounded-lg font-bold hover:bg-red-600\"\r\n+                >\r\n+                    Eliminar Plan\r\n+                </button>\r\n+            </div>\r\n+        </div>\r\n+    );\r\n+};\r\n+\r\n+export default NutritionPlan;\r\n"
                },
                {
                    "date": 1730754848683,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,9 +31,9 @@\n                                 key={dia.dia}\r\n                                 onClick={() => onStartDay(dia.dia)}  // Usa la función onStartDay aquí\r\n                                 className={`flex justify-between items-center px-4 py-3 rounded-lg font-semibold transition-colors ${\r\n                                     dia.dia === 1 ? 'bg-yellow-400 text-white' : 'bg-gray-200 text-gray-600'\r\n-                                } hover:bg-pink-300`}\r\n+                                } hover:bg-yellow-300`}\r\n                             >\r\n                                 <span>{dia.dia} °Día</span>\r\n                                 <span className={`text-sm font-medium ${dia.dia === 1 ? 'bg-yellow-600' : 'bg-gray-400'} px-3 py-1 rounded-full`}>\r\n                                     {dia.dia === 1 ? 'Comienzo' : '0%'}\r\n"
                },
                {
                    "date": 1730754859987,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,60 @@\n+// frontend/components/NutritionPlan.js\r\n+\r\n+import React from 'react';\r\n+\r\n+const NutritionPlan = ({ plan, onStartDay, onDeletePlan }) => {\r\n+    if (!plan || !plan.dias) {\r\n+        return (\r\n+            <div className=\"p-8 max-w-4xl mx-auto\">\r\n+                <h1 className=\"text-3xl font-bold mb-4\">No se ha encontrado un plan válido.</h1>\r\n+                <button\r\n+                    onClick={onDeletePlan}\r\n+                    className=\"px-6 py-3 bg-red-500 text-white rounded-lg font-bold hover:bg-red-600\"\r\n+                >\r\n+                    Eliminar Plan y Crear Nuevo\r\n+                </button>\r\n+            </div>\r\n+        );\r\n+    }\r\n+\r\n+    return (\r\n+        <div className=\"p-8 max-w-4xl mx-auto\">\r\n+            <h1 className=\"text-2xl font-semibold mb-6\">Plan de 30 Días</h1>\r\n+\r\n+            {/* Semanas */}\r\n+            {Array.from({ length: 4 }, (_, semana) => (\r\n+                <div key={semana} className=\"mb-6\">\r\n+                    <h2 className=\"text-lg font-bold mb-4\">Semana {semana + 1}</h2>\r\n+                    <div className=\"grid grid-cols-1 gap-3\">\r\n+                        {plan.dias.slice(semana * 7, (semana + 1) * 7).map((dia) => (\r\n+                            <button\r\n+                                key={dia.dia}\r\n+                                onClick={() => onStartDay(dia.dia)}  // Usa la función onStartDay aquí\r\n+                                className={`flex justify-between items-center px-4 py-3 rounded-lg font-semibold transition-colors ${\r\n+                                    dia.dia === 1 ? 'bg-yellow-400 text-white' : 'bg-gray-200 text-gray-600'\r\n+                                } hover:bg-yellow-300`}\r\n+                            >\r\n+                                <span>{dia.dia} °Día</span>\r\n+                                <span className={`text-sm font-medium ${dia.dia === 1 ? 'bg-yellow-600' : 'bg-gray-400'} px-3 py-1 rounded-full`}>\r\n+                                    {dia.dia === 1 ? 'Comienzo' : '0%'}\r\n+                                </span>\r\n+                            </button>\r\n+                        ))}\r\n+                    </div>\r\n+                </div>\r\n+            ))}\r\n+\r\n+            {/* Botón para eliminar plan */}\r\n+            <div className=\"mt-8 flex justify-center\">\r\n+                <button\r\n+                    onClick={onDeletePlan}\r\n+                    className=\"px-6 py-3 bg-red-500 text-white rounded-lg font-bold hover:bg-red-600\"\r\n+                >\r\n+                    Eliminar Plan\r\n+                </button>\r\n+            </div>\r\n+        </div>\r\n+    );\r\n+};\r\n+\r\n+export default NutritionPlan;\r\n"
                }
            ],
            "date": 1730405370601,
            "name": "Commit-0",
            "content": "import React from 'react';\r\n\r\nconst NutritionPlan = ({ plan, onStartFirstDay }) => {\r\n  // Asegurarse de que el plan y sus propiedades estén definidas antes de usarlas\r\n  const calories = plan?.nutrition_plan?.calories ? plan.nutrition_plan.calories.toFixed(0) : '0';\r\n  const carbs = plan?.nutrition_plan?.carbs || 0;\r\n  const protein = plan?.nutrition_plan?.protein || 0;\r\n  const fats = plan?.nutrition_plan?.fats || 0;\r\n\r\n  const carbPercentage = Math.round((carbs / (carbs + protein + fats)) * 100) || 0;\r\n  const proteinPercentage = Math.round((protein / (carbs + protein + fats)) * 100) || 0;\r\n  const fatPercentage = Math.round((fats / (carbs + protein + fats)) * 100) || 0;\r\n\r\n  return (\r\n    <div className=\"p-8 max-w-4xl mx-auto\">\r\n      <h1 className=\"text-3xl font-bold mb-4\">Your Plan</h1>\r\n      <p className=\"text-gray-600 mb-8\">\r\n        Based on your assessment, we've created a personalized plan to help you reach your goals.\r\n      </p>\r\n\r\n      {/* Nutrition Section */}\r\n      <div className=\"mb-8\">\r\n        <h2 className=\"text-xl font-semibold mb-2\">Nutrition</h2>\r\n        <p>{calories} calories per day</p>\r\n        <p>\r\n          {carbPercentage}% carbs, {proteinPercentage}% protein, {fatPercentage}% fat\r\n        </p>\r\n      </div>\r\n\r\n      {/* Meal Plan Section */}\r\n      <div className=\"mb-8\">\r\n        <h2 className=\"text-xl font-semibold mb-2\">Meal Plan</h2>\r\n        <div className=\"flex gap-3 flex-wrap\">\r\n          {['Breakfast', 'Morning snack', 'Lunch', 'Afternoon snack', 'Dinner'].map((meal) => (\r\n            <button\r\n              key={meal}\r\n              className=\"px-4 py-2 bg-gray-200 rounded-full text-gray-800 font-medium\"\r\n            >\r\n              {meal}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Workout Section */}\r\n      <div className=\"mb-8\">\r\n        <h2 className=\"text-xl font-semibold mb-2\">Workouts</h2>\r\n        <p>4 workouts per week</p>\r\n        <div className=\"flex gap-3 flex-wrap\">\r\n          {['Strength', 'Cardio', 'Mobility', 'Recovery'].map((workout) => (\r\n            <button\r\n              key={workout}\r\n              className=\"px-4 py-2 bg-gray-200 rounded-full text-gray-800 font-medium\"\r\n            >\r\n              {workout}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Button to Start Plan */}\r\n      <div className=\"mt-8\">\r\n        <button\r\n          onClick={onStartFirstDay}\r\n          className=\"px-6 py-3 bg-yellow-500 text-white rounded-lg font-bold hover:bg-yellow-600\"\r\n        >\r\n          Start Day 1\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NutritionPlan;\r\n"
        }
    ]
}